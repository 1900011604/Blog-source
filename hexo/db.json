{"meta":{"version":1,"warehouse":"4.0.0"},"models":{"Asset":[{"_id":"source/CNAME","path":"CNAME","modified":1,"renderable":0},{"_id":"source/images/hello_world_reimu.jpg","path":"images/hello_world_reimu.jpg","modified":1,"renderable":0},{"_id":"node_modules/hexo-theme-fluid/source/css/gitalk.css","path":"css/gitalk.css","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-fluid/source/css/main.styl","path":"css/main.styl","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-fluid/source/img/Blue_Sky.jpg","path":"img/Blue_Sky.jpg","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-fluid/source/img/Dawn.jpg","path":"img/Dawn.jpg","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-fluid/source/img/Galaxy.jpg","path":"img/Galaxy.jpg","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-fluid/source/img/Manjaro.jpg","path":"img/Manjaro.jpg","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-fluid/source/img/Neowise.jpg","path":"img/Neowise.jpg","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-fluid/source/img/OrionStreams.jpg","path":"img/OrionStreams.jpg","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-fluid/source/img/Purple_Flower.jpg","path":"img/Purple_Flower.jpg","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-fluid/source/img/Reimu.jpg","path":"img/Reimu.jpg","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-fluid/source/img/Reimu_404.jpg","path":"img/Reimu_404.jpg","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-fluid/source/img/Volcano.jpg","path":"img/Volcano.jpg","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-fluid/source/img/Wave.jpg","path":"img/Wave.jpg","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-fluid/source/img/favicon.ico","path":"img/favicon.ico","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-fluid/source/img/github-fill.svg","path":"img/github-fill.svg","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-fluid/source/img/loading.gif","path":"img/loading.gif","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-fluid/source/img/time-fill.svg","path":"img/time-fill.svg","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-fluid/source/img/tools-fill.svg","path":"img/tools-fill.svg","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-fluid/source/img/user.svg","path":"img/user.svg","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-fluid/source/js/boot.js","path":"js/boot.js","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-fluid/source/js/color-schema.js","path":"js/color-schema.js","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-fluid/source/js/events.js","path":"js/events.js","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-fluid/source/js/img-lazyload.js","path":"js/img-lazyload.js","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-fluid/source/js/leancloud.js","path":"js/leancloud.js","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-fluid/source/js/local-search.js","path":"js/local-search.js","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-fluid/source/js/love.js","path":"js/love.js","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-fluid/source/js/plugins.js","path":"js/plugins.js","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-fluid/source/js/utils.js","path":"js/utils.js","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-fluid/source/xml/local-search.xml","path":"xml/local-search.xml","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-fluid/source/lib/hint/hint.min.css","path":"lib/hint/hint.min.css","modified":1,"renderable":1}],"Cache":[{"_id":"source/CNAME","hash":"7a7965f14321b89c7114d690b153c8a3ac347e4f","modified":1631936137184},{"_id":"source/_posts/Hello-World.md","hash":"148e6b96fe673c2111d5b8fbfdf1545f5d58d1b0","modified":1636043639894},{"_id":"source/_posts/Manjaro-KDE-Installation.md","hash":"eccf6a699cf6d1749b0787420918988d1c88b85a","modified":1636043574334},{"_id":"source/about/index.md","hash":"8e7fdfe5cce104201af2bb15289909a14985da9f","modified":1631936137184},{"_id":"source/js/time-calculator.js","hash":"fc14eabfcbf1b6f8bf71c45a14a8f30e5095ae4c","modified":1636044735870},{"_id":"source/tools/index.md","hash":"e0eb7578a69a1141c1fa3f2d0211b40ae8eabdf2","modified":1635900427949},{"_id":"source/_posts/tools/Time-Calculator.md","hash":"43b81401d9a27f9c3e032fefd765695b578a5315","modified":1636044665357},{"_id":"source/images/hello_world_reimu.jpg","hash":"5e5ccfd40c0bf7fd701f5410798ff2d800cb05f8","modified":1631936137188},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_category/category.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1634287459597},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_tag/tag.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1634287459611},{"_id":"node_modules/hexo-theme-fluid/.editorconfig","hash":"33218fbd623feb43edf5f99f15965392cecc44a6","modified":1636016775273},{"_id":"node_modules/hexo-theme-fluid/.eslintrc","hash":"4bc2b19ce2b8c4d242f97d4ccf2d741e68ab0097","modified":1636016775273},{"_id":"node_modules/hexo-theme-fluid/.gitattributes","hash":"a54f902957d49356376b59287b894b1a3d7a003f","modified":1636016775273},{"_id":"node_modules/hexo-theme-fluid/LICENSE","hash":"df5b54be535593d5442cebafbea34eb9bd69b987","modified":1635920483419},{"_id":"node_modules/hexo-theme-fluid/README.md","hash":"03cfa8e5f149514b57ef80dcb84eb7fea261370d","modified":1635920483719},{"_id":"node_modules/hexo-theme-fluid/README_en.md","hash":"ca8fd19a4948de1f253616a62c0e8a7d81f692f5","modified":1635920483716},{"_id":"node_modules/hexo-theme-fluid/_config.yml","hash":"cd5cbd070b6190aa0b4839400c0a1581e2654470","modified":1635920484016},{"_id":"node_modules/hexo-theme-fluid/package.json","hash":"18f04247801549fe78600c1ee9c601fcbea4cab3","modified":1635920483439},{"_id":"node_modules/hexo-theme-fluid/languages/en.yml","hash":"1e6c462a65b226c5b523782485b1bb2463139392","modified":1634300541394},{"_id":"node_modules/hexo-theme-fluid/languages/zh-CN.yml","hash":"700ff085287357e733084315f9f9de0455a90938","modified":1634300567684},{"_id":"node_modules/hexo-theme-fluid/languages/zh-TW.yml","hash":"ff874f4de5a741f381d60a848c3eb1706ce953c9","modified":1634300588388},{"_id":"node_modules/hexo-theme-fluid/layout/404.ejs","hash":"689d9f4efd2a7f5edfd9b24561a7ade69d46617c","modified":1636016775273},{"_id":"node_modules/hexo-theme-fluid/layout/about.ejs","hash":"ad6fed7b646d3ca961db83db0fbe020e3a5d42ad","modified":1636016775277},{"_id":"node_modules/hexo-theme-fluid/layout/archive.ejs","hash":"472d0813ca5b88000a7bc6039f33b7e27b5a3216","modified":1636016775277},{"_id":"node_modules/hexo-theme-fluid/layout/categories.ejs","hash":"20c2a195a109d2a263b5fa6e79cbcc62932508ad","modified":1636016775277},{"_id":"node_modules/hexo-theme-fluid/layout/category.ejs","hash":"58291dfec65c36889dfce0ddc603540b67e4c598","modified":1636016775277},{"_id":"node_modules/hexo-theme-fluid/layout/index.ejs","hash":"666476260a2cead2cc2928d51977c4a7ba8de6bb","modified":1636016775277},{"_id":"node_modules/hexo-theme-fluid/layout/layout.ejs","hash":"f2b3fe727f1b3aff1b463fa1d78fcef7e4f866fc","modified":1636017687814},{"_id":"node_modules/hexo-theme-fluid/layout/links.ejs","hash":"2a7b49f0f9aecf07550b5a0b99242aab5654cf2b","modified":1636016775277},{"_id":"node_modules/hexo-theme-fluid/layout/page.ejs","hash":"1014b901d396f4fc445cb1ffc938d5380d894d71","modified":1636016775277},{"_id":"node_modules/hexo-theme-fluid/layout/post.ejs","hash":"79e3679a7069351a6172c281b9d09f59d7580484","modified":1636016775280},{"_id":"node_modules/hexo-theme-fluid/layout/tag.ejs","hash":"0ad89eb7c92a822980fa9a85285e6d94ad845d1d","modified":1636016775280},{"_id":"node_modules/hexo-theme-fluid/layout/tags.ejs","hash":"1d06af34b6cf1d8a20d2eb565e309326ceba309f","modified":1636016775280},{"_id":"node_modules/hexo-theme-fluid/.github/ISSUE_TEMPLATE/bug_report.md","hash":"16d33eb89ecf90f4046720fde5395d972c7ba1fd","modified":1636016775283},{"_id":"node_modules/hexo-theme-fluid/.github/ISSUE_TEMPLATE/bug_report_zh.md","hash":"af977ed0792508bb0766ea8afe82d34ef1e8fb3c","modified":1636016775283},{"_id":"node_modules/hexo-theme-fluid/.github/ISSUE_TEMPLATE/feature_request.md","hash":"c134dd57ffd269b93402ccfffe7dbe0f0b583bec","modified":1636016775283},{"_id":"node_modules/hexo-theme-fluid/.github/ISSUE_TEMPLATE/feature_request_zh.md","hash":"ed08574b196447376dd74411cca664ac9227a5d4","modified":1636016775283},{"_id":"node_modules/hexo-theme-fluid/.github/ISSUE_TEMPLATE/question.md","hash":"ab5eab9e3ff889c4ba7fd82846e7f5b7ae15bebc","modified":1636016775283},{"_id":"node_modules/hexo-theme-fluid/.github/ISSUE_TEMPLATE/question_zh.md","hash":"e24b470f7aa8044499a4f5e39634e5dc43899011","modified":1636016775283},{"_id":"node_modules/hexo-theme-fluid/.github/workflows/limit.yaml","hash":"f8bd2edeb4424ee7a055b31583445d5d5dff91a4","modified":1636016775287},{"_id":"node_modules/hexo-theme-fluid/layout/_partial/archive-list.ejs","hash":"53a4f6029373a40394a87aba9284696a71610f90","modified":1636016775277},{"_id":"node_modules/hexo-theme-fluid/layout/_partial/beian.ejs","hash":"58b4bbe36386de4305a8da5ffd7d56802df23049","modified":1636016775277},{"_id":"node_modules/hexo-theme-fluid/layout/_partial/css.ejs","hash":"c363829a4b80f74fc1c565e41f6dab41c95006ea","modified":1636016775277},{"_id":"node_modules/hexo-theme-fluid/layout/_partial/footer.ejs","hash":"a62278c38a310da495d96c39abacacef266945cb","modified":1636016775277},{"_id":"node_modules/hexo-theme-fluid/layout/_partial/head.ejs","hash":"7d0cf31f2595cfe6d5ad31d569654f21a00dfd77","modified":1636016775277},{"_id":"node_modules/hexo-theme-fluid/layout/_partial/nav.ejs","hash":"e71b3c4aa263163597d31b1f91e5a1a877084cfd","modified":1636016775277},{"_id":"node_modules/hexo-theme-fluid/layout/_partial/paginator.ejs","hash":"0f38a2c238169edcb63fc46c23bfc529ff3859b7","modified":1636016775277},{"_id":"node_modules/hexo-theme-fluid/layout/_partial/post-meta.ejs","hash":"32a17edadeed40da6db21d2d8031bd47d2fc9bf4","modified":1636016775280},{"_id":"node_modules/hexo-theme-fluid/layout/_partial/scripts.ejs","hash":"0ee838b6fcd895d21a29d9d67dbb99b752d623d1","modified":1636016775280},{"_id":"node_modules/hexo-theme-fluid/layout/_partial/search.ejs","hash":"cdd7919fa01f6ef7ccc09938d662ff3d77f5d999","modified":1636016775280},{"_id":"node_modules/hexo-theme-fluid/layout/_partial/statistics.ejs","hash":"920bc618d357d48d2b96f8758f6ae8f9488fc4d8","modified":1636016775280},{"_id":"node_modules/hexo-theme-fluid/layout/_partial/toc.ejs","hash":"3d2fb5552f373e5a0c56bc356702d807bcbcb411","modified":1636016775280},{"_id":"node_modules/hexo-theme-fluid/scripts/events/index.js","hash":"44faef3e77ab08b91e4c5c6f1cd9087a9faff443","modified":1635920483436},{"_id":"node_modules/hexo-theme-fluid/scripts/filters/post-filter.js","hash":"6c37e9f1ac1d6d00b3c32794e02e244dba942cd9","modified":1635920483439},{"_id":"node_modules/hexo-theme-fluid/scripts/filters/locals.js","hash":"58d0fec976f6b1d35e7ea03edc45414088acf05c","modified":1635920483436},{"_id":"node_modules/hexo-theme-fluid/scripts/generators/pages.js","hash":"d9971f15fbb6b775e3d31a1b9b45011959395010","modified":1635920483439},{"_id":"node_modules/hexo-theme-fluid/scripts/helpers/export-config.js","hash":"cde964c8cd3217268a231de5e018a62c53c2e047","modified":1635920483436},{"_id":"node_modules/hexo-theme-fluid/scripts/generators/local-search.js","hash":"fc2c50405b771b06b7f6cfc4e9de97b992691555","modified":1635920483436},{"_id":"node_modules/hexo-theme-fluid/scripts/helpers/page.js","hash":"4607607445233b3029ef20ed5e91de0da0a7f9c5","modified":1635920483439},{"_id":"node_modules/hexo-theme-fluid/scripts/helpers/url.js","hash":"2a6a8288176d0e0f6ec008056bf2745a86e8943e","modified":1635920483439},{"_id":"node_modules/hexo-theme-fluid/scripts/helpers/utils.js","hash":"3aa5b4ea879cd34d3a32468d88da18d72cbcc8e0","modified":1635920483439},{"_id":"node_modules/hexo-theme-fluid/scripts/tags/button.js","hash":"3eb43a8cdea0a64576ad6b31b4df6c2bf5698d4c","modified":1635920483432},{"_id":"node_modules/hexo-theme-fluid/scripts/tags/checkbox.js","hash":"63468f7875c09d9557fe8315afc97175745d9087","modified":1635920483432},{"_id":"node_modules/hexo-theme-fluid/scripts/helpers/wordcount.js","hash":"8e33f915028ac56258f6999d19b1ad8d800cecfe","modified":1635920483439},{"_id":"node_modules/hexo-theme-fluid/scripts/tags/group-image.js","hash":"4aeebb797026f1df25646a5d69f7fde79b1bcd26","modified":1635920483436},{"_id":"node_modules/hexo-theme-fluid/scripts/tags/label.js","hash":"f05a6d32cca79535b22907dc03edb9d3fa2d8176","modified":1635920483436},{"_id":"node_modules/hexo-theme-fluid/scripts/tags/mermaid.js","hash":"75160561e1ef3603b6d2ad2938464ab1cb77fd38","modified":1635920483436},{"_id":"node_modules/hexo-theme-fluid/scripts/tags/note.js","hash":"f52f3a005b41f48b4da274ac64710177c8d4502f","modified":1635920483439},{"_id":"node_modules/hexo-theme-fluid/scripts/utils/compare-versions.js","hash":"dbbc928c914fc2bd242cd66aa0c45971aec13a5d","modified":1635920483436},{"_id":"node_modules/hexo-theme-fluid/scripts/utils/url-join.js","hash":"718aab5e7b2059a06b093ca738de420d9afa44ba","modified":1635920483439},{"_id":"node_modules/hexo-theme-fluid/source/css/main.styl","hash":"d5a8a59c8d1fd17d699a951e59c4ce9ae44c419d","modified":1634287459600},{"_id":"node_modules/hexo-theme-fluid/source/css/gitalk.css","hash":"a57b3cc8e04a0a4a27aefa07facf5b5e7bca0e76","modified":1634287459097},{"_id":"node_modules/hexo-theme-fluid/scripts/utils/object.js","hash":"649457796374c79e49a19bd541e4ad8e78fe8995","modified":1635920483439},{"_id":"node_modules/hexo-theme-fluid/source/img/time-fill.svg","hash":"345a3fd1a623d300041a4c3a2da7629325d4ddc7","modified":1631678330000},{"_id":"node_modules/hexo-theme-fluid/source/img/loading.gif","hash":"2d2fc0f947940f98c21afafef39ecf226a2e8d55","modified":1631678330000},{"_id":"node_modules/hexo-theme-fluid/source/img/Volcano.jpg","hash":"92a8d3d645e5b4a993fedec22ed70962e8819bae","modified":1631678330000},{"_id":"node_modules/hexo-theme-fluid/source/img/tools-fill.svg","hash":"5ce68caf1c165b9cb4cbae6bae03c36e0880559d","modified":1631678330000},{"_id":"node_modules/hexo-theme-fluid/source/img/github-fill.svg","hash":"a7eabcc8d765b9b23e2ef6f20c1a65b797681bbb","modified":1631678330000},{"_id":"node_modules/hexo-theme-fluid/source/img/user.svg","hash":"0329a77aacb701a644d05344856267499e8d7215","modified":1634302783683},{"_id":"node_modules/hexo-theme-fluid/source/js/boot.js","hash":"3de344ee619da989f6dccf7c2ae459fe91075983","modified":1634287459331},{"_id":"node_modules/hexo-theme-fluid/source/js/img-lazyload.js","hash":"cbdeca434ec4da51f488c821d51b4d23c73294af","modified":1634287459347},{"_id":"node_modules/hexo-theme-fluid/source/js/color-schema.js","hash":"2520c6459b544a4e965b838f8095e2a84390a43c","modified":1634287459334},{"_id":"node_modules/hexo-theme-fluid/source/js/leancloud.js","hash":"4a787cfce27045aa0a92ec22e84f2ccf30cabc4c","modified":1634287459348},{"_id":"node_modules/hexo-theme-fluid/source/js/love.js","hash":"f307f139ce68b6695a7270350403d634a4aef3d2","modified":1631678330000},{"_id":"node_modules/hexo-theme-fluid/source/js/local-search.js","hash":"633f0142c657805359b0197f287e12ae4bcde731","modified":1634287459354},{"_id":"node_modules/hexo-theme-fluid/source/js/events.js","hash":"4b9d2676c9544db9cc40a8c7d18456792299ba86","modified":1634287459340},{"_id":"node_modules/hexo-theme-fluid/source/js/plugins.js","hash":"d058f30bd09b28769c4d8313428ff23dfc8d52dd","modified":1634287459366},{"_id":"node_modules/hexo-theme-fluid/source/js/utils.js","hash":"4a43f2700e91937650bef511fd438825b001c4c6","modified":1634287459367},{"_id":"node_modules/hexo-theme-fluid/source/xml/local-search.xml","hash":"8c96ba6a064705602ce28d096fd7dd9069630a55","modified":1634287459611},{"_id":"node_modules/hexo-theme-fluid/layout/_partial/comments/changyan.ejs","hash":"c9b2d68ed3d375f1953e7007307d2a3f75ed6249","modified":1636016775277},{"_id":"node_modules/hexo-theme-fluid/layout/_partial/comments/cusdis.ejs","hash":"5f9dc012be27040bbe874d0c093c0d53958cc987","modified":1636016775277},{"_id":"node_modules/hexo-theme-fluid/layout/_partial/comments/disqus.ejs","hash":"aab4a4d24c55231a37db308ae94414319cecdd9b","modified":1636016775277},{"_id":"node_modules/hexo-theme-fluid/layout/_partial/comments/gitalk.ejs","hash":"843bc141a4545eb20d1c92fb63c85d459b4271ec","modified":1636016775277},{"_id":"node_modules/hexo-theme-fluid/layout/_partial/comments/livere.ejs","hash":"2264758fed57542a7389c7aa9f00f1aefa17eb87","modified":1636016775277},{"_id":"node_modules/hexo-theme-fluid/layout/_partial/comments/remark42.ejs","hash":"d4e9532feeb02aed61bd15eda536b5b631454dac","modified":1636016775280},{"_id":"node_modules/hexo-theme-fluid/layout/_partial/comments/twikoo.ejs","hash":"1af53bc0be642610a3a4d4e7c05287854a821508","modified":1636016775280},{"_id":"node_modules/hexo-theme-fluid/layout/_partial/comments/utterances.ejs","hash":"e1ed6530dfd7310f91060a75766a93ac3c39be3a","modified":1636016775280},{"_id":"node_modules/hexo-theme-fluid/layout/_partial/comments/valine.ejs","hash":"4052ab2a8f78efa92f0fe17abe8f66135943390a","modified":1636016775280},{"_id":"node_modules/hexo-theme-fluid/layout/_partial/comments/waline.ejs","hash":"21e00443054802e893aac1f668b69d5bb4b39b3a","modified":1636016775280},{"_id":"node_modules/hexo-theme-fluid/layout/_partial/plugins/analytics.ejs","hash":"557077a8825fffc0a2c7fe2b29f319287950244f","modified":1636016775277},{"_id":"node_modules/hexo-theme-fluid/layout/_partial/plugins/math.ejs","hash":"a7ed1d3079c32497c8955ca75f5fb6992e5ffb8b","modified":1636016775277},{"_id":"node_modules/hexo-theme-fluid/layout/_partial/plugins/mermaid.ejs","hash":"10ed1f9a611449d37736e17c4e251127b38b3772","modified":1636016775277},{"_id":"node_modules/hexo-theme-fluid/layout/_partial/plugins/nprogress.ejs","hash":"4c2d39ce816b8a6dcd6b53113c8695f8bd650a23","modified":1636016775277},{"_id":"node_modules/hexo-theme-fluid/layout/_partial/plugins/typed.ejs","hash":"ece659572cf4e12638a1607fca512c25098bbd82","modified":1636016775280},{"_id":"node_modules/hexo-theme-fluid/scripts/events/lib/compatible-configs.js","hash":"b5fd5a2d9c463eb59318af0f47c591c485b6ad27","modified":1635920483436},{"_id":"node_modules/hexo-theme-fluid/scripts/events/lib/highlight.js","hash":"deed966f38cf0c8dee3f72e5b1f2e878510db0e1","modified":1635920483436},{"_id":"node_modules/hexo-theme-fluid/scripts/events/lib/lazyload.js","hash":"9ba0d4bc224e22af8a5a48d6ff13e5a0fcfee2a4","modified":1635920483436},{"_id":"node_modules/hexo-theme-fluid/scripts/events/lib/footnote.js","hash":"3b2abc5f5e3b681874637e98e047dc4969eb1983","modified":1635920483436},{"_id":"node_modules/hexo-theme-fluid/scripts/events/lib/hello.js","hash":"28e186c32576eb3d5d923273471a001c47fe8071","modified":1635920483436},{"_id":"node_modules/hexo-theme-fluid/source/css/_functions/base.styl","hash":"2e46f3f4e2c9fe34c1ff1c598738fc7349ae8188","modified":1634287459596},{"_id":"node_modules/hexo-theme-fluid/source/css/_variables/base.styl","hash":"63aedd67d90d641cc672540db20ef615f528c9f1","modified":1634287459597},{"_id":"node_modules/hexo-theme-fluid/scripts/events/lib/merge-configs.js","hash":"c1db1a4f9eca6e36b660530641e3a4fb6a30c8d8","modified":1635920483436},{"_id":"node_modules/hexo-theme-fluid/source/lib/hint/hint.min.css","hash":"b38df228460ebfb4c0b6085336ee2878fe85aafe","modified":1634287459097},{"_id":"node_modules/hexo-theme-fluid/source/css/_mixins/base.styl","hash":"542e306ee9494e8a78e44d6d7d409605d94caeb3","modified":1634287459596},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/pages.styl","hash":"b8e887bc7fb3b765a1f8ec9448eff8603a41984f","modified":1634287459600},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_archive/archive.styl","hash":"6e6f22b664199772370b59ce1678b0c148b5849f","modified":1634287459595},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_about/about.styl","hash":"97fe42516ea531fdad771489b68aa8b2a7f6ae46","modified":1634287459594},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_base/inline.styl","hash":"d547ab0b91f84eb0acd0bc0c5d716ce17c30361a","modified":1634287459599},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_base/keyframes.styl","hash":"94065ea50f5bef7566d184f2422f6ac20866ba22","modified":1634287459599},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_base/base.styl","hash":"cd55a2dce6b9d3e165a0a26d0b5bf7f649006bcd","modified":1634287459596},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_base/rewrite.styl","hash":"c66e0da2c0d05e76a686a77ab4e74f0d2e89777d","modified":1634287459610},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_base/color-schema.styl","hash":"32fb938d72b2d86159cb315a98b086bd17fa4415","modified":1634287459597},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_category/categories.styl","hash":"1ab7db37c2f7dc7ccdb994dcb41c16a4c8920397","modified":1634287459597},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_post/post.styl","hash":"3a6b4f8a29648d9d2c1e99b52a7b42df3f15cf62","modified":1634287459600},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_index/index.styl","hash":"616c1f7147078c3d532dd1cfd2af09c0c3a816f0","modified":1634287459599},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_links/links.styl","hash":"7e32a3268accf3d524209c213e15e2d5d5e2e1a6","modified":1634287459600},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_tag/tags.styl","hash":"65bfc01c76abc927fa1a23bf2422892b0d566c3f","modified":1634287459611},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_base/_widget/banner.styl","hash":"30f8fab95a5214d79df0ccc02b937df8bd885676","modified":1634287459596},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_post/tag_plugin.styl","hash":"b89b96c8a6a433a6f372b42710554b05cab85a24","modified":1634287459611},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_base/_widget/board.styl","hash":"32d90bcc8bf2fd5d8d78e86a567973d4b69bcfa1","modified":1634287459597},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_base/_widget/copy-btn.styl","hash":"9f932ca3f9625c13aa5353f58319881e62c0c653","modified":1634287459597},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_base/_widget/footer.styl","hash":"0ce7552dc4993926426019398d73e817cfd841a1","modified":1634287459598},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_base/_widget/header.styl","hash":"d8011325756eb6e4ce619b3e7b4d6d80c2de8a57","modified":1634287459599},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_base/_widget/qrcode.styl","hash":"78704a94c0436097abfb0e0a57abeb3429c749b7","modified":1634287459600},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_base/_widget/scroll-btn.styl","hash":"55e10a6965462f8f62f85e75fd5e143af02a4b44","modified":1634287459610},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_base/_widget/search.styl","hash":"10f7e91a91e681fb9fe46f9df7707b9ef78707c8","modified":1634287459610},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_base/_widget/footnote.styl","hash":"ae9289cc89649af2042907f8a003303b987f3404","modified":1634287459599},{"_id":"node_modules/hexo-theme-fluid/source/img/favicon.ico","hash":"16a85645120a2516dc8ca1ceaece784e3d636c5c","modified":1631678330000},{"_id":"node_modules/hexo-theme-fluid/source/img/Purple_Flower.jpg","hash":"5c4b2b02074f9f9e814a4e0f3fb9a5dafa04c20b","modified":1631678330000},{"_id":"node_modules/hexo-theme-fluid/source/img/Reimu_404.jpg","hash":"b082442878af7f97385d24739767e57bc22a2e4f","modified":1634301035147},{"_id":"node_modules/hexo-theme-fluid/source/img/Blue_Sky.jpg","hash":"f292a0b0ef166afd16c71582d80060881b8023cd","modified":1631678330000},{"_id":"node_modules/hexo-theme-fluid/source/img/OrionStreams.jpg","hash":"9ebddc627a4e3467a659d911a03f95c9c06e2320","modified":1634302028903},{"_id":"node_modules/hexo-theme-fluid/source/img/Manjaro.jpg","hash":"fd18e2f76000c777bc36c064908e378b124fdb4b","modified":1631678330000},{"_id":"node_modules/hexo-theme-fluid/source/img/Wave.jpg","hash":"b40750046df970aed601359c1a510864694606dc","modified":1631678330000},{"_id":"node_modules/hexo-theme-fluid/source/img/Reimu.jpg","hash":"cc234dac04e5ab49be90bcb2130a6306fb547579","modified":1631678330000},{"_id":"node_modules/hexo-theme-fluid/source/img/Dawn.jpg","hash":"5f7978d5bc29c57cd1b06d5cc8c5a2182ecc7f04","modified":1631678330000},{"_id":"node_modules/hexo-theme-fluid/source/img/Galaxy.jpg","hash":"db5f8902f73308035e5484770a6ac91d25fcf83c","modified":1636043722088},{"_id":"node_modules/hexo-theme-fluid/source/img/Neowise.jpg","hash":"65f0772022899f8c315714823122393b18b22638","modified":1636043738013},{"_id":"public/js/time-calculator.js","hash":"fc14eabfcbf1b6f8bf71c45a14a8f30e5095ae4c","modified":1636044755735},{"_id":"public/local-search.xml","hash":"4ef4fd7e52ea3bdd3a31673aec1ec892cd86c481","modified":1636044755735},{"_id":"public/about/index.html","hash":"70582d152b1dc3b20a9b04d8e991ade778057563","modified":1636044755735},{"_id":"public/tools/index.html","hash":"d9df4e0e4e5d9e8c858b8d646c8335e033eadc9a","modified":1636044755735},{"_id":"public/Manjaro-KDE-Installation/index.html","hash":"2dd5169ae174dc2060fa36f14c3e72c5bc8e1cf8","modified":1636044755735},{"_id":"public/archives/index.html","hash":"f1b83c1585e8892bb685f8fe768dfa209a86be9d","modified":1636044755735},{"_id":"public/archives/2021/09/index.html","hash":"753899adea0e19fcc21df2d7599570749a3bc8d7","modified":1636044755735},{"_id":"public/categories/教程/index.html","hash":"807e6c86834467c3f1a8fcca2c678ae1c06e839e","modified":1636044755735},{"_id":"public/archives/2021/11/index.html","hash":"cd484caebd4e68747c8b3d365758ce30505db61c","modified":1636044755735},{"_id":"public/categories/工具/index.html","hash":"66ae94ca26b9ff141b6421c1f466dcf52b6ae03e","modified":1636044755735},{"_id":"public/tags/Hello-World/index.html","hash":"4e873ab5d76e143b656bf1358b4ab0406018ab2e","modified":1636044755735},{"_id":"public/archives/2021/index.html","hash":"285b11303f783084fe7fccd21e4ef19597623c9b","modified":1636044755735},{"_id":"public/tags/Calculator/index.html","hash":"1a0f71f8ecbe81a77662f6d97931280d4fcbe50b","modified":1636044755735},{"_id":"public/tags/Linux/index.html","hash":"bb217fc0649224199134bcb4915ba343bb2d2e8f","modified":1636044755735},{"_id":"public/index.html","hash":"9220d5ca229060a82c7d72ffd3fe55e840598b75","modified":1636044755735},{"_id":"public/tags/Manjaro/index.html","hash":"c6b7ba931d0fc7f95603b5b9f89c4d06266cc175","modified":1636044755735},{"_id":"public/404.html","hash":"48cdbeeea56eca35274296bc970953dd257fd8c3","modified":1636044755735},{"_id":"public/tags/index.html","hash":"2ece24144f6ec443add191b1b1678176da4fdaff","modified":1636044755735},{"_id":"public/categories/index.html","hash":"3adda7873baa8187056318eae3fdec032464ed79","modified":1636044755735},{"_id":"public/links/index.html","hash":"c0af0ae22d8a896d3d7262726255838d5be067aa","modified":1636044755735},{"_id":"public/tags/Blog/index.html","hash":"266f4ba6ec8254fea7b430627a0807202fcfa3e8","modified":1636044755735},{"_id":"public/Hello-World/index.html","hash":"ecfdc920a9a1f2150a072b3bb289219b3174fdbc","modified":1636044755735},{"_id":"public/tools/Time-Calculator/index.html","hash":"146dbe51a2a7fdd07c228c798e19f091792e93ef","modified":1636044755735},{"_id":"public/CNAME","hash":"7a7965f14321b89c7114d690b153c8a3ac347e4f","modified":1636044755735},{"_id":"public/img/Volcano.jpg","hash":"92a8d3d645e5b4a993fedec22ed70962e8819bae","modified":1636044755735},{"_id":"public/img/time-fill.svg","hash":"345a3fd1a623d300041a4c3a2da7629325d4ddc7","modified":1636044755735},{"_id":"public/img/tools-fill.svg","hash":"5ce68caf1c165b9cb4cbae6bae03c36e0880559d","modified":1636044755735},{"_id":"public/img/user.svg","hash":"0329a77aacb701a644d05344856267499e8d7215","modified":1636044755735},{"_id":"public/img/loading.gif","hash":"2d2fc0f947940f98c21afafef39ecf226a2e8d55","modified":1636044755735},{"_id":"public/img/github-fill.svg","hash":"a7eabcc8d765b9b23e2ef6f20c1a65b797681bbb","modified":1636044755735},{"_id":"public/xml/local-search.xml","hash":"8c96ba6a064705602ce28d096fd7dd9069630a55","modified":1636044755735},{"_id":"public/img/favicon.ico","hash":"16a85645120a2516dc8ca1ceaece784e3d636c5c","modified":1636044755735},{"_id":"public/js/boot.js","hash":"3de344ee619da989f6dccf7c2ae459fe91075983","modified":1636044755735},{"_id":"public/js/events.js","hash":"4b9d2676c9544db9cc40a8c7d18456792299ba86","modified":1636044755735},{"_id":"public/css/gitalk.css","hash":"a57b3cc8e04a0a4a27aefa07facf5b5e7bca0e76","modified":1636044755735},{"_id":"public/js/img-lazyload.js","hash":"cbdeca434ec4da51f488c821d51b4d23c73294af","modified":1636044755735},{"_id":"public/js/leancloud.js","hash":"4a787cfce27045aa0a92ec22e84f2ccf30cabc4c","modified":1636044755735},{"_id":"public/js/plugins.js","hash":"d058f30bd09b28769c4d8313428ff23dfc8d52dd","modified":1636044755735},{"_id":"public/js/color-schema.js","hash":"2520c6459b544a4e965b838f8095e2a84390a43c","modified":1636044755735},{"_id":"public/js/utils.js","hash":"4a43f2700e91937650bef511fd438825b001c4c6","modified":1636044755735},{"_id":"public/js/local-search.js","hash":"633f0142c657805359b0197f287e12ae4bcde731","modified":1636044755735},{"_id":"public/lib/hint/hint.min.css","hash":"b38df228460ebfb4c0b6085336ee2878fe85aafe","modified":1636044755735},{"_id":"public/js/love.js","hash":"f307f139ce68b6695a7270350403d634a4aef3d2","modified":1636044755735},{"_id":"public/css/main.css","hash":"12fb4c832aed3d701e7645333596dcbaacfafe04","modified":1636044755735},{"_id":"public/img/Reimu_404.jpg","hash":"b082442878af7f97385d24739767e57bc22a2e4f","modified":1636044755735},{"_id":"public/img/Purple_Flower.jpg","hash":"5c4b2b02074f9f9e814a4e0f3fb9a5dafa04c20b","modified":1636044755735},{"_id":"public/img/OrionStreams.jpg","hash":"9ebddc627a4e3467a659d911a03f95c9c06e2320","modified":1636044755735},{"_id":"public/img/Blue_Sky.jpg","hash":"f292a0b0ef166afd16c71582d80060881b8023cd","modified":1636044755735},{"_id":"public/images/hello_world_reimu.jpg","hash":"5e5ccfd40c0bf7fd701f5410798ff2d800cb05f8","modified":1636044755735},{"_id":"public/img/Manjaro.jpg","hash":"fd18e2f76000c777bc36c064908e378b124fdb4b","modified":1636044755735},{"_id":"public/img/Wave.jpg","hash":"b40750046df970aed601359c1a510864694606dc","modified":1636044755735},{"_id":"public/img/Reimu.jpg","hash":"cc234dac04e5ab49be90bcb2130a6306fb547579","modified":1636044755735},{"_id":"public/img/Dawn.jpg","hash":"5f7978d5bc29c57cd1b06d5cc8c5a2182ecc7f04","modified":1636044755735},{"_id":"public/img/Galaxy.jpg","hash":"db5f8902f73308035e5484770a6ac91d25fcf83c","modified":1636044755735},{"_id":"public/img/Neowise.jpg","hash":"65f0772022899f8c315714823122393b18b22638","modified":1636044755735}],"Category":[{"name":"教程","_id":"ckvl6t11h0004jbn31ske5s3y"},{"name":"工具","_id":"ckvl6t11m0008jbn37k1hc8ke"}],"Data":[],"Page":[{"title":"about","date":"2021-09-13T06:30:08.000Z","layout":"about","_content":"\n# 程序应该只关注一个目标，并尽可能把它做好\n\n一位开源领域爱好者，相信开源文化和开源软件是对人类的一项伟大贡献。\n\n北京大学物理学院天文学系的学生，正在学习天文和 Linux 技术，使用 Manjaro KDE。\n\nA student at the Department of Astronomy, School of Physics, Peking  University, China. Learning Astronomy and Linux, using Manjaro KDE.\n","source":"about/index.md","raw":"---\ntitle: about\ndate: 2021-09-13 14:30:08\nlayout: about\n---\n\n# 程序应该只关注一个目标，并尽可能把它做好\n\n一位开源领域爱好者，相信开源文化和开源软件是对人类的一项伟大贡献。\n\n北京大学物理学院天文学系的学生，正在学习天文和 Linux 技术，使用 Manjaro KDE。\n\nA student at the Department of Astronomy, School of Physics, Peking  University, China. Learning Astronomy and Linux, using Manjaro KDE.\n","updated":"2021-09-18T03:35:37.184Z","path":"about/index.html","comments":1,"_id":"ckvl6t11a0000jbn39j22gvuy","content":"<h1 id=\"程序应该只关注一个目标，并尽可能把它做好\"><a href=\"#程序应该只关注一个目标，并尽可能把它做好\" class=\"headerlink\" title=\"程序应该只关注一个目标，并尽可能把它做好\"></a>程序应该只关注一个目标，并尽可能把它做好</h1><p>一位开源领域爱好者，相信开源文化和开源软件是对人类的一项伟大贡献。</p>\n<p>北京大学物理学院天文学系的学生，正在学习天文和 Linux 技术，使用 Manjaro KDE。</p>\n<p>A student at the Department of Astronomy, School of Physics, Peking  University, China. Learning Astronomy and Linux, using Manjaro KDE.</p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"程序应该只关注一个目标，并尽可能把它做好\"><a href=\"#程序应该只关注一个目标，并尽可能把它做好\" class=\"headerlink\" title=\"程序应该只关注一个目标，并尽可能把它做好\"></a>程序应该只关注一个目标，并尽可能把它做好</h1><p>一位开源领域爱好者，相信开源文化和开源软件是对人类的一项伟大贡献。</p>\n<p>北京大学物理学院天文学系的学生，正在学习天文和 Linux 技术，使用 Manjaro KDE。</p>\n<p>A student at the Department of Astronomy, School of Physics, Peking  University, China. Learning Astronomy and Linux, using Manjaro KDE.</p>\n"},{"_content":"function time_to_JD() {\n  var timezone = document.getElementById(\"timezone\").value;\n  var year = document.getElementById(\"year\").value;\n  var month = document.getElementById(\"month\").value;\n  var day = document.getElementById(\"day\").value;\n  var hour = document.getElementById(\"hour\").value;\n  var minute = document.getElementById(\"minute\").value;\n  var second = document.getElementById(\"second\").value;\n  var time = new Date(\n    Date.UTC(\n      year,\n      month - 1,\n      day,\n      Number(hour) - Number(timezone),\n      minute,\n      second,\n      0\n    )\n  );\n  var JD = document.getElementById(\"JD\");\n  JD.value = 2440587.5 + time.getTime() / 86400000;\n}\n\nfunction time_now() {\n  var today = new Date();\n  var h = today.getHours();\n  var m = today.getMinutes();\n  var s = today.getSeconds();\n  m = check_time(m);\n  s = check_time(s);\n  document.getElementById(\"clock\").innerHTML = h + \":\" + m + \":\" + s;\n  t = setTimeout(function () {\n    time_now();\n  }, 100);\n}\nfunction check_time(i) {\n  if (i < 10) {\n    i = \"0\" + i;\n  }\n  return i;\n}\n\nfunction time_now_to_JD() {\n  var time_now = new Date();\n  var JD_now = document.getElementById(\"JD_now\");\n  JD_now.value = 2440587.5 + time_now.getTime() / 86400000;\n}\n","source":"js/time-calculator.js","raw":"function time_to_JD() {\n  var timezone = document.getElementById(\"timezone\").value;\n  var year = document.getElementById(\"year\").value;\n  var month = document.getElementById(\"month\").value;\n  var day = document.getElementById(\"day\").value;\n  var hour = document.getElementById(\"hour\").value;\n  var minute = document.getElementById(\"minute\").value;\n  var second = document.getElementById(\"second\").value;\n  var time = new Date(\n    Date.UTC(\n      year,\n      month - 1,\n      day,\n      Number(hour) - Number(timezone),\n      minute,\n      second,\n      0\n    )\n  );\n  var JD = document.getElementById(\"JD\");\n  JD.value = 2440587.5 + time.getTime() / 86400000;\n}\n\nfunction time_now() {\n  var today = new Date();\n  var h = today.getHours();\n  var m = today.getMinutes();\n  var s = today.getSeconds();\n  m = check_time(m);\n  s = check_time(s);\n  document.getElementById(\"clock\").innerHTML = h + \":\" + m + \":\" + s;\n  t = setTimeout(function () {\n    time_now();\n  }, 100);\n}\nfunction check_time(i) {\n  if (i < 10) {\n    i = \"0\" + i;\n  }\n  return i;\n}\n\nfunction time_now_to_JD() {\n  var time_now = new Date();\n  var JD_now = document.getElementById(\"JD_now\");\n  JD_now.value = 2440587.5 + time_now.getTime() / 86400000;\n}\n","date":"2021-11-04T16:52:15.870Z","updated":"2021-11-04T16:52:15.870Z","path":"js/time-calculator.js","layout":"false","title":"","comments":1,"_id":"ckvl6t11f0002jbn301q5ae3d","content":"function time_to_JD() {\n  var timezone = document.getElementById(\"timezone\").value;\n  var year = document.getElementById(\"year\").value;\n  var month = document.getElementById(\"month\").value;\n  var day = document.getElementById(\"day\").value;\n  var hour = document.getElementById(\"hour\").value;\n  var minute = document.getElementById(\"minute\").value;\n  var second = document.getElementById(\"second\").value;\n  var time = new Date(\n    Date.UTC(\n      year,\n      month - 1,\n      day,\n      Number(hour) - Number(timezone),\n      minute,\n      second,\n      0\n    )\n  );\n  var JD = document.getElementById(\"JD\");\n  JD.value = 2440587.5 + time.getTime() / 86400000;\n}\n\nfunction time_now() {\n  var today = new Date();\n  var h = today.getHours();\n  var m = today.getMinutes();\n  var s = today.getSeconds();\n  m = check_time(m);\n  s = check_time(s);\n  document.getElementById(\"clock\").innerHTML = h + \":\" + m + \":\" + s;\n  t = setTimeout(function () {\n    time_now();\n  }, 100);\n}\nfunction check_time(i) {\n  if (i < 10) {\n    i = \"0\" + i;\n  }\n  return i;\n}\n\nfunction time_now_to_JD() {\n  var time_now = new Date();\n  var JD_now = document.getElementById(\"JD_now\");\n  JD_now.value = 2440587.5 + time_now.getTime() / 86400000;\n}\n","site":{"data":{}},"excerpt":"","more":"function time_to_JD() {\n  var timezone = document.getElementById(\"timezone\").value;\n  var year = document.getElementById(\"year\").value;\n  var month = document.getElementById(\"month\").value;\n  var day = document.getElementById(\"day\").value;\n  var hour = document.getElementById(\"hour\").value;\n  var minute = document.getElementById(\"minute\").value;\n  var second = document.getElementById(\"second\").value;\n  var time = new Date(\n    Date.UTC(\n      year,\n      month - 1,\n      day,\n      Number(hour) - Number(timezone),\n      minute,\n      second,\n      0\n    )\n  );\n  var JD = document.getElementById(\"JD\");\n  JD.value = 2440587.5 + time.getTime() / 86400000;\n}\n\nfunction time_now() {\n  var today = new Date();\n  var h = today.getHours();\n  var m = today.getMinutes();\n  var s = today.getSeconds();\n  m = check_time(m);\n  s = check_time(s);\n  document.getElementById(\"clock\").innerHTML = h + \":\" + m + \":\" + s;\n  t = setTimeout(function () {\n    time_now();\n  }, 100);\n}\nfunction check_time(i) {\n  if (i < 10) {\n    i = \"0\" + i;\n  }\n  return i;\n}\n\nfunction time_now_to_JD() {\n  var time_now = new Date();\n  var JD_now = document.getElementById(\"JD_now\");\n  JD_now.value = 2440587.5 + time_now.getTime() / 86400000;\n}\n"},{"title":"tools","date":"2021-11-03T00:45:22.000Z","layout":"links","_content":"","source":"tools/index.md","raw":"---\ntitle: tools\ndate: 2021-11-03 08:45:22\nlayout: links\n---\n","updated":"2021-11-03T00:47:07.949Z","path":"tools/index.html","comments":1,"_id":"ckvl6t11j0006jbn34jncepo2","content":"","site":{"data":{}},"excerpt":"","more":""}],"Post":[{"title":"Hello World","date":"2021-09-06T04:00:00.000Z","math":true,"index_img":"/img/Purple_Flower.jpg","banner_img":"/img/Purple_Flower.jpg","_content":"\n<iframe frameborder=\"no\" border=\"0\" marginwidth=\"0\" marginheight=\"0\" width=330 height=86 src=\"//music.163.com/outchain/player?type=2&id=22636684&auto=1&height=66\"></iframe>\n\n### 申请 GitHub Pages\n\n新建一个 repository，命名为 `(user_name).github.io`，隐私设置为 Public，再建一个 GitHub 仓库用来存放博客的源代码（可选）\n\n### 申请域名\n\n我选择的是阿里云，在[万网](https://wanwang.aliyun.com/)输入自己想要的域名并购买。一般来讲 `.top` 最便宜，`.xyz` 次之。 假设域名为 `example.top` 根据网站提示做好域名实名制认证等流程。在[域名控制台](https://dc.console.aliyun.com/next/#/domain/list/all-domain)中选择：域名 >> 操作 >> 解析\n\n解析中添加一条记录：\n\n```\n记录类型：CNAME；\n主机记录自选（我这里选择的是 blog，因为 www 经常无法与 GitHub Pages 连接）；\n解析线路选择默认；\n记录值选择(user_name).github.io；\nTTL选择“10分钟”\n```\n\n再去名为 `(user_name).github.io` 的 repository，新建一个文件，文件名为 `CNAME`，填入 `blog.example.top` ，通过 GitHub 的网络检测后就可以使用。\n\n此时可以分别在浏览器中输入 `(user_name).github.io` 和 `blog.example.top` 试一试，如果能显示`README.md` 中的内容则设置成功。\n\n### Hexo 搭建并添加文章\n\n我选择用 [Hexo](https://hexo.io/zh-cn/index.html)\n\n建议在 Linux 上搭建，而不用 Windows\n\n下载 Node-js 和 npm：`sudo pacman -S nodejs npm`\n\n下载 Hexo 的方法如下：（推荐如下的全局下载方案）\n\n```bash\nmkdir ~/.npm-global\nnpm config set prefix '~/.npm-global'\n```\n\n然后在 `~/.profile` 中加入一行：`export PATH=~/.npm-global/bin:$PATH`\n\n最后输入：（npm 5.0.0 开始，默认安装不需要 `–-save` 选项，已经可以自动执行）\n\n```bash\nsource ~/.profile\nnpm install -g hexo-cli\n```\n\n找一个空文件夹 `(hexo_folder)`，运行：\n\n```bash\nnpx hexo init (hexo_folder)\ncd (hexo_folder)\nnpm install\n```\n\n所有的 npm 和 hexo 命令都要在`(hexo_folder)`（下文称为“**博客目录**”）下执行\n\n全局配置的官方指南在[这里](https://hexo.io/zh-cn/docs/)，在 `(hexo_folder)/_config.yml` 下修改：\n\n```yaml\nurl: https://blog.example.top\npermalink: :title/\npermalink_defaults:\npretty_urls:\n  trailing_index: false\n  trailing_html: false\n```\n\n添加文章：`npx hexo new post hello`，这生成 `blog.example.top/hello`\n\n在子文件夹下添加文章：`npx hexo new post --path hello/me`，这生成 `blog.example.top/hello/me`\n\n每篇文章的 Markdown 文件内一开始有用 `---` 分隔的部分，下文称为 **Front-matter**，例如：\n\n```\ntitle: Hello World\ndate: 2021-09-06 12:00:00\nmath: true\ncategory:\n- 教程\ntag:\n- Hello World\n- Blog\nindex_img: /img/Purple_Flower.jpg\nbanner_img: /img/Purple_Flower.jpg\n```\n\n### Fluid 主题\n\n我选择的是 [Fluid](https://hexo.fluid-dev.com/) 主题，安装方法：\n\n```bash\nnpm install hexo-theme-fluid\n```\n\n这样的话它会保存在`(hexo_folder)/node_modules/hexo-theme-fluid`（下文称为“**主题目录**”），更新主题需要在`(hexo_folder)`下执行`npm update hexo-theme-fluid`\n\n可以在 `(hexo_folder)/themes` 中创建软链接：\n\n```bash\nln -s ../node_modules/hexo-theme-fluid/\n```\n\nFluid 配置的官方指南在 https://hexo.fluid-dev.com/docs/guide/\n\n在`(hexo_folder)/_config.yml`下修改：`theme:fluid`\n\n在博客目录下创建 `_config.fluid.yml` 文件，将主题目录下的 `_config.yml`复制过去，以后如果修改任何主题配置，都只需修改 `_config.fluid.yml` 的配置即可，其优先级比主题目录下的 `_config.yml`高。\n\n- 更改用于浏览器标签的图标：`favicon: /img/favicon.png`，`apple_touch_icon`同步修改\n\n- `force_https: true`\n\n- 代码高亮：`highlightjs: style: \"Vs\"`\n\n- 打字机打印速度：`typespeed: 64`，不开启循环播放\n\n- 为文章内容中的标题添加锚图标：`icon: \"§\"`\n\n- 主题字体配置：\n\n```yaml\nfont:\n    font_size: 16px\n    font_family: Noto Sans CJK SC, sans-serif\n    code_font_size: 100%\n```\n\n- 导航栏左侧的标题：`blog_title: \"Home\"`\n\n- 关于页中 `icons` 一项只保留 GitHub\n\n- 每个页面的 Banner 头图：`banner_img` ，自选\n\n- 首页副标题（slogan）的独立设置：`slogan: text: ` 自选\n\n- 自动截取文章摘要：`auto_excerpt: enable: false`\n\n- 隐藏版权声明：`copyright: enable: false`\n\n- MathJax 渲染（虽然慢但是支持比 Katex 多而且字体更美观）：严格按照[官方文档](https://hexo.fluid-dev.com/docs/guide/##latex-数学公式)，记得更改渲染引擎为`hexo-renderer-kramed` 并删掉原有的 `hexo-renderer-marked` ，书写格式见下方 **LaTeX Test** 一节，如需使用，需在 Front-matter 中指定 `math: true`，支持行内公式（和行间公式）。但是这样会修改丢失对 Markdown 复选框的支持，开启则需要将如下代码加入到本地的`(hexo_folder)/node_modules/hexo-renderer-kramed/lib/renderer.js`的第19行中（参考[这里](https://corecabin.cn/2021/08/14/solve-some-problems-of-hexo-renderer-kramed-rendering-conflicts/)），行内公式和行内代码冲突也可以参考[这里](https://corecabin.cn/2021/08/14/solve-some-problems-of-hexo-renderer-kramed-rendering-conflicts/)\n\n```js\n// Support To-Do List\nRenderer.prototype.listitem = function(text) {\n  if (/^\\s*\\[[x ]\\]\\s*/.test(text)) {\n    text = text.replace(/^\\s*\\[ \\]\\s*/, '<input type=\"checkbox\"></input> ').replace(/^\\s*\\[x\\]\\s*/, '<input type=\"checkbox\" checked></input> ');\n    return '<li style=\"list-style: none\">' + text + '</li>\\n';\n  } else {\n    return '<li>' + text + '</li>\\n';\n  }\n};\n```\n\n### 如何用“友链”页的模板创建一个“工具”页\n\n首先新建一个页面：`npx hexo new page tools`，注意发表文章要将模板 `page` 改为 `post`\n\n这样就有了 `example.top/tools/` 的页面\n\n再找到 `icon-tools` 的图标：https://blog.csdn.net/Xiaoming782893687/article/details/90744911\n\n实际操作是：在 `custom_css` 一栏中加入 `- //at.alicdn.com/t/font_2794470_ewg5czgn3cd.css`，然后就可以在导航栏菜单 `menu:` 一栏中加入 `- { key: \"tools\", link: \"/tools/\", icon: \"iconfont icon-tools\" }`\n\n在博客目录内的 `/source/tools/index.md` 的 Front-matter 加入 `layout: links`，这会引入主题目录中的模板：`/layout/links.ejs`\n\n于是开始设置`_config.fluid.yml`：\n\n```yaml\nlinks:\n  enable: true\n  banner_img: (your_picture)\n  banner_img_height: 60\n  banner_mask_alpha: 0.3\n  subtitle:\n  # 友链的成员项\n  # Member item of page\n  items:\n    - {\n      title: \"(your_title)\",\n      intro: \"(your_intro)\",\n      link: \"(your_link)\",\n      avatar: \"(your_avatar)\"\n    }\n```\n\n并修改主题目录下`/languages/`中的所有`.yml`文件，例如`en.yml`中改为：\n\n```yaml\nlinks:\n  title: Tools\n  subtitle: Tools\n```\n\n### 如何在导航栏菜单创建一个 GitHub 链接\n\n和创建“工具”方法类似，这次需要找到 `icon-github`（自带图标太小了）的图标\n\n实际操作是：在 `custom_css` 一栏中加入 `- //at.alicdn.com/t/font_2794470_brhhjh3wx87.css`，然后就可以在导航栏菜单 `menu:` 一栏中加入 `- { key: \"GitHub\", link: \"https://github.com/(user_name)\", icon: \"iconfont icon-github\" }` 即可\n\n### 加入特效：鼠标点击有小红心\n\n在主题目录下的 `/source/js` 文件夹中新建文件 `love.js`，在 `love.js` 文件中添加以下代码：（修改过，更新了已经弃用的部分，原始代码参见[这里](https://segmentfault.com/a/1190000007215988)）\n\n```js\n!(function (e, t, a) {\n  function n() {\n    c(\n      \".heart{width: 10px;height: 10px;position: fixed;background: #f00;transform: rotate(45deg);-webkit-transform: rotate(45deg);-moz-transform: rotate(45deg);}.heart:after,.heart:before{content: '';width: inherit;height: inherit;background: inherit;border-radius: 50%;-webkit-border-radius: 50%;-moz-border-radius: 50%;position: fixed;}.heart:after{top: -5px;}.heart:before{left: -5px;}\"\n    ),\n      o(),\n      r();\n  }\n  function r() {\n    for (var e = 0; e < d.length; e++)\n      d[e].alpha <= 0\n        ? (t.body.removeChild(d[e].el), d.splice(e, 1))\n        : (d[e].y--,\n          (d[e].scale += 0.004),\n          (d[e].alpha -= 0.013),\n          (d[e].el.style.cssText =\n            \"left:\" +\n            d[e].x +\n            \"px;top:\" +\n            d[e].y +\n            \"px;opacity:\" +\n            d[e].alpha +\n            \";transform:scale(\" +\n            d[e].scale +\n            \",\" +\n            d[e].scale +\n            \") rotate(45deg);background:\" +\n            d[e].color +\n            \";z-index:99999\"));\n    requestAnimationFrame(r);\n  }\n  function o() {\n    var t = \"function\" == typeof e.onclick && e.onclick;\n    e.onclick = function (e) {\n      t && t(), i(e);\n    };\n  }\n  function i(e) {\n    var a = t.createElement(\"div\");\n    (a.className = \"heart\"),\n      d.push({\n        el: a,\n        x: e.clientX - 5,\n        y: e.clientY - 5,\n        scale: 1,\n        alpha: 1,\n        color: s(),\n      }),\n      t.body.appendChild(a);\n  }\n  function c(e) {\n    var a = t.createElement(\"style\");\n    try {\n      a.appendChild(t.createTextNode(e));\n    } catch (t) {\n      a.styleSheet.cssText = e;\n    }\n    t.getElementsByTagName(\"head\")[0].appendChild(a);\n  }\n  function s() {\n    return (\n      \"rgb(\" +\n      ~~(255 * Math.random()) +\n      \",\" +\n      ~~(255 * Math.random()) +\n      \",\" +\n      ~~(255 * Math.random()) +\n      \")\"\n    );\n  }\n  var d = [];\n  (e.requestAnimationFrame = (function () {\n    return (\n      e.requestAnimationFrame ||\n      e.webkitRequestAnimationFrame ||\n      e.mozRequestAnimationFrame ||\n      e.oRequestAnimationFrame ||\n      e.msRequestAnimationFrame ||\n      function (e) {\n        setTimeout(e, 1e3 / 60);\n      }\n    );\n  })()),\n    n();\n})(window, document);\n```\n\n在主题目录下的``\\layout\\layout.ejs` 文件末尾 `<!-- SCRIPTS -->` 一段中添加以下代码：\n\n```ejs\n<script type=\"text/javascript\" src=\"/js/love.js\"></script>\n```\n\n### 插入网易云音乐\n\n在网易云音乐的网页版上选择一首音乐（不能是 VIP 音乐），点进页面 `https://music.163.com/#/song?id=(music_id)` 后选择“生成外链播放器”，“自动播放”一栏自选，再复制 HTML 代码：\n\n```html\n<iframe\n  frameborder=\"no\"\n  border=\"0\"\n  marginwidth=\"0\"\n  marginheight=\"0\"\n  width=\"330\"\n  height=\"86\"\n  src=\"//music.163.com/outchain/player?type=2&id=(music_id)&auto=0&height=66\"\n></iframe>\n```\n\n直接粘贴到 Markdown 文件内即可\n\n### 调试并部署到 GitHub\n\n安装 [hexo-deployer-git](https://github.com/hexojs/hexo-deployer-git)。\n\n```bash\nnpm install hexo-deployer-git\n```\n\n修改配置 `_config.yml`：\n\n```yaml\ndeploy:\n  type: git\n  repo: <repository url> # https://github.com/(user_name)/(user_name).github.io\n  branch: (branch_name) # default is \"main\"\n```\n\n调试：\n\n```bash\nnpx hexo s --debug\n```\n\n部署：\n\n```bash\nnpx hexo clean && npx hexo deploy\n```\n\n查看 `(user_name).github.io` 和 `blog.example.top` 上的网页是否部署成功\n\n注意此时原有的自定义域名会被覆盖掉，如果 GitHub Pages 需要使用 CNAME 文件自定义域名，请将 CNAME 文件置于博客目录下的 `source` 文件夹，只有这样 `npx hexo deploy` 才能将 CNAME 文件一并推送至部署分支\n\n### LaTeX Test\n\nThis is a equation: $\\lim\\limits_{n\\to\\infty}\\left(1+\\dfrac{1}{n}\\right)^n=\\mathrm{e}$. Another Example: $\\sum\\limits_{n=0}^{\\infty}\\dfrac{x^n}{n!}=\\mathrm{e}^x$.\n\nThis is a equation: ` $\\lim\\limits_{n\\to\\infty}\\left(1+\\dfrac{1}{n}\\right)^n=\\mathrm{e}$ `. Another Example: ` $\\sum\\limits_{n=0}^{\\infty}\\dfrac{x^n}{n!}=\\mathrm{e}^x$ `.\n\n$$\n\\dfrac{\\mathrm{d}}{\\mathrm{d}t}\\left(\\dfrac{\\partial L'}{\\partial \\dot{p}}\\right) - \\dfrac{\\partial L'}{\\partial p} = 0\n$$\n\n$$\n\\lim_{n\\to+\\infty}a^n = \\left\\{\n    \\begin{aligned}\n        &0,\\quad &|a|<1 \\\\\n        &N/A,\\quad &|a|>1 \\\\\n        &1\\quad &a=1 \\\\\n        &N/A,\\quad &a=-1\n    \\end{aligned}\n\\right.\n$$\n\n$$\n\\boldsymbol{a}\\cdot(\\boldsymbol{b}\\times\\boldsymbol{c}) = \\boldsymbol{b}\\cdot(\\boldsymbol{c}\\times\\boldsymbol{a}) = \\boldsymbol{c}\\cdot(\\boldsymbol{a}\\times\\boldsymbol{b})\n$$\n\n$$\n\\begin{align*}\n    \\partial_i r\n    &= \\partial_i \\sqrt{(x-x')^2 + (y-y')^2 + (z-z')^2} \\\\\n    &= \\frac{2(x-x')}{2\\sqrt{(x-x')^2 + (y-y')^2 + (z-z')^2}} \\\\\n    &= \\frac{x-x'}{r}\n\\end{align*}\n$$\n\n$$\nI_r = \\frac{1}{2\\pi}\\oint p_r \\,\\mathrm{d}r = \\frac{1}{2\\pi}\\int_0^{2\\pi} p_r \\frac{\\mathrm{d}r}{\\mathrm{d}\\theta}\\,\\mathrm{d}\\theta = \\frac{\\lambda}{\\omega} + \\sqrt{2m\\kappa}\n$$\n\n$$\n\\begin{align*}\n    H\n    &= T+V \\\\\n    &= \\frac{1}{2}m(\\dot{x} + \\dot{\\theta}l\\cos\\theta)^2 + \\frac{1}{2}m(2ax\\dot{x} + \\dot{\\theta}l\\sin\\theta)^2 + mg(ax^2 - l\\cos\\theta) \\\\\n    &= \\frac{1}{2}m(1+4a^2x^2)\\dot{x}^2 - \\frac{1}{2}ml^2\\dot{\\theta}^2 + ml(\\cos\\theta + 2ax\\sin\\theta)\\dot{x}\\dot{\\theta} + mg(ax^2 - l\\cos\\theta) \\\\\n    &= \\frac{A}{2}\\cdot\\left(\\frac{Dp_x - Bp_\\theta}{AD - BC}\\right)^2 + \\frac{D}{2}\\cdot\\left(\\frac{Ap_\\theta - Cp_x}{AD - BC}\\right)^2 + \\frac{B(Dp_x - Bp_\\theta)(Ap_\\theta - Cp_x)}{(AD - BC)^2} + mg(ax^2 - l\\cos\\theta) \\\\\n    &= \\frac{Dp_x^2 + Ap_\\theta^2 - (B+C)p_x p_\\theta}{2(AD - BC)} \\\\\n    &= \\frac{[p_\\theta,\\ p_x]\\begin{bmatrix}A & B \\\\ C & D\\end{bmatrix}\\begin{bmatrix}p_\\theta \\\\ p_x\\end{bmatrix}}{2\\begin{vmatrix}A & B \\\\ C & D\\end{vmatrix}} + mg(ax^2 - l\\cos\\theta)\n\\end{align*}\n$$\n\n### Code Test\n\n```python\ndef fib(n):\n    a, b = 0, 1\n    while a < n:\n        print(a, end=' ')\n        a, b = b, a+b\n    print()\nfib(1000)\n```\n\n```bash\niconv -f (from_encoding) -t (to_encoding) (from_file_name) -o (to_file_name)\n```\n\n### Picture Test\n\n格式：`![](../images/(your_picture.jpg)`，图片默认放在博客目录的 `/source/images/` 下\n\n![](../images/hello_world_reimu.jpg)\n\n### 进阶功能\n\n- [ ] Aplayer\n- [ ] 樱花特效\n- [ ] 点赞功能\n","source":"_posts/Hello-World.md","raw":"---\ntitle: Hello World\ndate: 2021-09-06 12:00:00\nmath: true\ncategory:\n  - 教程\ntag:\n  - Hello World\n  - Blog\nindex_img: /img/Purple_Flower.jpg\nbanner_img: /img/Purple_Flower.jpg\n---\n\n<iframe frameborder=\"no\" border=\"0\" marginwidth=\"0\" marginheight=\"0\" width=330 height=86 src=\"//music.163.com/outchain/player?type=2&id=22636684&auto=1&height=66\"></iframe>\n\n### 申请 GitHub Pages\n\n新建一个 repository，命名为 `(user_name).github.io`，隐私设置为 Public，再建一个 GitHub 仓库用来存放博客的源代码（可选）\n\n### 申请域名\n\n我选择的是阿里云，在[万网](https://wanwang.aliyun.com/)输入自己想要的域名并购买。一般来讲 `.top` 最便宜，`.xyz` 次之。 假设域名为 `example.top` 根据网站提示做好域名实名制认证等流程。在[域名控制台](https://dc.console.aliyun.com/next/#/domain/list/all-domain)中选择：域名 >> 操作 >> 解析\n\n解析中添加一条记录：\n\n```\n记录类型：CNAME；\n主机记录自选（我这里选择的是 blog，因为 www 经常无法与 GitHub Pages 连接）；\n解析线路选择默认；\n记录值选择(user_name).github.io；\nTTL选择“10分钟”\n```\n\n再去名为 `(user_name).github.io` 的 repository，新建一个文件，文件名为 `CNAME`，填入 `blog.example.top` ，通过 GitHub 的网络检测后就可以使用。\n\n此时可以分别在浏览器中输入 `(user_name).github.io` 和 `blog.example.top` 试一试，如果能显示`README.md` 中的内容则设置成功。\n\n### Hexo 搭建并添加文章\n\n我选择用 [Hexo](https://hexo.io/zh-cn/index.html)\n\n建议在 Linux 上搭建，而不用 Windows\n\n下载 Node-js 和 npm：`sudo pacman -S nodejs npm`\n\n下载 Hexo 的方法如下：（推荐如下的全局下载方案）\n\n```bash\nmkdir ~/.npm-global\nnpm config set prefix '~/.npm-global'\n```\n\n然后在 `~/.profile` 中加入一行：`export PATH=~/.npm-global/bin:$PATH`\n\n最后输入：（npm 5.0.0 开始，默认安装不需要 `–-save` 选项，已经可以自动执行）\n\n```bash\nsource ~/.profile\nnpm install -g hexo-cli\n```\n\n找一个空文件夹 `(hexo_folder)`，运行：\n\n```bash\nnpx hexo init (hexo_folder)\ncd (hexo_folder)\nnpm install\n```\n\n所有的 npm 和 hexo 命令都要在`(hexo_folder)`（下文称为“**博客目录**”）下执行\n\n全局配置的官方指南在[这里](https://hexo.io/zh-cn/docs/)，在 `(hexo_folder)/_config.yml` 下修改：\n\n```yaml\nurl: https://blog.example.top\npermalink: :title/\npermalink_defaults:\npretty_urls:\n  trailing_index: false\n  trailing_html: false\n```\n\n添加文章：`npx hexo new post hello`，这生成 `blog.example.top/hello`\n\n在子文件夹下添加文章：`npx hexo new post --path hello/me`，这生成 `blog.example.top/hello/me`\n\n每篇文章的 Markdown 文件内一开始有用 `---` 分隔的部分，下文称为 **Front-matter**，例如：\n\n```\ntitle: Hello World\ndate: 2021-09-06 12:00:00\nmath: true\ncategory:\n- 教程\ntag:\n- Hello World\n- Blog\nindex_img: /img/Purple_Flower.jpg\nbanner_img: /img/Purple_Flower.jpg\n```\n\n### Fluid 主题\n\n我选择的是 [Fluid](https://hexo.fluid-dev.com/) 主题，安装方法：\n\n```bash\nnpm install hexo-theme-fluid\n```\n\n这样的话它会保存在`(hexo_folder)/node_modules/hexo-theme-fluid`（下文称为“**主题目录**”），更新主题需要在`(hexo_folder)`下执行`npm update hexo-theme-fluid`\n\n可以在 `(hexo_folder)/themes` 中创建软链接：\n\n```bash\nln -s ../node_modules/hexo-theme-fluid/\n```\n\nFluid 配置的官方指南在 https://hexo.fluid-dev.com/docs/guide/\n\n在`(hexo_folder)/_config.yml`下修改：`theme:fluid`\n\n在博客目录下创建 `_config.fluid.yml` 文件，将主题目录下的 `_config.yml`复制过去，以后如果修改任何主题配置，都只需修改 `_config.fluid.yml` 的配置即可，其优先级比主题目录下的 `_config.yml`高。\n\n- 更改用于浏览器标签的图标：`favicon: /img/favicon.png`，`apple_touch_icon`同步修改\n\n- `force_https: true`\n\n- 代码高亮：`highlightjs: style: \"Vs\"`\n\n- 打字机打印速度：`typespeed: 64`，不开启循环播放\n\n- 为文章内容中的标题添加锚图标：`icon: \"§\"`\n\n- 主题字体配置：\n\n```yaml\nfont:\n    font_size: 16px\n    font_family: Noto Sans CJK SC, sans-serif\n    code_font_size: 100%\n```\n\n- 导航栏左侧的标题：`blog_title: \"Home\"`\n\n- 关于页中 `icons` 一项只保留 GitHub\n\n- 每个页面的 Banner 头图：`banner_img` ，自选\n\n- 首页副标题（slogan）的独立设置：`slogan: text: ` 自选\n\n- 自动截取文章摘要：`auto_excerpt: enable: false`\n\n- 隐藏版权声明：`copyright: enable: false`\n\n- MathJax 渲染（虽然慢但是支持比 Katex 多而且字体更美观）：严格按照[官方文档](https://hexo.fluid-dev.com/docs/guide/##latex-数学公式)，记得更改渲染引擎为`hexo-renderer-kramed` 并删掉原有的 `hexo-renderer-marked` ，书写格式见下方 **LaTeX Test** 一节，如需使用，需在 Front-matter 中指定 `math: true`，支持行内公式（和行间公式）。但是这样会修改丢失对 Markdown 复选框的支持，开启则需要将如下代码加入到本地的`(hexo_folder)/node_modules/hexo-renderer-kramed/lib/renderer.js`的第19行中（参考[这里](https://corecabin.cn/2021/08/14/solve-some-problems-of-hexo-renderer-kramed-rendering-conflicts/)），行内公式和行内代码冲突也可以参考[这里](https://corecabin.cn/2021/08/14/solve-some-problems-of-hexo-renderer-kramed-rendering-conflicts/)\n\n```js\n// Support To-Do List\nRenderer.prototype.listitem = function(text) {\n  if (/^\\s*\\[[x ]\\]\\s*/.test(text)) {\n    text = text.replace(/^\\s*\\[ \\]\\s*/, '<input type=\"checkbox\"></input> ').replace(/^\\s*\\[x\\]\\s*/, '<input type=\"checkbox\" checked></input> ');\n    return '<li style=\"list-style: none\">' + text + '</li>\\n';\n  } else {\n    return '<li>' + text + '</li>\\n';\n  }\n};\n```\n\n### 如何用“友链”页的模板创建一个“工具”页\n\n首先新建一个页面：`npx hexo new page tools`，注意发表文章要将模板 `page` 改为 `post`\n\n这样就有了 `example.top/tools/` 的页面\n\n再找到 `icon-tools` 的图标：https://blog.csdn.net/Xiaoming782893687/article/details/90744911\n\n实际操作是：在 `custom_css` 一栏中加入 `- //at.alicdn.com/t/font_2794470_ewg5czgn3cd.css`，然后就可以在导航栏菜单 `menu:` 一栏中加入 `- { key: \"tools\", link: \"/tools/\", icon: \"iconfont icon-tools\" }`\n\n在博客目录内的 `/source/tools/index.md` 的 Front-matter 加入 `layout: links`，这会引入主题目录中的模板：`/layout/links.ejs`\n\n于是开始设置`_config.fluid.yml`：\n\n```yaml\nlinks:\n  enable: true\n  banner_img: (your_picture)\n  banner_img_height: 60\n  banner_mask_alpha: 0.3\n  subtitle:\n  # 友链的成员项\n  # Member item of page\n  items:\n    - {\n      title: \"(your_title)\",\n      intro: \"(your_intro)\",\n      link: \"(your_link)\",\n      avatar: \"(your_avatar)\"\n    }\n```\n\n并修改主题目录下`/languages/`中的所有`.yml`文件，例如`en.yml`中改为：\n\n```yaml\nlinks:\n  title: Tools\n  subtitle: Tools\n```\n\n### 如何在导航栏菜单创建一个 GitHub 链接\n\n和创建“工具”方法类似，这次需要找到 `icon-github`（自带图标太小了）的图标\n\n实际操作是：在 `custom_css` 一栏中加入 `- //at.alicdn.com/t/font_2794470_brhhjh3wx87.css`，然后就可以在导航栏菜单 `menu:` 一栏中加入 `- { key: \"GitHub\", link: \"https://github.com/(user_name)\", icon: \"iconfont icon-github\" }` 即可\n\n### 加入特效：鼠标点击有小红心\n\n在主题目录下的 `/source/js` 文件夹中新建文件 `love.js`，在 `love.js` 文件中添加以下代码：（修改过，更新了已经弃用的部分，原始代码参见[这里](https://segmentfault.com/a/1190000007215988)）\n\n```js\n!(function (e, t, a) {\n  function n() {\n    c(\n      \".heart{width: 10px;height: 10px;position: fixed;background: #f00;transform: rotate(45deg);-webkit-transform: rotate(45deg);-moz-transform: rotate(45deg);}.heart:after,.heart:before{content: '';width: inherit;height: inherit;background: inherit;border-radius: 50%;-webkit-border-radius: 50%;-moz-border-radius: 50%;position: fixed;}.heart:after{top: -5px;}.heart:before{left: -5px;}\"\n    ),\n      o(),\n      r();\n  }\n  function r() {\n    for (var e = 0; e < d.length; e++)\n      d[e].alpha <= 0\n        ? (t.body.removeChild(d[e].el), d.splice(e, 1))\n        : (d[e].y--,\n          (d[e].scale += 0.004),\n          (d[e].alpha -= 0.013),\n          (d[e].el.style.cssText =\n            \"left:\" +\n            d[e].x +\n            \"px;top:\" +\n            d[e].y +\n            \"px;opacity:\" +\n            d[e].alpha +\n            \";transform:scale(\" +\n            d[e].scale +\n            \",\" +\n            d[e].scale +\n            \") rotate(45deg);background:\" +\n            d[e].color +\n            \";z-index:99999\"));\n    requestAnimationFrame(r);\n  }\n  function o() {\n    var t = \"function\" == typeof e.onclick && e.onclick;\n    e.onclick = function (e) {\n      t && t(), i(e);\n    };\n  }\n  function i(e) {\n    var a = t.createElement(\"div\");\n    (a.className = \"heart\"),\n      d.push({\n        el: a,\n        x: e.clientX - 5,\n        y: e.clientY - 5,\n        scale: 1,\n        alpha: 1,\n        color: s(),\n      }),\n      t.body.appendChild(a);\n  }\n  function c(e) {\n    var a = t.createElement(\"style\");\n    try {\n      a.appendChild(t.createTextNode(e));\n    } catch (t) {\n      a.styleSheet.cssText = e;\n    }\n    t.getElementsByTagName(\"head\")[0].appendChild(a);\n  }\n  function s() {\n    return (\n      \"rgb(\" +\n      ~~(255 * Math.random()) +\n      \",\" +\n      ~~(255 * Math.random()) +\n      \",\" +\n      ~~(255 * Math.random()) +\n      \")\"\n    );\n  }\n  var d = [];\n  (e.requestAnimationFrame = (function () {\n    return (\n      e.requestAnimationFrame ||\n      e.webkitRequestAnimationFrame ||\n      e.mozRequestAnimationFrame ||\n      e.oRequestAnimationFrame ||\n      e.msRequestAnimationFrame ||\n      function (e) {\n        setTimeout(e, 1e3 / 60);\n      }\n    );\n  })()),\n    n();\n})(window, document);\n```\n\n在主题目录下的``\\layout\\layout.ejs` 文件末尾 `<!-- SCRIPTS -->` 一段中添加以下代码：\n\n```ejs\n<script type=\"text/javascript\" src=\"/js/love.js\"></script>\n```\n\n### 插入网易云音乐\n\n在网易云音乐的网页版上选择一首音乐（不能是 VIP 音乐），点进页面 `https://music.163.com/#/song?id=(music_id)` 后选择“生成外链播放器”，“自动播放”一栏自选，再复制 HTML 代码：\n\n```html\n<iframe\n  frameborder=\"no\"\n  border=\"0\"\n  marginwidth=\"0\"\n  marginheight=\"0\"\n  width=\"330\"\n  height=\"86\"\n  src=\"//music.163.com/outchain/player?type=2&id=(music_id)&auto=0&height=66\"\n></iframe>\n```\n\n直接粘贴到 Markdown 文件内即可\n\n### 调试并部署到 GitHub\n\n安装 [hexo-deployer-git](https://github.com/hexojs/hexo-deployer-git)。\n\n```bash\nnpm install hexo-deployer-git\n```\n\n修改配置 `_config.yml`：\n\n```yaml\ndeploy:\n  type: git\n  repo: <repository url> # https://github.com/(user_name)/(user_name).github.io\n  branch: (branch_name) # default is \"main\"\n```\n\n调试：\n\n```bash\nnpx hexo s --debug\n```\n\n部署：\n\n```bash\nnpx hexo clean && npx hexo deploy\n```\n\n查看 `(user_name).github.io` 和 `blog.example.top` 上的网页是否部署成功\n\n注意此时原有的自定义域名会被覆盖掉，如果 GitHub Pages 需要使用 CNAME 文件自定义域名，请将 CNAME 文件置于博客目录下的 `source` 文件夹，只有这样 `npx hexo deploy` 才能将 CNAME 文件一并推送至部署分支\n\n### LaTeX Test\n\nThis is a equation: $\\lim\\limits_{n\\to\\infty}\\left(1+\\dfrac{1}{n}\\right)^n=\\mathrm{e}$. Another Example: $\\sum\\limits_{n=0}^{\\infty}\\dfrac{x^n}{n!}=\\mathrm{e}^x$.\n\nThis is a equation: ` $\\lim\\limits_{n\\to\\infty}\\left(1+\\dfrac{1}{n}\\right)^n=\\mathrm{e}$ `. Another Example: ` $\\sum\\limits_{n=0}^{\\infty}\\dfrac{x^n}{n!}=\\mathrm{e}^x$ `.\n\n$$\n\\dfrac{\\mathrm{d}}{\\mathrm{d}t}\\left(\\dfrac{\\partial L'}{\\partial \\dot{p}}\\right) - \\dfrac{\\partial L'}{\\partial p} = 0\n$$\n\n$$\n\\lim_{n\\to+\\infty}a^n = \\left\\{\n    \\begin{aligned}\n        &0,\\quad &|a|<1 \\\\\n        &N/A,\\quad &|a|>1 \\\\\n        &1\\quad &a=1 \\\\\n        &N/A,\\quad &a=-1\n    \\end{aligned}\n\\right.\n$$\n\n$$\n\\boldsymbol{a}\\cdot(\\boldsymbol{b}\\times\\boldsymbol{c}) = \\boldsymbol{b}\\cdot(\\boldsymbol{c}\\times\\boldsymbol{a}) = \\boldsymbol{c}\\cdot(\\boldsymbol{a}\\times\\boldsymbol{b})\n$$\n\n$$\n\\begin{align*}\n    \\partial_i r\n    &= \\partial_i \\sqrt{(x-x')^2 + (y-y')^2 + (z-z')^2} \\\\\n    &= \\frac{2(x-x')}{2\\sqrt{(x-x')^2 + (y-y')^2 + (z-z')^2}} \\\\\n    &= \\frac{x-x'}{r}\n\\end{align*}\n$$\n\n$$\nI_r = \\frac{1}{2\\pi}\\oint p_r \\,\\mathrm{d}r = \\frac{1}{2\\pi}\\int_0^{2\\pi} p_r \\frac{\\mathrm{d}r}{\\mathrm{d}\\theta}\\,\\mathrm{d}\\theta = \\frac{\\lambda}{\\omega} + \\sqrt{2m\\kappa}\n$$\n\n$$\n\\begin{align*}\n    H\n    &= T+V \\\\\n    &= \\frac{1}{2}m(\\dot{x} + \\dot{\\theta}l\\cos\\theta)^2 + \\frac{1}{2}m(2ax\\dot{x} + \\dot{\\theta}l\\sin\\theta)^2 + mg(ax^2 - l\\cos\\theta) \\\\\n    &= \\frac{1}{2}m(1+4a^2x^2)\\dot{x}^2 - \\frac{1}{2}ml^2\\dot{\\theta}^2 + ml(\\cos\\theta + 2ax\\sin\\theta)\\dot{x}\\dot{\\theta} + mg(ax^2 - l\\cos\\theta) \\\\\n    &= \\frac{A}{2}\\cdot\\left(\\frac{Dp_x - Bp_\\theta}{AD - BC}\\right)^2 + \\frac{D}{2}\\cdot\\left(\\frac{Ap_\\theta - Cp_x}{AD - BC}\\right)^2 + \\frac{B(Dp_x - Bp_\\theta)(Ap_\\theta - Cp_x)}{(AD - BC)^2} + mg(ax^2 - l\\cos\\theta) \\\\\n    &= \\frac{Dp_x^2 + Ap_\\theta^2 - (B+C)p_x p_\\theta}{2(AD - BC)} \\\\\n    &= \\frac{[p_\\theta,\\ p_x]\\begin{bmatrix}A & B \\\\ C & D\\end{bmatrix}\\begin{bmatrix}p_\\theta \\\\ p_x\\end{bmatrix}}{2\\begin{vmatrix}A & B \\\\ C & D\\end{vmatrix}} + mg(ax^2 - l\\cos\\theta)\n\\end{align*}\n$$\n\n### Code Test\n\n```python\ndef fib(n):\n    a, b = 0, 1\n    while a < n:\n        print(a, end=' ')\n        a, b = b, a+b\n    print()\nfib(1000)\n```\n\n```bash\niconv -f (from_encoding) -t (to_encoding) (from_file_name) -o (to_file_name)\n```\n\n### Picture Test\n\n格式：`![](../images/(your_picture.jpg)`，图片默认放在博客目录的 `/source/images/` 下\n\n![](../images/hello_world_reimu.jpg)\n\n### 进阶功能\n\n- [ ] Aplayer\n- [ ] 樱花特效\n- [ ] 点赞功能\n","slug":"Hello-World","published":1,"updated":"2021-11-04T16:33:59.894Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckvl6t11d0001jbn3an8dbb1n","content":"<iframe frameborder=\"no\" border=\"0\" marginwidth=\"0\" marginheight=\"0\" width=330 height=86 src=\"//music.163.com/outchain/player?type=2&id=22636684&auto=1&height=66\"></iframe>\n\n<h3 id=\"申请-GitHub-Pages\"><a href=\"#申请-GitHub-Pages\" class=\"headerlink\" title=\"申请 GitHub Pages\"></a>申请 GitHub Pages</h3><p>新建一个 repository，命名为 <code>(user_name).github.io</code>，隐私设置为 Public，再建一个 GitHub 仓库用来存放博客的源代码（可选）</p>\n<h3 id=\"申请域名\"><a href=\"#申请域名\" class=\"headerlink\" title=\"申请域名\"></a>申请域名</h3><p>我选择的是阿里云，在<a href=\"https://wanwang.aliyun.com/\">万网</a>输入自己想要的域名并购买。一般来讲 <code>.top</code> 最便宜，<code>.xyz</code> 次之。 假设域名为 <code>example.top</code> 根据网站提示做好域名实名制认证等流程。在<a href=\"https://dc.console.aliyun.com/next/#/domain/list/all-domain\">域名控制台</a>中选择：域名 &gt;&gt; 操作 &gt;&gt; 解析</p>\n<p>解析中添加一条记录：</p>\n<figure class=\"highlight dns\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs dns\">记录类型：<span class=\"hljs-keyword\">CNAME</span>；<br>主机记录自选（我这里选择的是 blog，因为 www 经常无法与 GitHub Pages 连接）；<br>解析线路选择默认；<br>记录值选择(user_name).github.io；<br>TTL选择“<span class=\"hljs-number\">10</span>分钟”<br></code></pre></td></tr></table></figure>\n<p>再去名为 <code>(user_name).github.io</code> 的 repository，新建一个文件，文件名为 <code>CNAME</code>，填入 <code>blog.example.top</code> ，通过 GitHub 的网络检测后就可以使用。</p>\n<p>此时可以分别在浏览器中输入 <code>(user_name).github.io</code> 和 <code>blog.example.top</code> 试一试，如果能显示<code>README.md</code> 中的内容则设置成功。</p>\n<h3 id=\"Hexo-搭建并添加文章\"><a href=\"#Hexo-搭建并添加文章\" class=\"headerlink\" title=\"Hexo 搭建并添加文章\"></a>Hexo 搭建并添加文章</h3><p>我选择用 <a href=\"https://hexo.io/zh-cn/index.html\">Hexo</a></p>\n<p>建议在 Linux 上搭建，而不用 Windows</p>\n<p>下载 Node-js 和 npm：<code>sudo pacman -S nodejs npm</code></p>\n<p>下载 Hexo 的方法如下：（推荐如下的全局下载方案）</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">mkdir ~/.npm-global<br>npm config <span class=\"hljs-built_in\">set</span> prefix <span class=\"hljs-string\">&#x27;~/.npm-global&#x27;</span><br></code></pre></td></tr></table></figure>\n<p>然后在 <code>~/.profile</code> 中加入一行：<code>export PATH=~/.npm-global/bin:$PATH</code></p>\n<p>最后输入：（npm 5.0.0 开始，默认安装不需要 <code>–-save</code> 选项，已经可以自动执行）</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-built_in\">source</span> ~/.profile<br>npm install -g hexo-cli<br></code></pre></td></tr></table></figure>\n<p>找一个空文件夹 <code>(hexo_folder)</code>，运行：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">npx hexo init (hexo_folder)<br><span class=\"hljs-built_in\">cd</span> (hexo_folder)<br>npm install<br></code></pre></td></tr></table></figure>\n<p>所有的 npm 和 hexo 命令都要在<code>(hexo_folder)</code>（下文称为“<strong>博客目录</strong>”）下执行</p>\n<p>全局配置的官方指南在<a href=\"https://hexo.io/zh-cn/docs/\">这里</a>，在 <code>(hexo_folder)/_config.yml</code> 下修改：</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs yaml\"><span class=\"hljs-attr\">url:</span> <span class=\"hljs-string\">https://blog.example.top</span><br><span class=\"hljs-attr\">permalink:</span> <span class=\"hljs-string\">:title/</span><br><span class=\"hljs-attr\">permalink_defaults:</span><br><span class=\"hljs-attr\">pretty_urls:</span><br>  <span class=\"hljs-attr\">trailing_index:</span> <span class=\"hljs-literal\">false</span><br>  <span class=\"hljs-attr\">trailing_html:</span> <span class=\"hljs-literal\">false</span><br></code></pre></td></tr></table></figure>\n<p>添加文章：<code>npx hexo new post hello</code>，这生成 <code>blog.example.top/hello</code></p>\n<p>在子文件夹下添加文章：<code>npx hexo new post --path hello/me</code>，这生成 <code>blog.example.top/hello/me</code></p>\n<p>每篇文章的 Markdown 文件内一开始有用 <code>---</code> 分隔的部分，下文称为 <strong>Front-matter</strong>，例如：</p>\n<figure class=\"highlight dts\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs dts\"><span class=\"hljs-symbol\">title:</span> Hello World<br><span class=\"hljs-symbol\">date:</span> <span class=\"hljs-number\">2021</span><span class=\"hljs-number\">-09</span><span class=\"hljs-number\">-06</span> <span class=\"hljs-number\">12</span>:<span class=\"hljs-number\">00</span>:<span class=\"hljs-number\">00</span><br><span class=\"hljs-symbol\">math:</span> true<br><span class=\"hljs-symbol\">category:</span><br>- 教程<br><span class=\"hljs-symbol\">tag:</span><br>- Hello World<br>- Blog<br><span class=\"hljs-symbol\">index_img:</span> <span class=\"hljs-meta-keyword\">/img/</span>Purple_Flower.jpg<br><span class=\"hljs-symbol\">banner_img:</span> <span class=\"hljs-meta-keyword\">/img/</span>Purple_Flower.jpg<br></code></pre></td></tr></table></figure>\n<h3 id=\"Fluid-主题\"><a href=\"#Fluid-主题\" class=\"headerlink\" title=\"Fluid 主题\"></a>Fluid 主题</h3><p>我选择的是 <a href=\"https://hexo.fluid-dev.com/\">Fluid</a> 主题，安装方法：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">npm install hexo-theme-fluid<br></code></pre></td></tr></table></figure>\n<p>这样的话它会保存在<code>(hexo_folder)/node_modules/hexo-theme-fluid</code>（下文称为“<strong>主题目录</strong>”），更新主题需要在<code>(hexo_folder)</code>下执行<code>npm update hexo-theme-fluid</code></p>\n<p>可以在 <code>(hexo_folder)/themes</code> 中创建软链接：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">ln -s ../node_modules/hexo-theme-fluid/<br></code></pre></td></tr></table></figure>\n<p>Fluid 配置的官方指南在 <a href=\"https://hexo.fluid-dev.com/docs/guide/\">https://hexo.fluid-dev.com/docs/guide/</a></p>\n<p>在<code>(hexo_folder)/_config.yml</code>下修改：<code>theme:fluid</code></p>\n<p>在博客目录下创建 <code>_config.fluid.yml</code> 文件，将主题目录下的 <code>_config.yml</code>复制过去，以后如果修改任何主题配置，都只需修改 <code>_config.fluid.yml</code> 的配置即可，其优先级比主题目录下的 <code>_config.yml</code>高。</p>\n<ul>\n<li><p>更改用于浏览器标签的图标：<code>favicon: /img/favicon.png</code>，<code>apple_touch_icon</code>同步修改</p>\n</li>\n<li><p><code>force_https: true</code></p>\n</li>\n<li><p>代码高亮：<code>highlightjs: style: &quot;Vs&quot;</code></p>\n</li>\n<li><p>打字机打印速度：<code>typespeed: 64</code>，不开启循环播放</p>\n</li>\n<li><p>为文章内容中的标题添加锚图标：<code>icon: &quot;§&quot;</code></p>\n</li>\n<li><p>主题字体配置：</p>\n</li>\n</ul>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs yaml\"><span class=\"hljs-attr\">font:</span><br>    <span class=\"hljs-attr\">font_size:</span> <span class=\"hljs-string\">16px</span><br>    <span class=\"hljs-attr\">font_family:</span> <span class=\"hljs-string\">Noto</span> <span class=\"hljs-string\">Sans</span> <span class=\"hljs-string\">CJK</span> <span class=\"hljs-string\">SC,</span> <span class=\"hljs-string\">sans-serif</span><br>    <span class=\"hljs-attr\">code_font_size:</span> <span class=\"hljs-number\">100</span><span class=\"hljs-string\">%</span><br></code></pre></td></tr></table></figure>\n<ul>\n<li><p>导航栏左侧的标题：<code>blog_title: &quot;Home&quot;</code></p>\n</li>\n<li><p>关于页中 <code>icons</code> 一项只保留 GitHub</p>\n</li>\n<li><p>每个页面的 Banner 头图：<code>banner_img</code> ，自选</p>\n</li>\n<li><p>首页副标题（slogan）的独立设置：<code>slogan: text:</code> 自选</p>\n</li>\n<li><p>自动截取文章摘要：<code>auto_excerpt: enable: false</code></p>\n</li>\n<li><p>隐藏版权声明：<code>copyright: enable: false</code></p>\n</li>\n<li><p>MathJax 渲染（虽然慢但是支持比 Katex 多而且字体更美观）：严格按照<a href=\"https://hexo.fluid-dev.com/docs/guide/##latex-数学公式\">官方文档</a>，记得更改渲染引擎为<code>hexo-renderer-kramed</code> 并删掉原有的 <code>hexo-renderer-marked</code> ，书写格式见下方 <strong>LaTeX Test</strong> 一节，如需使用，需在 Front-matter 中指定 <code>math: true</code>，支持行内公式（和行间公式）。但是这样会修改丢失对 Markdown 复选框的支持，开启则需要将如下代码加入到本地的<code>(hexo_folder)/node_modules/hexo-renderer-kramed/lib/renderer.js</code>的第19行中（参考<a href=\"https://corecabin.cn/2021/08/14/solve-some-problems-of-hexo-renderer-kramed-rendering-conflicts/\">这里</a>），行内公式和行内代码冲突也可以参考<a href=\"https://corecabin.cn/2021/08/14/solve-some-problems-of-hexo-renderer-kramed-rendering-conflicts/\">这里</a></p>\n</li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs js\"><span class=\"hljs-comment\">// Support To-Do List</span><br>Renderer.prototype.listitem = <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">text</span>) </span>&#123;<br>  <span class=\"hljs-keyword\">if</span> (<span class=\"hljs-regexp\">/^\\s*\\[[x ]\\]\\s*/</span>.test(text)) &#123;<br>    text = text.replace(<span class=\"hljs-regexp\">/^\\s*\\[ \\]\\s*/</span>, <span class=\"hljs-string\">&#x27;&lt;input type=&quot;checkbox&quot;&gt;&lt;/input&gt; &#x27;</span>).replace(<span class=\"hljs-regexp\">/^\\s*\\[x\\]\\s*/</span>, <span class=\"hljs-string\">&#x27;&lt;input type=&quot;checkbox&quot; checked&gt;&lt;/input&gt; &#x27;</span>);<br>    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">&#x27;&lt;li style=&quot;list-style: none&quot;&gt;&#x27;</span> + text + <span class=\"hljs-string\">&#x27;&lt;/li&gt;\\n&#x27;</span>;<br>  &#125; <span class=\"hljs-keyword\">else</span> &#123;<br>    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">&#x27;&lt;li&gt;&#x27;</span> + text + <span class=\"hljs-string\">&#x27;&lt;/li&gt;\\n&#x27;</span>;<br>  &#125;<br>&#125;;<br></code></pre></td></tr></table></figure>\n<h3 id=\"如何用“友链”页的模板创建一个“工具”页\"><a href=\"#如何用“友链”页的模板创建一个“工具”页\" class=\"headerlink\" title=\"如何用“友链”页的模板创建一个“工具”页\"></a>如何用“友链”页的模板创建一个“工具”页</h3><p>首先新建一个页面：<code>npx hexo new page tools</code>，注意发表文章要将模板 <code>page</code> 改为 <code>post</code></p>\n<p>这样就有了 <code>example.top/tools/</code> 的页面</p>\n<p>再找到 <code>icon-tools</code> 的图标：<a href=\"https://blog.csdn.net/Xiaoming782893687/article/details/90744911\">https://blog.csdn.net/Xiaoming782893687/article/details/90744911</a></p>\n<p>实际操作是：在 <code>custom_css</code> 一栏中加入 <code>- //at.alicdn.com/t/font_2794470_ewg5czgn3cd.css</code>，然后就可以在导航栏菜单 <code>menu:</code> 一栏中加入 <code>- &#123; key: &quot;tools&quot;, link: &quot;/tools/&quot;, icon: &quot;iconfont icon-tools&quot; &#125;</code></p>\n<p>在博客目录内的 <code>/source/tools/index.md</code> 的 Front-matter 加入 <code>layout: links</code>，这会引入主题目录中的模板：<code>/layout/links.ejs</code></p>\n<p>于是开始设置<code>_config.fluid.yml</code>：</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs yaml\"><span class=\"hljs-attr\">links:</span><br>  <span class=\"hljs-attr\">enable:</span> <span class=\"hljs-literal\">true</span><br>  <span class=\"hljs-attr\">banner_img:</span> <span class=\"hljs-string\">(your_picture)</span><br>  <span class=\"hljs-attr\">banner_img_height:</span> <span class=\"hljs-number\">60</span><br>  <span class=\"hljs-attr\">banner_mask_alpha:</span> <span class=\"hljs-number\">0.3</span><br>  <span class=\"hljs-attr\">subtitle:</span><br>  <span class=\"hljs-comment\"># 友链的成员项</span><br>  <span class=\"hljs-comment\"># Member item of page</span><br>  <span class=\"hljs-attr\">items:</span><br>    <span class=\"hljs-bullet\">-</span> &#123;<br>      <span class=\"hljs-attr\">title:</span> <span class=\"hljs-string\">&quot;(your_title)&quot;</span>,<br>      <span class=\"hljs-attr\">intro:</span> <span class=\"hljs-string\">&quot;(your_intro)&quot;</span>,<br>      <span class=\"hljs-attr\">link:</span> <span class=\"hljs-string\">&quot;(your_link)&quot;</span>,<br>      <span class=\"hljs-attr\">avatar:</span> <span class=\"hljs-string\">&quot;(your_avatar)&quot;</span><br>    &#125;<br></code></pre></td></tr></table></figure>\n<p>并修改主题目录下<code>/languages/</code>中的所有<code>.yml</code>文件，例如<code>en.yml</code>中改为：</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs yaml\"><span class=\"hljs-attr\">links:</span><br>  <span class=\"hljs-attr\">title:</span> <span class=\"hljs-string\">Tools</span><br>  <span class=\"hljs-attr\">subtitle:</span> <span class=\"hljs-string\">Tools</span><br></code></pre></td></tr></table></figure>\n<h3 id=\"如何在导航栏菜单创建一个-GitHub-链接\"><a href=\"#如何在导航栏菜单创建一个-GitHub-链接\" class=\"headerlink\" title=\"如何在导航栏菜单创建一个 GitHub 链接\"></a>如何在导航栏菜单创建一个 GitHub 链接</h3><p>和创建“工具”方法类似，这次需要找到 <code>icon-github</code>（自带图标太小了）的图标</p>\n<p>实际操作是：在 <code>custom_css</code> 一栏中加入 <code>- //at.alicdn.com/t/font_2794470_brhhjh3wx87.css</code>，然后就可以在导航栏菜单 <code>menu:</code> 一栏中加入 <code>- &#123; key: &quot;GitHub&quot;, link: &quot;https://github.com/(user_name)&quot;, icon: &quot;iconfont icon-github&quot; &#125;</code> 即可</p>\n<h3 id=\"加入特效：鼠标点击有小红心\"><a href=\"#加入特效：鼠标点击有小红心\" class=\"headerlink\" title=\"加入特效：鼠标点击有小红心\"></a>加入特效：鼠标点击有小红心</h3><p>在主题目录下的 <code>/source/js</code> 文件夹中新建文件 <code>love.js</code>，在 <code>love.js</code> 文件中添加以下代码：（修改过，更新了已经弃用的部分，原始代码参见<a href=\"https://segmentfault.com/a/1190000007215988\">这里</a>）</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs js\">!(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">e, t, a</span>) </span>&#123;<br>  <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">n</span>(<span class=\"hljs-params\"></span>) </span>&#123;<br>    c(<br>      <span class=\"hljs-string\">&quot;.heart&#123;width: 10px;height: 10px;position: fixed;background: #f00;transform: rotate(45deg);-webkit-transform: rotate(45deg);-moz-transform: rotate(45deg);&#125;.heart:after,.heart:before&#123;content: &#x27;&#x27;;width: inherit;height: inherit;background: inherit;border-radius: 50%;-webkit-border-radius: 50%;-moz-border-radius: 50%;position: fixed;&#125;.heart:after&#123;top: -5px;&#125;.heart:before&#123;left: -5px;&#125;&quot;</span><br>    ),<br>      o(),<br>      r();<br>  &#125;<br>  <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">r</span>(<span class=\"hljs-params\"></span>) </span>&#123;<br>    <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">var</span> e = <span class=\"hljs-number\">0</span>; e &lt; d.length; e++)<br>      d[e].alpha &lt;= <span class=\"hljs-number\">0</span><br>        ? (t.body.removeChild(d[e].el), d.splice(e, <span class=\"hljs-number\">1</span>))<br>        : (d[e].y--,<br>          (d[e].scale += <span class=\"hljs-number\">0.004</span>),<br>          (d[e].alpha -= <span class=\"hljs-number\">0.013</span>),<br>          (d[e].el.style.cssText =<br>            <span class=\"hljs-string\">&quot;left:&quot;</span> +<br>            d[e].x +<br>            <span class=\"hljs-string\">&quot;px;top:&quot;</span> +<br>            d[e].y +<br>            <span class=\"hljs-string\">&quot;px;opacity:&quot;</span> +<br>            d[e].alpha +<br>            <span class=\"hljs-string\">&quot;;transform:scale(&quot;</span> +<br>            d[e].scale +<br>            <span class=\"hljs-string\">&quot;,&quot;</span> +<br>            d[e].scale +<br>            <span class=\"hljs-string\">&quot;) rotate(45deg);background:&quot;</span> +<br>            d[e].color +<br>            <span class=\"hljs-string\">&quot;;z-index:99999&quot;</span>));<br>    requestAnimationFrame(r);<br>  &#125;<br>  <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">o</span>(<span class=\"hljs-params\"></span>) </span>&#123;<br>    <span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-string\">&quot;function&quot;</span> == <span class=\"hljs-keyword\">typeof</span> e.onclick &amp;&amp; e.onclick;<br>    e.onclick = <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">e</span>) </span>&#123;<br>      t &amp;&amp; t(), i(e);<br>    &#125;;<br>  &#125;<br>  <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">i</span>(<span class=\"hljs-params\">e</span>) </span>&#123;<br>    <span class=\"hljs-keyword\">var</span> a = t.createElement(<span class=\"hljs-string\">&quot;div&quot;</span>);<br>    (a.className = <span class=\"hljs-string\">&quot;heart&quot;</span>),<br>      d.push(&#123;<br>        <span class=\"hljs-attr\">el</span>: a,<br>        <span class=\"hljs-attr\">x</span>: e.clientX - <span class=\"hljs-number\">5</span>,<br>        <span class=\"hljs-attr\">y</span>: e.clientY - <span class=\"hljs-number\">5</span>,<br>        <span class=\"hljs-attr\">scale</span>: <span class=\"hljs-number\">1</span>,<br>        <span class=\"hljs-attr\">alpha</span>: <span class=\"hljs-number\">1</span>,<br>        <span class=\"hljs-attr\">color</span>: s(),<br>      &#125;),<br>      t.body.appendChild(a);<br>  &#125;<br>  <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">c</span>(<span class=\"hljs-params\">e</span>) </span>&#123;<br>    <span class=\"hljs-keyword\">var</span> a = t.createElement(<span class=\"hljs-string\">&quot;style&quot;</span>);<br>    <span class=\"hljs-keyword\">try</span> &#123;<br>      a.appendChild(t.createTextNode(e));<br>    &#125; <span class=\"hljs-keyword\">catch</span> (t) &#123;<br>      a.styleSheet.cssText = e;<br>    &#125;<br>    t.getElementsByTagName(<span class=\"hljs-string\">&quot;head&quot;</span>)[<span class=\"hljs-number\">0</span>].appendChild(a);<br>  &#125;<br>  <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">s</span>(<span class=\"hljs-params\"></span>) </span>&#123;<br>    <span class=\"hljs-keyword\">return</span> (<br>      <span class=\"hljs-string\">&quot;rgb(&quot;</span> +<br>      ~~(<span class=\"hljs-number\">255</span> * <span class=\"hljs-built_in\">Math</span>.random()) +<br>      <span class=\"hljs-string\">&quot;,&quot;</span> +<br>      ~~(<span class=\"hljs-number\">255</span> * <span class=\"hljs-built_in\">Math</span>.random()) +<br>      <span class=\"hljs-string\">&quot;,&quot;</span> +<br>      ~~(<span class=\"hljs-number\">255</span> * <span class=\"hljs-built_in\">Math</span>.random()) +<br>      <span class=\"hljs-string\">&quot;)&quot;</span><br>    );<br>  &#125;<br>  <span class=\"hljs-keyword\">var</span> d = [];<br>  (e.requestAnimationFrame = (<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\"></span>) </span>&#123;<br>    <span class=\"hljs-keyword\">return</span> (<br>      e.requestAnimationFrame ||<br>      e.webkitRequestAnimationFrame ||<br>      e.mozRequestAnimationFrame ||<br>      e.oRequestAnimationFrame ||<br>      e.msRequestAnimationFrame ||<br>      <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">e</span>) </span>&#123;<br>        <span class=\"hljs-built_in\">setTimeout</span>(e, <span class=\"hljs-number\">1e3</span> / <span class=\"hljs-number\">60</span>);<br>      &#125;<br>    );<br>  &#125;)()),<br>    n();<br>&#125;)(<span class=\"hljs-built_in\">window</span>, <span class=\"hljs-built_in\">document</span>);<br></code></pre></td></tr></table></figure>\n<p>在主题目录下的<code>`\\layout\\layout.ejs</code> 文件末尾 <code>&lt;!-- SCRIPTS --&gt;</code> 一段中添加以下代码：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs ejs\">&lt;script type=&quot;text/javascript&quot; src=&quot;/js/love.js&quot;&gt;&lt;/script&gt;<br></code></pre></td></tr></table></figure>\n<h3 id=\"插入网易云音乐\"><a href=\"#插入网易云音乐\" class=\"headerlink\" title=\"插入网易云音乐\"></a>插入网易云音乐</h3><p>在网易云音乐的网页版上选择一首音乐（不能是 VIP 音乐），点进页面 <code>https://music.163.com/#/song?id=(music_id)</code> 后选择“生成外链播放器”，“自动播放”一栏自选，再复制 HTML 代码：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs html\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">iframe</span></span><br><span class=\"hljs-tag\">  <span class=\"hljs-attr\">frameborder</span>=<span class=\"hljs-string\">&quot;no&quot;</span></span><br><span class=\"hljs-tag\">  <span class=\"hljs-attr\">border</span>=<span class=\"hljs-string\">&quot;0&quot;</span></span><br><span class=\"hljs-tag\">  <span class=\"hljs-attr\">marginwidth</span>=<span class=\"hljs-string\">&quot;0&quot;</span></span><br><span class=\"hljs-tag\">  <span class=\"hljs-attr\">marginheight</span>=<span class=\"hljs-string\">&quot;0&quot;</span></span><br><span class=\"hljs-tag\">  <span class=\"hljs-attr\">width</span>=<span class=\"hljs-string\">&quot;330&quot;</span></span><br><span class=\"hljs-tag\">  <span class=\"hljs-attr\">height</span>=<span class=\"hljs-string\">&quot;86&quot;</span></span><br><span class=\"hljs-tag\">  <span class=\"hljs-attr\">src</span>=<span class=\"hljs-string\">&quot;//music.163.com/outchain/player?type=2&amp;id=(music_id)&amp;auto=0&amp;height=66&quot;</span></span><br><span class=\"hljs-tag\">&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">iframe</span>&gt;</span><br></code></pre></td></tr></table></figure>\n<p>直接粘贴到 Markdown 文件内即可</p>\n<h3 id=\"调试并部署到-GitHub\"><a href=\"#调试并部署到-GitHub\" class=\"headerlink\" title=\"调试并部署到 GitHub\"></a>调试并部署到 GitHub</h3><p>安装 <a href=\"https://github.com/hexojs/hexo-deployer-git\">hexo-deployer-git</a>。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">npm install hexo-deployer-git<br></code></pre></td></tr></table></figure>\n<p>修改配置 <code>_config.yml</code>：</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs yaml\"><span class=\"hljs-attr\">deploy:</span><br>  <span class=\"hljs-attr\">type:</span> <span class=\"hljs-string\">git</span><br>  <span class=\"hljs-attr\">repo:</span> <span class=\"hljs-string\">&lt;repository</span> <span class=\"hljs-string\">url&gt;</span> <span class=\"hljs-comment\"># https://github.com/(user_name)/(user_name).github.io</span><br>  <span class=\"hljs-attr\">branch:</span> <span class=\"hljs-string\">(branch_name)</span> <span class=\"hljs-comment\"># default is &quot;main&quot;</span><br></code></pre></td></tr></table></figure>\n<p>调试：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">npx hexo s --debug<br></code></pre></td></tr></table></figure>\n<p>部署：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">npx hexo clean &amp;&amp; npx hexo deploy<br></code></pre></td></tr></table></figure>\n<p>查看 <code>(user_name).github.io</code> 和 <code>blog.example.top</code> 上的网页是否部署成功</p>\n<p>注意此时原有的自定义域名会被覆盖掉，如果 GitHub Pages 需要使用 CNAME 文件自定义域名，请将 CNAME 文件置于博客目录下的 <code>source</code> 文件夹，只有这样 <code>npx hexo deploy</code> 才能将 CNAME 文件一并推送至部署分支</p>\n<h3 id=\"LaTeX-Test\"><a href=\"#LaTeX-Test\" class=\"headerlink\" title=\"LaTeX Test\"></a>LaTeX Test</h3><p>This is a equation: $\\lim\\limits<em>{n\\to\\infty}\\left(1+\\dfrac{1}{n}\\right)^n=\\mathrm{e}$. Another Example: $\\sum\\limits</em>{n=0}^{\\infty}\\dfrac{x^n}{n!}=\\mathrm{e}^x$.</p>\n<p>This is a equation: <code>$\\lim\\limits_&#123;n\\to\\infty&#125;\\left(1+\\dfrac&#123;1&#125;&#123;n&#125;\\right)^n=\\mathrm&#123;e&#125;$</code>. Another Example: <code>$\\sum\\limits_&#123;n=0&#125;^&#123;\\infty&#125;\\dfrac&#123;x^n&#125;&#123;n!&#125;=\\mathrm&#123;e&#125;^x$</code>.</p>\n<script type=\"math/tex; mode=display\">\n\\dfrac{\\mathrm{d}}{\\mathrm{d}t}\\left(\\dfrac{\\partial L'}{\\partial \\dot{p}}\\right) - \\dfrac{\\partial L'}{\\partial p} = 0</script><script type=\"math/tex; mode=display\">\n\\lim_{n\\to+\\infty}a^n = \\left\\{\n    \\begin{aligned}\n        &0,\\quad &|a|<1 \\\\\n        &N/A,\\quad &|a|>1 \\\\\n        &1\\quad &a=1 \\\\\n        &N/A,\\quad &a=-1\n    \\end{aligned}\n\\right.</script><script type=\"math/tex; mode=display\">\n\\boldsymbol{a}\\cdot(\\boldsymbol{b}\\times\\boldsymbol{c}) = \\boldsymbol{b}\\cdot(\\boldsymbol{c}\\times\\boldsymbol{a}) = \\boldsymbol{c}\\cdot(\\boldsymbol{a}\\times\\boldsymbol{b})</script><script type=\"math/tex; mode=display\">\n\\begin{align*}\n    \\partial_i r\n    &= \\partial_i \\sqrt{(x-x')^2 + (y-y')^2 + (z-z')^2} \\\\\n    &= \\frac{2(x-x')}{2\\sqrt{(x-x')^2 + (y-y')^2 + (z-z')^2}} \\\\\n    &= \\frac{x-x'}{r}\n\\end{align*}</script><script type=\"math/tex; mode=display\">\nI_r = \\frac{1}{2\\pi}\\oint p_r \\,\\mathrm{d}r = \\frac{1}{2\\pi}\\int_0^{2\\pi} p_r \\frac{\\mathrm{d}r}{\\mathrm{d}\\theta}\\,\\mathrm{d}\\theta = \\frac{\\lambda}{\\omega} + \\sqrt{2m\\kappa}</script><script type=\"math/tex; mode=display\">\n\\begin{align*}\n    H\n    &= T+V \\\\\n    &= \\frac{1}{2}m(\\dot{x} + \\dot{\\theta}l\\cos\\theta)^2 + \\frac{1}{2}m(2ax\\dot{x} + \\dot{\\theta}l\\sin\\theta)^2 + mg(ax^2 - l\\cos\\theta) \\\\\n    &= \\frac{1}{2}m(1+4a^2x^2)\\dot{x}^2 - \\frac{1}{2}ml^2\\dot{\\theta}^2 + ml(\\cos\\theta + 2ax\\sin\\theta)\\dot{x}\\dot{\\theta} + mg(ax^2 - l\\cos\\theta) \\\\\n    &= \\frac{A}{2}\\cdot\\left(\\frac{Dp_x - Bp_\\theta}{AD - BC}\\right)^2 + \\frac{D}{2}\\cdot\\left(\\frac{Ap_\\theta - Cp_x}{AD - BC}\\right)^2 + \\frac{B(Dp_x - Bp_\\theta)(Ap_\\theta - Cp_x)}{(AD - BC)^2} + mg(ax^2 - l\\cos\\theta) \\\\\n    &= \\frac{Dp_x^2 + Ap_\\theta^2 - (B+C)p_x p_\\theta}{2(AD - BC)} \\\\\n    &= \\frac{[p_\\theta,\\ p_x]\\begin{bmatrix}A & B \\\\ C & D\\end{bmatrix}\\begin{bmatrix}p_\\theta \\\\ p_x\\end{bmatrix}}{2\\begin{vmatrix}A & B \\\\ C & D\\end{vmatrix}} + mg(ax^2 - l\\cos\\theta)\n\\end{align*}</script><h3 id=\"Code-Test\"><a href=\"#Code-Test\" class=\"headerlink\" title=\"Code Test\"></a>Code Test</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs python\"><span class=\"hljs-function\"><span class=\"hljs-keyword\">def</span> <span class=\"hljs-title\">fib</span>(<span class=\"hljs-params\">n</span>):</span><br>    a, b = <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">1</span><br>    <span class=\"hljs-keyword\">while</span> a &lt; n:<br>        <span class=\"hljs-built_in\">print</span>(a, end=<span class=\"hljs-string\">&#x27; &#x27;</span>)<br>        a, b = b, a+b<br>    <span class=\"hljs-built_in\">print</span>()<br>fib(<span class=\"hljs-number\">1000</span>)<br></code></pre></td></tr></table></figure>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">iconv -f (from_encoding) -t (to_encoding) (from_file_name) -o (to_file_name)<br></code></pre></td></tr></table></figure>\n<h3 id=\"Picture-Test\"><a href=\"#Picture-Test\" class=\"headerlink\" title=\"Picture Test\"></a>Picture Test</h3><p>格式：<code>![](../images/(your_picture.jpg)</code>，图片默认放在博客目录的 <code>/source/images/</code> 下</p>\n<p><img src=\"../images/hello_world_reimu.jpg\" alt=\"\"></p>\n<h3 id=\"进阶功能\"><a href=\"#进阶功能\" class=\"headerlink\" title=\"进阶功能\"></a>进阶功能</h3><ul>\n<li style=\"list-style: none\"><input type=\"checkbox\"></input> Aplayer</li>\n<li style=\"list-style: none\"><input type=\"checkbox\"></input> 樱花特效</li>\n<li style=\"list-style: none\"><input type=\"checkbox\"></input> 点赞功能</li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<iframe frameborder=\"no\" border=\"0\" marginwidth=\"0\" marginheight=\"0\" width=330 height=86 src=\"//music.163.com/outchain/player?type=2&id=22636684&auto=1&height=66\"></iframe>\n\n<h3 id=\"申请-GitHub-Pages\"><a href=\"#申请-GitHub-Pages\" class=\"headerlink\" title=\"申请 GitHub Pages\"></a>申请 GitHub Pages</h3><p>新建一个 repository，命名为 <code>(user_name).github.io</code>，隐私设置为 Public，再建一个 GitHub 仓库用来存放博客的源代码（可选）</p>\n<h3 id=\"申请域名\"><a href=\"#申请域名\" class=\"headerlink\" title=\"申请域名\"></a>申请域名</h3><p>我选择的是阿里云，在<a href=\"https://wanwang.aliyun.com/\">万网</a>输入自己想要的域名并购买。一般来讲 <code>.top</code> 最便宜，<code>.xyz</code> 次之。 假设域名为 <code>example.top</code> 根据网站提示做好域名实名制认证等流程。在<a href=\"https://dc.console.aliyun.com/next/#/domain/list/all-domain\">域名控制台</a>中选择：域名 &gt;&gt; 操作 &gt;&gt; 解析</p>\n<p>解析中添加一条记录：</p>\n<figure class=\"highlight dns\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs dns\">记录类型：<span class=\"hljs-keyword\">CNAME</span>；<br>主机记录自选（我这里选择的是 blog，因为 www 经常无法与 GitHub Pages 连接）；<br>解析线路选择默认；<br>记录值选择(user_name).github.io；<br>TTL选择“<span class=\"hljs-number\">10</span>分钟”<br></code></pre></td></tr></table></figure>\n<p>再去名为 <code>(user_name).github.io</code> 的 repository，新建一个文件，文件名为 <code>CNAME</code>，填入 <code>blog.example.top</code> ，通过 GitHub 的网络检测后就可以使用。</p>\n<p>此时可以分别在浏览器中输入 <code>(user_name).github.io</code> 和 <code>blog.example.top</code> 试一试，如果能显示<code>README.md</code> 中的内容则设置成功。</p>\n<h3 id=\"Hexo-搭建并添加文章\"><a href=\"#Hexo-搭建并添加文章\" class=\"headerlink\" title=\"Hexo 搭建并添加文章\"></a>Hexo 搭建并添加文章</h3><p>我选择用 <a href=\"https://hexo.io/zh-cn/index.html\">Hexo</a></p>\n<p>建议在 Linux 上搭建，而不用 Windows</p>\n<p>下载 Node-js 和 npm：<code>sudo pacman -S nodejs npm</code></p>\n<p>下载 Hexo 的方法如下：（推荐如下的全局下载方案）</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">mkdir ~/.npm-global<br>npm config <span class=\"hljs-built_in\">set</span> prefix <span class=\"hljs-string\">&#x27;~/.npm-global&#x27;</span><br></code></pre></td></tr></table></figure>\n<p>然后在 <code>~/.profile</code> 中加入一行：<code>export PATH=~/.npm-global/bin:$PATH</code></p>\n<p>最后输入：（npm 5.0.0 开始，默认安装不需要 <code>–-save</code> 选项，已经可以自动执行）</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-built_in\">source</span> ~/.profile<br>npm install -g hexo-cli<br></code></pre></td></tr></table></figure>\n<p>找一个空文件夹 <code>(hexo_folder)</code>，运行：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">npx hexo init (hexo_folder)<br><span class=\"hljs-built_in\">cd</span> (hexo_folder)<br>npm install<br></code></pre></td></tr></table></figure>\n<p>所有的 npm 和 hexo 命令都要在<code>(hexo_folder)</code>（下文称为“<strong>博客目录</strong>”）下执行</p>\n<p>全局配置的官方指南在<a href=\"https://hexo.io/zh-cn/docs/\">这里</a>，在 <code>(hexo_folder)/_config.yml</code> 下修改：</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs yaml\"><span class=\"hljs-attr\">url:</span> <span class=\"hljs-string\">https://blog.example.top</span><br><span class=\"hljs-attr\">permalink:</span> <span class=\"hljs-string\">:title/</span><br><span class=\"hljs-attr\">permalink_defaults:</span><br><span class=\"hljs-attr\">pretty_urls:</span><br>  <span class=\"hljs-attr\">trailing_index:</span> <span class=\"hljs-literal\">false</span><br>  <span class=\"hljs-attr\">trailing_html:</span> <span class=\"hljs-literal\">false</span><br></code></pre></td></tr></table></figure>\n<p>添加文章：<code>npx hexo new post hello</code>，这生成 <code>blog.example.top/hello</code></p>\n<p>在子文件夹下添加文章：<code>npx hexo new post --path hello/me</code>，这生成 <code>blog.example.top/hello/me</code></p>\n<p>每篇文章的 Markdown 文件内一开始有用 <code>---</code> 分隔的部分，下文称为 <strong>Front-matter</strong>，例如：</p>\n<figure class=\"highlight dts\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs dts\"><span class=\"hljs-symbol\">title:</span> Hello World<br><span class=\"hljs-symbol\">date:</span> <span class=\"hljs-number\">2021</span><span class=\"hljs-number\">-09</span><span class=\"hljs-number\">-06</span> <span class=\"hljs-number\">12</span>:<span class=\"hljs-number\">00</span>:<span class=\"hljs-number\">00</span><br><span class=\"hljs-symbol\">math:</span> true<br><span class=\"hljs-symbol\">category:</span><br>- 教程<br><span class=\"hljs-symbol\">tag:</span><br>- Hello World<br>- Blog<br><span class=\"hljs-symbol\">index_img:</span> <span class=\"hljs-meta-keyword\">/img/</span>Purple_Flower.jpg<br><span class=\"hljs-symbol\">banner_img:</span> <span class=\"hljs-meta-keyword\">/img/</span>Purple_Flower.jpg<br></code></pre></td></tr></table></figure>\n<h3 id=\"Fluid-主题\"><a href=\"#Fluid-主题\" class=\"headerlink\" title=\"Fluid 主题\"></a>Fluid 主题</h3><p>我选择的是 <a href=\"https://hexo.fluid-dev.com/\">Fluid</a> 主题，安装方法：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">npm install hexo-theme-fluid<br></code></pre></td></tr></table></figure>\n<p>这样的话它会保存在<code>(hexo_folder)/node_modules/hexo-theme-fluid</code>（下文称为“<strong>主题目录</strong>”），更新主题需要在<code>(hexo_folder)</code>下执行<code>npm update hexo-theme-fluid</code></p>\n<p>可以在 <code>(hexo_folder)/themes</code> 中创建软链接：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">ln -s ../node_modules/hexo-theme-fluid/<br></code></pre></td></tr></table></figure>\n<p>Fluid 配置的官方指南在 <a href=\"https://hexo.fluid-dev.com/docs/guide/\">https://hexo.fluid-dev.com/docs/guide/</a></p>\n<p>在<code>(hexo_folder)/_config.yml</code>下修改：<code>theme:fluid</code></p>\n<p>在博客目录下创建 <code>_config.fluid.yml</code> 文件，将主题目录下的 <code>_config.yml</code>复制过去，以后如果修改任何主题配置，都只需修改 <code>_config.fluid.yml</code> 的配置即可，其优先级比主题目录下的 <code>_config.yml</code>高。</p>\n<ul>\n<li><p>更改用于浏览器标签的图标：<code>favicon: /img/favicon.png</code>，<code>apple_touch_icon</code>同步修改</p>\n</li>\n<li><p><code>force_https: true</code></p>\n</li>\n<li><p>代码高亮：<code>highlightjs: style: &quot;Vs&quot;</code></p>\n</li>\n<li><p>打字机打印速度：<code>typespeed: 64</code>，不开启循环播放</p>\n</li>\n<li><p>为文章内容中的标题添加锚图标：<code>icon: &quot;§&quot;</code></p>\n</li>\n<li><p>主题字体配置：</p>\n</li>\n</ul>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs yaml\"><span class=\"hljs-attr\">font:</span><br>    <span class=\"hljs-attr\">font_size:</span> <span class=\"hljs-string\">16px</span><br>    <span class=\"hljs-attr\">font_family:</span> <span class=\"hljs-string\">Noto</span> <span class=\"hljs-string\">Sans</span> <span class=\"hljs-string\">CJK</span> <span class=\"hljs-string\">SC,</span> <span class=\"hljs-string\">sans-serif</span><br>    <span class=\"hljs-attr\">code_font_size:</span> <span class=\"hljs-number\">100</span><span class=\"hljs-string\">%</span><br></code></pre></td></tr></table></figure>\n<ul>\n<li><p>导航栏左侧的标题：<code>blog_title: &quot;Home&quot;</code></p>\n</li>\n<li><p>关于页中 <code>icons</code> 一项只保留 GitHub</p>\n</li>\n<li><p>每个页面的 Banner 头图：<code>banner_img</code> ，自选</p>\n</li>\n<li><p>首页副标题（slogan）的独立设置：<code>slogan: text:</code> 自选</p>\n</li>\n<li><p>自动截取文章摘要：<code>auto_excerpt: enable: false</code></p>\n</li>\n<li><p>隐藏版权声明：<code>copyright: enable: false</code></p>\n</li>\n<li><p>MathJax 渲染（虽然慢但是支持比 Katex 多而且字体更美观）：严格按照<a href=\"https://hexo.fluid-dev.com/docs/guide/##latex-数学公式\">官方文档</a>，记得更改渲染引擎为<code>hexo-renderer-kramed</code> 并删掉原有的 <code>hexo-renderer-marked</code> ，书写格式见下方 <strong>LaTeX Test</strong> 一节，如需使用，需在 Front-matter 中指定 <code>math: true</code>，支持行内公式（和行间公式）。但是这样会修改丢失对 Markdown 复选框的支持，开启则需要将如下代码加入到本地的<code>(hexo_folder)/node_modules/hexo-renderer-kramed/lib/renderer.js</code>的第19行中（参考<a href=\"https://corecabin.cn/2021/08/14/solve-some-problems-of-hexo-renderer-kramed-rendering-conflicts/\">这里</a>），行内公式和行内代码冲突也可以参考<a href=\"https://corecabin.cn/2021/08/14/solve-some-problems-of-hexo-renderer-kramed-rendering-conflicts/\">这里</a></p>\n</li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs js\"><span class=\"hljs-comment\">// Support To-Do List</span><br>Renderer.prototype.listitem = <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">text</span>) </span>&#123;<br>  <span class=\"hljs-keyword\">if</span> (<span class=\"hljs-regexp\">/^\\s*\\[[x ]\\]\\s*/</span>.test(text)) &#123;<br>    text = text.replace(<span class=\"hljs-regexp\">/^\\s*\\[ \\]\\s*/</span>, <span class=\"hljs-string\">&#x27;&lt;input type=&quot;checkbox&quot;&gt;&lt;/input&gt; &#x27;</span>).replace(<span class=\"hljs-regexp\">/^\\s*\\[x\\]\\s*/</span>, <span class=\"hljs-string\">&#x27;&lt;input type=&quot;checkbox&quot; checked&gt;&lt;/input&gt; &#x27;</span>);<br>    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">&#x27;&lt;li style=&quot;list-style: none&quot;&gt;&#x27;</span> + text + <span class=\"hljs-string\">&#x27;&lt;/li&gt;\\n&#x27;</span>;<br>  &#125; <span class=\"hljs-keyword\">else</span> &#123;<br>    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">&#x27;&lt;li&gt;&#x27;</span> + text + <span class=\"hljs-string\">&#x27;&lt;/li&gt;\\n&#x27;</span>;<br>  &#125;<br>&#125;;<br></code></pre></td></tr></table></figure>\n<h3 id=\"如何用“友链”页的模板创建一个“工具”页\"><a href=\"#如何用“友链”页的模板创建一个“工具”页\" class=\"headerlink\" title=\"如何用“友链”页的模板创建一个“工具”页\"></a>如何用“友链”页的模板创建一个“工具”页</h3><p>首先新建一个页面：<code>npx hexo new page tools</code>，注意发表文章要将模板 <code>page</code> 改为 <code>post</code></p>\n<p>这样就有了 <code>example.top/tools/</code> 的页面</p>\n<p>再找到 <code>icon-tools</code> 的图标：<a href=\"https://blog.csdn.net/Xiaoming782893687/article/details/90744911\">https://blog.csdn.net/Xiaoming782893687/article/details/90744911</a></p>\n<p>实际操作是：在 <code>custom_css</code> 一栏中加入 <code>- //at.alicdn.com/t/font_2794470_ewg5czgn3cd.css</code>，然后就可以在导航栏菜单 <code>menu:</code> 一栏中加入 <code>- &#123; key: &quot;tools&quot;, link: &quot;/tools/&quot;, icon: &quot;iconfont icon-tools&quot; &#125;</code></p>\n<p>在博客目录内的 <code>/source/tools/index.md</code> 的 Front-matter 加入 <code>layout: links</code>，这会引入主题目录中的模板：<code>/layout/links.ejs</code></p>\n<p>于是开始设置<code>_config.fluid.yml</code>：</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs yaml\"><span class=\"hljs-attr\">links:</span><br>  <span class=\"hljs-attr\">enable:</span> <span class=\"hljs-literal\">true</span><br>  <span class=\"hljs-attr\">banner_img:</span> <span class=\"hljs-string\">(your_picture)</span><br>  <span class=\"hljs-attr\">banner_img_height:</span> <span class=\"hljs-number\">60</span><br>  <span class=\"hljs-attr\">banner_mask_alpha:</span> <span class=\"hljs-number\">0.3</span><br>  <span class=\"hljs-attr\">subtitle:</span><br>  <span class=\"hljs-comment\"># 友链的成员项</span><br>  <span class=\"hljs-comment\"># Member item of page</span><br>  <span class=\"hljs-attr\">items:</span><br>    <span class=\"hljs-bullet\">-</span> &#123;<br>      <span class=\"hljs-attr\">title:</span> <span class=\"hljs-string\">&quot;(your_title)&quot;</span>,<br>      <span class=\"hljs-attr\">intro:</span> <span class=\"hljs-string\">&quot;(your_intro)&quot;</span>,<br>      <span class=\"hljs-attr\">link:</span> <span class=\"hljs-string\">&quot;(your_link)&quot;</span>,<br>      <span class=\"hljs-attr\">avatar:</span> <span class=\"hljs-string\">&quot;(your_avatar)&quot;</span><br>    &#125;<br></code></pre></td></tr></table></figure>\n<p>并修改主题目录下<code>/languages/</code>中的所有<code>.yml</code>文件，例如<code>en.yml</code>中改为：</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs yaml\"><span class=\"hljs-attr\">links:</span><br>  <span class=\"hljs-attr\">title:</span> <span class=\"hljs-string\">Tools</span><br>  <span class=\"hljs-attr\">subtitle:</span> <span class=\"hljs-string\">Tools</span><br></code></pre></td></tr></table></figure>\n<h3 id=\"如何在导航栏菜单创建一个-GitHub-链接\"><a href=\"#如何在导航栏菜单创建一个-GitHub-链接\" class=\"headerlink\" title=\"如何在导航栏菜单创建一个 GitHub 链接\"></a>如何在导航栏菜单创建一个 GitHub 链接</h3><p>和创建“工具”方法类似，这次需要找到 <code>icon-github</code>（自带图标太小了）的图标</p>\n<p>实际操作是：在 <code>custom_css</code> 一栏中加入 <code>- //at.alicdn.com/t/font_2794470_brhhjh3wx87.css</code>，然后就可以在导航栏菜单 <code>menu:</code> 一栏中加入 <code>- &#123; key: &quot;GitHub&quot;, link: &quot;https://github.com/(user_name)&quot;, icon: &quot;iconfont icon-github&quot; &#125;</code> 即可</p>\n<h3 id=\"加入特效：鼠标点击有小红心\"><a href=\"#加入特效：鼠标点击有小红心\" class=\"headerlink\" title=\"加入特效：鼠标点击有小红心\"></a>加入特效：鼠标点击有小红心</h3><p>在主题目录下的 <code>/source/js</code> 文件夹中新建文件 <code>love.js</code>，在 <code>love.js</code> 文件中添加以下代码：（修改过，更新了已经弃用的部分，原始代码参见<a href=\"https://segmentfault.com/a/1190000007215988\">这里</a>）</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs js\">!(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">e, t, a</span>) </span>&#123;<br>  <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">n</span>(<span class=\"hljs-params\"></span>) </span>&#123;<br>    c(<br>      <span class=\"hljs-string\">&quot;.heart&#123;width: 10px;height: 10px;position: fixed;background: #f00;transform: rotate(45deg);-webkit-transform: rotate(45deg);-moz-transform: rotate(45deg);&#125;.heart:after,.heart:before&#123;content: &#x27;&#x27;;width: inherit;height: inherit;background: inherit;border-radius: 50%;-webkit-border-radius: 50%;-moz-border-radius: 50%;position: fixed;&#125;.heart:after&#123;top: -5px;&#125;.heart:before&#123;left: -5px;&#125;&quot;</span><br>    ),<br>      o(),<br>      r();<br>  &#125;<br>  <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">r</span>(<span class=\"hljs-params\"></span>) </span>&#123;<br>    <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">var</span> e = <span class=\"hljs-number\">0</span>; e &lt; d.length; e++)<br>      d[e].alpha &lt;= <span class=\"hljs-number\">0</span><br>        ? (t.body.removeChild(d[e].el), d.splice(e, <span class=\"hljs-number\">1</span>))<br>        : (d[e].y--,<br>          (d[e].scale += <span class=\"hljs-number\">0.004</span>),<br>          (d[e].alpha -= <span class=\"hljs-number\">0.013</span>),<br>          (d[e].el.style.cssText =<br>            <span class=\"hljs-string\">&quot;left:&quot;</span> +<br>            d[e].x +<br>            <span class=\"hljs-string\">&quot;px;top:&quot;</span> +<br>            d[e].y +<br>            <span class=\"hljs-string\">&quot;px;opacity:&quot;</span> +<br>            d[e].alpha +<br>            <span class=\"hljs-string\">&quot;;transform:scale(&quot;</span> +<br>            d[e].scale +<br>            <span class=\"hljs-string\">&quot;,&quot;</span> +<br>            d[e].scale +<br>            <span class=\"hljs-string\">&quot;) rotate(45deg);background:&quot;</span> +<br>            d[e].color +<br>            <span class=\"hljs-string\">&quot;;z-index:99999&quot;</span>));<br>    requestAnimationFrame(r);<br>  &#125;<br>  <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">o</span>(<span class=\"hljs-params\"></span>) </span>&#123;<br>    <span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-string\">&quot;function&quot;</span> == <span class=\"hljs-keyword\">typeof</span> e.onclick &amp;&amp; e.onclick;<br>    e.onclick = <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">e</span>) </span>&#123;<br>      t &amp;&amp; t(), i(e);<br>    &#125;;<br>  &#125;<br>  <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">i</span>(<span class=\"hljs-params\">e</span>) </span>&#123;<br>    <span class=\"hljs-keyword\">var</span> a = t.createElement(<span class=\"hljs-string\">&quot;div&quot;</span>);<br>    (a.className = <span class=\"hljs-string\">&quot;heart&quot;</span>),<br>      d.push(&#123;<br>        <span class=\"hljs-attr\">el</span>: a,<br>        <span class=\"hljs-attr\">x</span>: e.clientX - <span class=\"hljs-number\">5</span>,<br>        <span class=\"hljs-attr\">y</span>: e.clientY - <span class=\"hljs-number\">5</span>,<br>        <span class=\"hljs-attr\">scale</span>: <span class=\"hljs-number\">1</span>,<br>        <span class=\"hljs-attr\">alpha</span>: <span class=\"hljs-number\">1</span>,<br>        <span class=\"hljs-attr\">color</span>: s(),<br>      &#125;),<br>      t.body.appendChild(a);<br>  &#125;<br>  <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">c</span>(<span class=\"hljs-params\">e</span>) </span>&#123;<br>    <span class=\"hljs-keyword\">var</span> a = t.createElement(<span class=\"hljs-string\">&quot;style&quot;</span>);<br>    <span class=\"hljs-keyword\">try</span> &#123;<br>      a.appendChild(t.createTextNode(e));<br>    &#125; <span class=\"hljs-keyword\">catch</span> (t) &#123;<br>      a.styleSheet.cssText = e;<br>    &#125;<br>    t.getElementsByTagName(<span class=\"hljs-string\">&quot;head&quot;</span>)[<span class=\"hljs-number\">0</span>].appendChild(a);<br>  &#125;<br>  <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">s</span>(<span class=\"hljs-params\"></span>) </span>&#123;<br>    <span class=\"hljs-keyword\">return</span> (<br>      <span class=\"hljs-string\">&quot;rgb(&quot;</span> +<br>      ~~(<span class=\"hljs-number\">255</span> * <span class=\"hljs-built_in\">Math</span>.random()) +<br>      <span class=\"hljs-string\">&quot;,&quot;</span> +<br>      ~~(<span class=\"hljs-number\">255</span> * <span class=\"hljs-built_in\">Math</span>.random()) +<br>      <span class=\"hljs-string\">&quot;,&quot;</span> +<br>      ~~(<span class=\"hljs-number\">255</span> * <span class=\"hljs-built_in\">Math</span>.random()) +<br>      <span class=\"hljs-string\">&quot;)&quot;</span><br>    );<br>  &#125;<br>  <span class=\"hljs-keyword\">var</span> d = [];<br>  (e.requestAnimationFrame = (<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\"></span>) </span>&#123;<br>    <span class=\"hljs-keyword\">return</span> (<br>      e.requestAnimationFrame ||<br>      e.webkitRequestAnimationFrame ||<br>      e.mozRequestAnimationFrame ||<br>      e.oRequestAnimationFrame ||<br>      e.msRequestAnimationFrame ||<br>      <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">e</span>) </span>&#123;<br>        <span class=\"hljs-built_in\">setTimeout</span>(e, <span class=\"hljs-number\">1e3</span> / <span class=\"hljs-number\">60</span>);<br>      &#125;<br>    );<br>  &#125;)()),<br>    n();<br>&#125;)(<span class=\"hljs-built_in\">window</span>, <span class=\"hljs-built_in\">document</span>);<br></code></pre></td></tr></table></figure>\n<p>在主题目录下的<code>`\\layout\\layout.ejs</code> 文件末尾 <code>&lt;!-- SCRIPTS --&gt;</code> 一段中添加以下代码：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs ejs\">&lt;script type=&quot;text/javascript&quot; src=&quot;/js/love.js&quot;&gt;&lt;/script&gt;<br></code></pre></td></tr></table></figure>\n<h3 id=\"插入网易云音乐\"><a href=\"#插入网易云音乐\" class=\"headerlink\" title=\"插入网易云音乐\"></a>插入网易云音乐</h3><p>在网易云音乐的网页版上选择一首音乐（不能是 VIP 音乐），点进页面 <code>https://music.163.com/#/song?id=(music_id)</code> 后选择“生成外链播放器”，“自动播放”一栏自选，再复制 HTML 代码：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs html\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">iframe</span></span><br><span class=\"hljs-tag\">  <span class=\"hljs-attr\">frameborder</span>=<span class=\"hljs-string\">&quot;no&quot;</span></span><br><span class=\"hljs-tag\">  <span class=\"hljs-attr\">border</span>=<span class=\"hljs-string\">&quot;0&quot;</span></span><br><span class=\"hljs-tag\">  <span class=\"hljs-attr\">marginwidth</span>=<span class=\"hljs-string\">&quot;0&quot;</span></span><br><span class=\"hljs-tag\">  <span class=\"hljs-attr\">marginheight</span>=<span class=\"hljs-string\">&quot;0&quot;</span></span><br><span class=\"hljs-tag\">  <span class=\"hljs-attr\">width</span>=<span class=\"hljs-string\">&quot;330&quot;</span></span><br><span class=\"hljs-tag\">  <span class=\"hljs-attr\">height</span>=<span class=\"hljs-string\">&quot;86&quot;</span></span><br><span class=\"hljs-tag\">  <span class=\"hljs-attr\">src</span>=<span class=\"hljs-string\">&quot;//music.163.com/outchain/player?type=2&amp;id=(music_id)&amp;auto=0&amp;height=66&quot;</span></span><br><span class=\"hljs-tag\">&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">iframe</span>&gt;</span><br></code></pre></td></tr></table></figure>\n<p>直接粘贴到 Markdown 文件内即可</p>\n<h3 id=\"调试并部署到-GitHub\"><a href=\"#调试并部署到-GitHub\" class=\"headerlink\" title=\"调试并部署到 GitHub\"></a>调试并部署到 GitHub</h3><p>安装 <a href=\"https://github.com/hexojs/hexo-deployer-git\">hexo-deployer-git</a>。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">npm install hexo-deployer-git<br></code></pre></td></tr></table></figure>\n<p>修改配置 <code>_config.yml</code>：</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs yaml\"><span class=\"hljs-attr\">deploy:</span><br>  <span class=\"hljs-attr\">type:</span> <span class=\"hljs-string\">git</span><br>  <span class=\"hljs-attr\">repo:</span> <span class=\"hljs-string\">&lt;repository</span> <span class=\"hljs-string\">url&gt;</span> <span class=\"hljs-comment\"># https://github.com/(user_name)/(user_name).github.io</span><br>  <span class=\"hljs-attr\">branch:</span> <span class=\"hljs-string\">(branch_name)</span> <span class=\"hljs-comment\"># default is &quot;main&quot;</span><br></code></pre></td></tr></table></figure>\n<p>调试：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">npx hexo s --debug<br></code></pre></td></tr></table></figure>\n<p>部署：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">npx hexo clean &amp;&amp; npx hexo deploy<br></code></pre></td></tr></table></figure>\n<p>查看 <code>(user_name).github.io</code> 和 <code>blog.example.top</code> 上的网页是否部署成功</p>\n<p>注意此时原有的自定义域名会被覆盖掉，如果 GitHub Pages 需要使用 CNAME 文件自定义域名，请将 CNAME 文件置于博客目录下的 <code>source</code> 文件夹，只有这样 <code>npx hexo deploy</code> 才能将 CNAME 文件一并推送至部署分支</p>\n<h3 id=\"LaTeX-Test\"><a href=\"#LaTeX-Test\" class=\"headerlink\" title=\"LaTeX Test\"></a>LaTeX Test</h3><p>This is a equation: $\\lim\\limits<em>{n\\to\\infty}\\left(1+\\dfrac{1}{n}\\right)^n=\\mathrm{e}$. Another Example: $\\sum\\limits</em>{n=0}^{\\infty}\\dfrac{x^n}{n!}=\\mathrm{e}^x$.</p>\n<p>This is a equation: <code>$\\lim\\limits_&#123;n\\to\\infty&#125;\\left(1+\\dfrac&#123;1&#125;&#123;n&#125;\\right)^n=\\mathrm&#123;e&#125;$</code>. Another Example: <code>$\\sum\\limits_&#123;n=0&#125;^&#123;\\infty&#125;\\dfrac&#123;x^n&#125;&#123;n!&#125;=\\mathrm&#123;e&#125;^x$</code>.</p>\n<script type=\"math/tex; mode=display\">\n\\dfrac{\\mathrm{d}}{\\mathrm{d}t}\\left(\\dfrac{\\partial L'}{\\partial \\dot{p}}\\right) - \\dfrac{\\partial L'}{\\partial p} = 0</script><script type=\"math/tex; mode=display\">\n\\lim_{n\\to+\\infty}a^n = \\left\\{\n    \\begin{aligned}\n        &0,\\quad &|a|<1 \\\\\n        &N/A,\\quad &|a|>1 \\\\\n        &1\\quad &a=1 \\\\\n        &N/A,\\quad &a=-1\n    \\end{aligned}\n\\right.</script><script type=\"math/tex; mode=display\">\n\\boldsymbol{a}\\cdot(\\boldsymbol{b}\\times\\boldsymbol{c}) = \\boldsymbol{b}\\cdot(\\boldsymbol{c}\\times\\boldsymbol{a}) = \\boldsymbol{c}\\cdot(\\boldsymbol{a}\\times\\boldsymbol{b})</script><script type=\"math/tex; mode=display\">\n\\begin{align*}\n    \\partial_i r\n    &= \\partial_i \\sqrt{(x-x')^2 + (y-y')^2 + (z-z')^2} \\\\\n    &= \\frac{2(x-x')}{2\\sqrt{(x-x')^2 + (y-y')^2 + (z-z')^2}} \\\\\n    &= \\frac{x-x'}{r}\n\\end{align*}</script><script type=\"math/tex; mode=display\">\nI_r = \\frac{1}{2\\pi}\\oint p_r \\,\\mathrm{d}r = \\frac{1}{2\\pi}\\int_0^{2\\pi} p_r \\frac{\\mathrm{d}r}{\\mathrm{d}\\theta}\\,\\mathrm{d}\\theta = \\frac{\\lambda}{\\omega} + \\sqrt{2m\\kappa}</script><script type=\"math/tex; mode=display\">\n\\begin{align*}\n    H\n    &= T+V \\\\\n    &= \\frac{1}{2}m(\\dot{x} + \\dot{\\theta}l\\cos\\theta)^2 + \\frac{1}{2}m(2ax\\dot{x} + \\dot{\\theta}l\\sin\\theta)^2 + mg(ax^2 - l\\cos\\theta) \\\\\n    &= \\frac{1}{2}m(1+4a^2x^2)\\dot{x}^2 - \\frac{1}{2}ml^2\\dot{\\theta}^2 + ml(\\cos\\theta + 2ax\\sin\\theta)\\dot{x}\\dot{\\theta} + mg(ax^2 - l\\cos\\theta) \\\\\n    &= \\frac{A}{2}\\cdot\\left(\\frac{Dp_x - Bp_\\theta}{AD - BC}\\right)^2 + \\frac{D}{2}\\cdot\\left(\\frac{Ap_\\theta - Cp_x}{AD - BC}\\right)^2 + \\frac{B(Dp_x - Bp_\\theta)(Ap_\\theta - Cp_x)}{(AD - BC)^2} + mg(ax^2 - l\\cos\\theta) \\\\\n    &= \\frac{Dp_x^2 + Ap_\\theta^2 - (B+C)p_x p_\\theta}{2(AD - BC)} \\\\\n    &= \\frac{[p_\\theta,\\ p_x]\\begin{bmatrix}A & B \\\\ C & D\\end{bmatrix}\\begin{bmatrix}p_\\theta \\\\ p_x\\end{bmatrix}}{2\\begin{vmatrix}A & B \\\\ C & D\\end{vmatrix}} + mg(ax^2 - l\\cos\\theta)\n\\end{align*}</script><h3 id=\"Code-Test\"><a href=\"#Code-Test\" class=\"headerlink\" title=\"Code Test\"></a>Code Test</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs python\"><span class=\"hljs-function\"><span class=\"hljs-keyword\">def</span> <span class=\"hljs-title\">fib</span>(<span class=\"hljs-params\">n</span>):</span><br>    a, b = <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">1</span><br>    <span class=\"hljs-keyword\">while</span> a &lt; n:<br>        <span class=\"hljs-built_in\">print</span>(a, end=<span class=\"hljs-string\">&#x27; &#x27;</span>)<br>        a, b = b, a+b<br>    <span class=\"hljs-built_in\">print</span>()<br>fib(<span class=\"hljs-number\">1000</span>)<br></code></pre></td></tr></table></figure>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">iconv -f (from_encoding) -t (to_encoding) (from_file_name) -o (to_file_name)<br></code></pre></td></tr></table></figure>\n<h3 id=\"Picture-Test\"><a href=\"#Picture-Test\" class=\"headerlink\" title=\"Picture Test\"></a>Picture Test</h3><p>格式：<code>![](../images/(your_picture.jpg)</code>，图片默认放在博客目录的 <code>/source/images/</code> 下</p>\n<p><img src=\"../images/hello_world_reimu.jpg\" alt=\"\"></p>\n<h3 id=\"进阶功能\"><a href=\"#进阶功能\" class=\"headerlink\" title=\"进阶功能\"></a>进阶功能</h3><ul>\n<li style=\"list-style: none\"><input type=\"checkbox\"></input> Aplayer</li>\n<li style=\"list-style: none\"><input type=\"checkbox\"></input> 樱花特效</li>\n<li style=\"list-style: none\"><input type=\"checkbox\"></input> 点赞功能</li>\n</ul>\n"},{"title":"时间计算器","date":"2021-11-02T16:00:00.000Z","index_img":"/img/OrionStreams.jpg","banner_img":"/img/OrionStreams.jpg","_content":"<script src=\"../../js/time-calculator.js\"></script>\n\n<div align=\"center\">\n<form>\n    <select name=\"timezone\" id=\"timezone\">\n        <option value=\"0\">UTC</option>\n        <option value=\"1\">UTC+1</option>\n        <option value=\"2\">UTC+2</option>\n        <option value=\"3\">UTC+3</option>\n        <option value=\"4\">UTC+4</option>\n        <option value=\"5\">UTC+5</option>\n        <option value=\"6\">UTC+6</option>\n        <option value=\"7\">UTC+7</option>\n        <option value=\"8\">UTC+8</option>\n        <option value=\"9\">UTC+9</option>\n        <option value=\"10\">UTC+10</option>\n        <option value=\"11\">UTC+11</option>\n        <option value=\"12\">UTC+12</option>\n        <option value=\"-1\">UTC-1</option>\n        <option value=\"-2\">UTC-2</option>\n        <option value=\"-3\">UTC-3</option>\n        <option value=\"-4\">UTC-4</option>\n        <option value=\"-5\">UTC-5</option>\n        <option value=\"-6\">UTC-6</option>\n        <option value=\"-7\">UTC-7</option>\n        <option value=\"-8\">UTC-8</option>\n        <option value=\"-9\">UTC-9</option>\n        <option value=\"-10\">UTC-10</option>\n        <option value=\"-11\">UTC-11</option>\n        <option value=\"-12\">UTC-12</option>\n    </select>\n</form>\n<br>\n\n<table>\n    <tr>\n        <th>年</th>\n        <th>月</th>\n        <th>日</th>\n    </tr>\n    <tr>\n        <td><input type=\"text\" id=\"year\" size=\"5\"/></td>\n        <td><input type=\"text\" id=\"month\" size=\"5\"/></td>\n        <td><input type=\"text\" id=\"day\" size=\"5\"/></td>\n    </tr>\n    <tr>\n        <th>时</th>\n        <th>分</th>\n        <th>秒</th>\n    </tr>\n    <tr>\n        <td><input type=\"text\" id=\"hour\" size=\"5\"/></td>\n        <td><input type=\"text\" id=\"minute\" size=\"5\"/></td>\n        <td><input type=\"text\" id=\"second\" size=\"5\"/></td>\n    </tr>\n</table>\n\n<button value=\"submit\" onclick=\"time_to_JD()\">Convert to JD</button>\n\n<input id=\"JD\" size=\"20\"/>\n<br>\n\n<body onload=\"time_now()\">\n<div align=\"center\" id=\"clock\"></div>\n</body>\n\n<button value=\"submit\" onclick=\"time_now_to_JD()\">Convert current time to JD</button>\n\n<input id=\"JD_now\" size=\"20\"/>\n</div>","source":"_posts/tools/Time-Calculator.md","raw":"---\ntitle: 时间计算器\ndate: 2021-11-03 00:00:00\ncategory:\n  - 工具\ntag:\n  - Calculator\nindex_img: /img/OrionStreams.jpg\nbanner_img: /img/OrionStreams.jpg\n---\n<script src=\"../../js/time-calculator.js\"></script>\n\n<div align=\"center\">\n<form>\n    <select name=\"timezone\" id=\"timezone\">\n        <option value=\"0\">UTC</option>\n        <option value=\"1\">UTC+1</option>\n        <option value=\"2\">UTC+2</option>\n        <option value=\"3\">UTC+3</option>\n        <option value=\"4\">UTC+4</option>\n        <option value=\"5\">UTC+5</option>\n        <option value=\"6\">UTC+6</option>\n        <option value=\"7\">UTC+7</option>\n        <option value=\"8\">UTC+8</option>\n        <option value=\"9\">UTC+9</option>\n        <option value=\"10\">UTC+10</option>\n        <option value=\"11\">UTC+11</option>\n        <option value=\"12\">UTC+12</option>\n        <option value=\"-1\">UTC-1</option>\n        <option value=\"-2\">UTC-2</option>\n        <option value=\"-3\">UTC-3</option>\n        <option value=\"-4\">UTC-4</option>\n        <option value=\"-5\">UTC-5</option>\n        <option value=\"-6\">UTC-6</option>\n        <option value=\"-7\">UTC-7</option>\n        <option value=\"-8\">UTC-8</option>\n        <option value=\"-9\">UTC-9</option>\n        <option value=\"-10\">UTC-10</option>\n        <option value=\"-11\">UTC-11</option>\n        <option value=\"-12\">UTC-12</option>\n    </select>\n</form>\n<br>\n\n<table>\n    <tr>\n        <th>年</th>\n        <th>月</th>\n        <th>日</th>\n    </tr>\n    <tr>\n        <td><input type=\"text\" id=\"year\" size=\"5\"/></td>\n        <td><input type=\"text\" id=\"month\" size=\"5\"/></td>\n        <td><input type=\"text\" id=\"day\" size=\"5\"/></td>\n    </tr>\n    <tr>\n        <th>时</th>\n        <th>分</th>\n        <th>秒</th>\n    </tr>\n    <tr>\n        <td><input type=\"text\" id=\"hour\" size=\"5\"/></td>\n        <td><input type=\"text\" id=\"minute\" size=\"5\"/></td>\n        <td><input type=\"text\" id=\"second\" size=\"5\"/></td>\n    </tr>\n</table>\n\n<button value=\"submit\" onclick=\"time_to_JD()\">Convert to JD</button>\n\n<input id=\"JD\" size=\"20\"/>\n<br>\n\n<body onload=\"time_now()\">\n<div align=\"center\" id=\"clock\"></div>\n</body>\n\n<button value=\"submit\" onclick=\"time_now_to_JD()\">Convert current time to JD</button>\n\n<input id=\"JD_now\" size=\"20\"/>\n</div>","slug":"tools/Time-Calculator","published":1,"updated":"2021-11-04T16:51:05.357Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckvl6t11g0003jbn3fdej519w","content":"<script src=\"../../js/time-calculator.js\"></script>\n\n<div align=\"center\">\n<form>\n    <select name=\"timezone\" id=\"timezone\">\n        <option value=\"0\">UTC</option>\n        <option value=\"1\">UTC+1</option>\n        <option value=\"2\">UTC+2</option>\n        <option value=\"3\">UTC+3</option>\n        <option value=\"4\">UTC+4</option>\n        <option value=\"5\">UTC+5</option>\n        <option value=\"6\">UTC+6</option>\n        <option value=\"7\">UTC+7</option>\n        <option value=\"8\">UTC+8</option>\n        <option value=\"9\">UTC+9</option>\n        <option value=\"10\">UTC+10</option>\n        <option value=\"11\">UTC+11</option>\n        <option value=\"12\">UTC+12</option>\n        <option value=\"-1\">UTC-1</option>\n        <option value=\"-2\">UTC-2</option>\n        <option value=\"-3\">UTC-3</option>\n        <option value=\"-4\">UTC-4</option>\n        <option value=\"-5\">UTC-5</option>\n        <option value=\"-6\">UTC-6</option>\n        <option value=\"-7\">UTC-7</option>\n        <option value=\"-8\">UTC-8</option>\n        <option value=\"-9\">UTC-9</option>\n        <option value=\"-10\">UTC-10</option>\n        <option value=\"-11\">UTC-11</option>\n        <option value=\"-12\">UTC-12</option>\n    </select>\n</form>\n<br>\n\n<table>\n    <tr>\n        <th>年</th>\n        <th>月</th>\n        <th>日</th>\n    </tr>\n    <tr>\n        <td><input type=\"text\" id=\"year\" size=\"5\"/></td>\n        <td><input type=\"text\" id=\"month\" size=\"5\"/></td>\n        <td><input type=\"text\" id=\"day\" size=\"5\"/></td>\n    </tr>\n    <tr>\n        <th>时</th>\n        <th>分</th>\n        <th>秒</th>\n    </tr>\n    <tr>\n        <td><input type=\"text\" id=\"hour\" size=\"5\"/></td>\n        <td><input type=\"text\" id=\"minute\" size=\"5\"/></td>\n        <td><input type=\"text\" id=\"second\" size=\"5\"/></td>\n    </tr>\n</table>\n\n<button value=\"submit\" onclick=\"time_to_JD()\">Convert to JD</button>\n\n<input id=\"JD\" size=\"20\"/>\n<br>\n\n<body onload=\"time_now()\">\n<div align=\"center\" id=\"clock\"></div>\n</body>\n\n<button value=\"submit\" onclick=\"time_now_to_JD()\">Convert current time to JD</button>\n\n<input id=\"JD_now\" size=\"20\"/>\n</div>","site":{"data":{}},"excerpt":"","more":"<script src=\"../../js/time-calculator.js\"></script>\n\n<div align=\"center\">\n<form>\n    <select name=\"timezone\" id=\"timezone\">\n        <option value=\"0\">UTC</option>\n        <option value=\"1\">UTC+1</option>\n        <option value=\"2\">UTC+2</option>\n        <option value=\"3\">UTC+3</option>\n        <option value=\"4\">UTC+4</option>\n        <option value=\"5\">UTC+5</option>\n        <option value=\"6\">UTC+6</option>\n        <option value=\"7\">UTC+7</option>\n        <option value=\"8\">UTC+8</option>\n        <option value=\"9\">UTC+9</option>\n        <option value=\"10\">UTC+10</option>\n        <option value=\"11\">UTC+11</option>\n        <option value=\"12\">UTC+12</option>\n        <option value=\"-1\">UTC-1</option>\n        <option value=\"-2\">UTC-2</option>\n        <option value=\"-3\">UTC-3</option>\n        <option value=\"-4\">UTC-4</option>\n        <option value=\"-5\">UTC-5</option>\n        <option value=\"-6\">UTC-6</option>\n        <option value=\"-7\">UTC-7</option>\n        <option value=\"-8\">UTC-8</option>\n        <option value=\"-9\">UTC-9</option>\n        <option value=\"-10\">UTC-10</option>\n        <option value=\"-11\">UTC-11</option>\n        <option value=\"-12\">UTC-12</option>\n    </select>\n</form>\n<br>\n\n<table>\n    <tr>\n        <th>年</th>\n        <th>月</th>\n        <th>日</th>\n    </tr>\n    <tr>\n        <td><input type=\"text\" id=\"year\" size=\"5\"/></td>\n        <td><input type=\"text\" id=\"month\" size=\"5\"/></td>\n        <td><input type=\"text\" id=\"day\" size=\"5\"/></td>\n    </tr>\n    <tr>\n        <th>时</th>\n        <th>分</th>\n        <th>秒</th>\n    </tr>\n    <tr>\n        <td><input type=\"text\" id=\"hour\" size=\"5\"/></td>\n        <td><input type=\"text\" id=\"minute\" size=\"5\"/></td>\n        <td><input type=\"text\" id=\"second\" size=\"5\"/></td>\n    </tr>\n</table>\n\n<button value=\"submit\" onclick=\"time_to_JD()\">Convert to JD</button>\n\n<input id=\"JD\" size=\"20\"/>\n<br>\n\n<body onload=\"time_now()\">\n<div align=\"center\" id=\"clock\"></div>\n</body>\n\n<button value=\"submit\" onclick=\"time_now_to_JD()\">Convert current time to JD</button>\n\n<input id=\"JD_now\" size=\"20\"/>\n</div>"},{"title":"Manjaro KDE 安装指南","date":"2021-09-13T00:00:00.000Z","math":true,"index_img":"/img/Manjaro.jpg","banner_img":"/img/Manjaro.jpg","_content":"\n# **在 ThinkPad X13 2021 Intel/Surface Pro 6 上安装 Manjaro 21 KDE Plasma + Windows 11 双系统的指南**\n\nThinkPad 系统信息：\n\n```\nOS: Manjaro 21.2.0 Qonos\nKernel: x86_64 Linux 5.14.13-1-MANJARO\nShell: bash 5.1.8\nResolution: 2560x1600\nDE: KDE 5.87.0 / Plasma 5.23.1\nWM: KWin\nGTK Theme: Breeze [GTK2/3]\nIcon Theme: breath2\nCPU: 11th Gen Intel Core i7-1165G7 @ 8x 4.7GHz\nGPU: Mesa Intel(R) Xe Graphics (TGL GT2)\n```\n\nSurface 系统信息：\n\n```\nOS: Manjaro 21.1.1 Pahvo\nKernel: x86_64 Linux 5.14.0-0-MANJARO/x86_64 Linux 5.13.13-arch1-3-surface\nShell: bash 5.1.8\nResolution: 2736x1824\nDE: KDE 5.85.0 / Plasma 5.22.5\nWM: KWin\nGTK Theme: Breath [GTK2/3]\nIcon Theme: breath2\nCPU: Intel Core i5-8250U @ 8x 3.4GHz\nGPU: Mesa Intel(R) UHD Graphics 620 (KBL GT2)\n```\n\n**说明：Surface 专有部分自 2021.9.5 起不再更新，内核终止于 x86_64 Linux 5.14.0-0-MANJARO/x86_64 Linux 5.13.13-arch1-3-surface**\n\n## **Windows 的准备工作**\n\n### **为 Manjaro 系统分区**\n\n右键点击开始菜单，选择”磁盘管理”，分出一块空分区，建议不小于 64GB\n\n### **关闭快速启动**\n\nWindows 工具 >> 控制面板 >> 电源选项 >> 选择电源按钮的功能 >> 更改当前不可用的设置 >> 关闭快速启动 >> 保存修改\n\n### **ThinkPad: UEFI 设置**\n\n启动 ThinkPad 时按 `Enter` 打断正常开机，然后按下 `Fn+Esc` 解锁 `Fn` 按钮，再按 `F1` 进入 UEFI 设置\n\nSecurity >> Secure Boot >> Off\n\n### **Surface: UEFI 设置**\n\n关闭 Surface，然后等待大约 10 秒钟以确保其处于关闭状态\n\n长按 Surface 上的调高音量按钮，同时按下再松开电源按钮\n\n屏幕上会显示 Microsoft 或 Surface 徽标，继续按住调高音量按钮，显示 UEFI 屏幕后，松开此按钮\n\nSecurity >> Secure Boot >> Disabled（第三个选项）\n\nBoot Configuration >> Configure boot device order 中可以调整和删除启动顺序\n\n具体参考下列网址：\n\n如何使用 Surface UEFI\n\nhttps://support.microsoft.com/zh-cn/surface/%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8-surface-uefi-df2c8942-dfa0-859d-4394-95f45eb1c3f9\n\n### 删除多余的 Windows 启动项\n\n如果在电脑上装有多个 Windows，则系统只会选择其中一个在 Windows Boot Manager 中启动，若要删除多余的启动项，在 Windows 的“系统配置”（搜索框中输入 `msconfig` 或在“Windows 工具”中选择）的“引导”页面即可删除\n\n### **制作启动盘**\n\n#### **下载系统 ISO 镜像**\n\n从 Manjaro 官网上下载：\n\nhttps://manjaro.org/downloads/official/kde/ （KDE Plasma 版本）\n\nhttps://manjaro.org/get-manjaro/ （所有官方版本）\n\n或者在 Github 上下载：\n\nhttps://github.com/manjaro-plasma/download/releases （KDE Plasma 版本）\n\nhttps://github.com/manjaro/release-review/releases （所有官方版本）\n\n#### **刻录 USB 启动盘**\n\n推荐使用 [Ventoy](https://www.ventoy.net/cn/index.html)，可以在 Windows/Linux 上使用，方法是下载安装包后解压、安装到 USB 上，之后直接将 ISO 镜像拷贝到 USB 中即可选择镜像文件进行登录系统，支持多个系统镜像登录\n\nLinux 上也可以使用 [Etcher](https://www.balena.io/etcher/)，在 Linux（下载 Appimage 或从 AUR 上用包管理器下载 `balena-etcher`）和 Windows（下载 EXE 可执行文件）上均能使用（但无法刻录 Windows 系统镜像），Github 项目地址在 https://github.com/balena-io/etcher\n\nWindows 上还可以用 [Rufus](https://rufus.ie/zh/)，速度与 Etcher 相当且支持 Windows 和 Linux 系统镜像，但无法在 Linux 上使用（只提供 Windows 版 EXE 可执行文件），Github 项目地址在 https://github.com/pbatard/rufus\n\n### **ThinkPad：安装 Manjaro**\n\n设置 >> 恢复 >> 立即重新启动 >> USB HDD\n\n或按照以下步骤直接从 USB 启动:\n\n启动 ThinkPad 时按 `Enter` 打断正常开机，然后按下 `Fn+Esc` 解锁 `Fn` 按钮，再按 `F12` 选择启动位置为 USB HDD\n\n### **Surface：安装 Manjaro**\n\n设置 >> 恢复 >> 立即重新启动 >> USB Storage\n\n或按照以下步骤直接从 USB 启动:\n\n关闭 Surface\n\n将可启动 U 盘插入 Surface 上的 USB 端口\n\n长按 Surface 上的调低音量按钮，同时按下并释放电源按钮，屏幕上会显示 Microsoft 或 Surface 徽标\n\n继续按住调低音量按钮，释放按钮后，徽标下方将显示旋转圆点，进入 UEFI 界面\n\n在 UEFI 界面内从 USB 启动\n\n#### **进入 Manjaro Hello 窗口开始安装**\n\n语言选择“简体中文”\n\n时区选择“Asia -- Shanghai”\n\n键盘设置选择“Chinese -- Default”\n\n安装时选择“替代一个分区”，并点击之前空出来的空分区\n\n或者手动挂载空分区，挂载点设为 `/`，标记为 `root`，手动挂载 UEFI 分区（即第一个分区`dev/nvme0n1p1`，格式为 FAT32），不要格式化，挂载点设为 `/boot/efi`，标记为 `boot`\n\n用户名建议全部用小写字母并与登录时的用户名一致\n\n设置密码，并勾选“为管理员使用相同的密码”\n\n## **初始配置**\n\n### **电源与开机设置**\n\n系统设置 >> 电源管理 >> 节能 >> 勾选“按键事件处理” >> 合上笔记本盖时 >> 选择“关闭屏幕” >> 勾选“即使已连接外部显示器”\n\n系统设置 >> 开机与关机 >> 桌面会话 >> 登入时 >> 选择“以空会话启动”\n\n#### **与电源管理相关的常见英文名词**\n\nSleep：睡眠，Suspend：挂起，Reboot：重启，Shutdown：关机，Logout：注销\n\n### **高分辨率设置**\n\nThinkPad 的屏幕分辨率是 2560×1600，而 Surface 的屏幕分辨率是 2736×1824，需要配置高分屏优化：\n\n系统设置 >> 显示和监控 >> 显示配置 >> 分辨率 >> 全局缩放 >> 200%\n\n系统设置 >> 光标 >> 大小 >> 36\n\n然后重启电脑\n\n### **快捷键配置**\n\n#### **全局快捷键**\n\n为打开方便，可以采用 i3wm 的默认快捷键打开 Konsole：\n\n系统设置 >> 快捷键 >> 添加应用程序 >> Konsole >> Konsole 的快捷键设为 `Meta+Return`（即“Windows 徽标键 + Enter 键”）\n\n#### **Konsole/Yakuake 快捷键**\n\n设置 >> 配置键盘快捷键 >> 复制改为 `Ctrl+C` ，粘贴改为 `Ctrl+V`\n\n### **选择镜像并更改更新分支**\n\n选择镜像：\n\n```bash\nsudo pacman-mirrors -i -c China\n```\n\n更新分支 `(branch)` 可以选择 stable/testing/unstable，更改更新分支的命令为：（不要漏掉 `-a`）\n\n```bash\nsudo pacman-mirrors -aS (branch)\nsudo pacman -Syyu\n```\n\n获取更新分支的命令为：\n\n```bash\nsudo pacman-mirrors -G\n```\n\n选择镜像并更改更新分支的命令则为：\n\n```bash\nsudo pacman-mirrors -aS (branch) -ic China\n```\n\n**一般建议选择上海交大的镜像，其更新频率最高且支持全部三个更新分支，如果在北京大学访问上海交大镜像源较慢可以考虑用更快的清华大学镜像源**\n\n### 包管理器\n\nManjaro 常用的包管理器有 pacman 和 pamac，其使用教程参考以下网址：\n\nManjaro Wiki -- Pacman Overview\n\nhttps://wiki.manjaro.org/index.php/Pacman_Overview\n\nManjaro Wiki -- Pacman-mirrors\n\nhttps://wiki.manjaro.org/index.php/Pacman-mirrors\n\nArchWiki -- Pacman\n\nhttps://wiki.archlinux.org/index.php/Pacman\n\nManjaro Wiki -- Pamac\n\nhttps://wiki.manjaro.org/index.php/Pamac\n\n其中 pacman 和 pamac 是预装的，“添加/删除软件”就是 pamac 的 GUI 版本\n\n硬件管理的包管理器是 mhwd 和 mhwd-kernel，其使用教程参考以下网址：\n\nManjaro Wiki -- Manjaro Hardware Detection Overview\n\nhttps://wiki.manjaro.org/index.php/Manjaro_Hardware_Detection_Overview\n\nManjaro Wiki -- Configure Graphics Cards\n\nhttps://wiki.manjaro.org/index.php/Configure_Graphics_Cards\n\nManjaro Wiki -- Manjaro Kernels\n\nhttps://wiki.manjaro.org/index.php/Manjaro_Kernels\n\n这两个也可以在 Manjaro Settings Manager （GUI 版本）中使用\n\n### **AUR**\n\n#### **安装 base-devel**\n\nAUR 上的某些 PKGBUILD 会默认你已经安装 `base-devel` 组的所有软件包而不将它们写入构建依赖。为了避免在构建过程中出现一些奇怪的错误，建议先安装 `base-devel`：\n\n```bash\nsudo pacman -S base-devel\n```\n\n#### **启用 pamac 的 AUR 支持**\n\n添加/删除软件 >> 右上角 ··· >> 首选项 >> AUR >> 启用 AUR 支持\n\n然后就可以用 pamac 的图形界面获取 AUR 软件包，或者用命令 `pamac build` 及 `pamac install` 获取 AUR 的软件包\n\n**注意 pacman 不支持 AUR**\n\n### **Arch Linux CN 软件源**\n\n在 `/etc/pacman.conf` 文件末尾添加以下两行以启用上海交大镜像（注意一定要写第一行的 `[archlinuxcn]`）：\n\n```\n[archlinuxcn]\nServer = https://mirrors.sjtug.sjtu.edu.cn/archlinux-cn/$arch\n```\n\n之后执行下面的命令安装 archlinuxcn-keyring 包导入 GPG key\n\n```bash\nsudo pacman -Sy archlinuxcn-keyring\nsudo pacman -Syyu\n```\n\n这样就开启了 pacman 和 pamac 对 Arch Linux CN 的支持\n\n由于 Manjaro 的更新滞后于 Arch，使用 Arch Linux CN 仓库可能会出现“部分更新”的情况，导致某些软件包损坏\n\n建议切换到 testing 或 unstable 分支以尽量跟进 Arch 的更新\n\n#### **搜索软件包**\n\n在 `pamac` 上可以执行：\n\n```bash\npamac search (package_name)\n```\n\n#### **检查依赖关系**\n\n以树状图的形式展示某软件包的依赖关系：\n\n```bash\npactree (package_name)\n```\n\n#### **降级软件包**\n\n在 `/var/cache/pacman/pkg/` 中找到旧软件包，双击打开安装实现手动降级，参考以下网址：\n\nDowngrading Packages -- ArchWiki\n\nhttps://wiki.archlinux.org/title/Downgrading_packages_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)\n\n#### **清理缓存**\n\n清理全部软件安装包：\n\n```bash\npamac clean\n```\n\n删除软件包时清理设置文件：\n\n```bash\nsudo pacman -Rn (package_name)\n```\n\n清理无用的孤立软件包：\n\n```bash\nsudo pacman -Rsn $(pacman -Qdtq)\n```\n\n若显示 `error: no targets specified (use -h for help)` 则说明没有孤立软件包需要清理\n\n或者：\n\n```bash\npamac remove -o\n```\n\n若不小心终止了 `pacman` 进程，则需要先删除 `/var/lib/pacman/db.lck` 才能再次启动 `pacman`\n\n#### **从本地安装包安装软件**\n\npacman 有从本地安装包安装软件的功能，只需输入：\n\n```bash\nsudo pacman -U (package_path)/(package_name)\n```\n\n### **切换到 video-modesetting（可选）**\n\n有时候打字时桌面卡死，只有鼠标能移动，但是无法点击\n\n可能是默认的 video-linux 显卡驱动的问题，已经有此类问题的报告和建议，参考以下网址：\n\nArch Wiki -- Cinnamon\n\nhttps://wiki.archlinux.org/index.php/Cinnamon#Installation\n\nArch Wiki -- Intel Graphics\n\nhttps://wiki.archlinux.org/index.php/Intel_graphics#Installation\n\nKDE Community -- Plasma 5.9 Errata\n\nhttps://community.kde.org/Plasma/5.9_Errata#Intel_GPUs\n\n解决办法：\n\n卸载 video-linux：\n\n```bash\nsudo mhwd -r pci video-linux\n```\n\n下载 video-modesetting：\n\n```bash\nsudo mhwd -i pci video-modesetting\n```\n\n**重启后会发现许多窗口和图标变小，建议先调整全局缩放为 100%，重新启动，再调至 200%，再重启**\n\n### **Surface：Linux-Surface 内核安装（可选）**\n\n**Manjaro 官方支持的最新的内核是 x86_64 Linux 5.14.0-0-MANJARO，从 Linux 5.13-MANJARO 开始已经支持 Surface 的电池组件（旧版内核不支持，无法显示电池电量状态），但不支持触屏**\n\n在终端中输入：\n\n```bash\ncurl -s https://raw.githubusercontent.com/linux-surface/linux-surface/master/pkg/keys/surface.asc \\| sudo pacman-key --add -\n```\n\n如果出现错误或没有响应，一般是网络问题，可能要等待几分钟，建议先配置好 VPN 再装内核\n\n接着输入：\n\n```bash\nsudo pacman-key --finger 56C464BAAC421453\nsudo pacman-key --lsign-key 56C464BAAC421453\n```\n\n在 `/etc/pacman.conf` 里面添加：\n\n```\n[linux-surface]\nServer = https://pkg.surfacelinux.com/arch/\n```\n\n然后更新软件库并下载：\n\n```bash\nsudo pacman -Syyu\nsudo pacman -S linux-surface linux-surface-headers iptsd-git\n```\n\n启动触屏：\n\n```bash\nsudo systemctl enable iptsd\n```\n\n启动相机参考以下网址：（相机功能仍在开发中，可能出现配置失败的情况）\n\nLinux-Surface -- Camera Support\n\nhttps://github.com/linux-surface/linux-surface/wiki/Camera-Support\n\nKDE 上原生的相机应用是 Kamoso，也可以使用 GNOME 上的相机应用 Cheese\n\n**Firefox 启用触屏需要在 `/etc/environment` 中写入 `MOZ_USE_XINPUT2=1`，然后重新启动，并在 about:config 中设置 `apz.allow_zooming` 和 `apz.allow_zooming_out` 为 `true`；Visual Studio Code 启用触屏需要更改 `/usr/share/applications/visual-studio-code.desktop`，在 `Exec` 一行中加入命令 `--touch-events`，这一般对以 Electron 为基础的软件有效**\n\n### **vim 安装与配置**\n\n建议先安装 vim，方便之后编辑各种文件：\n\n```bash\nsudo pacman -S vim\n```\n\nvim 的配置文件主要有 `/usr/share/vim/vimfiles/archlinux.vim`，`/etc/vimrc` 和 `/home/(user_name)/.vimrc`，建议直接修改 `/etc/vimrc`，这样不会覆盖 `/usr/share/vim/vimfiles/archlinux.vim` 上定义的默认配置（语法高亮等）\n\n### **GNU nano 配置**\n\nnano 的配置文件在 `/etc/nanorc`，可以通过取消注释设置选项配置文件，如：\n\n取消注释 `set linenumbers` 可以显示行号\n\n取消注释 `set tabsize 8` 可以更改 Tab 键的长度，例如 `set tabsize 4`\n\n取消注释 `set tabstospaces` 可以将 Tab 转换为空格\n\n取消注释 `set matchbrackets \"(<[{)>]}\"` 可以匹配括号\n\n取消注释 `include \"/usr/share/nano/*.nanorc\"` 一行和所有的颜色设置可以启用代码高亮\n\n取消注释所有的 `Key bindings` 选项可以启用更常用的快捷键设定\n\n**用 nano 编辑后保存的步骤是 `Ctrl+W` （Write Out） >> `Enter` >> `Ctrl+Q` （Exit），如果用默认的快捷键设置，则为 `Ctrl+O` （Write Out） >> `Enter` >> `Ctrl+X` （Exit）**\n\n### **更改 visudo 默认编辑器为 vim**\n\nManjaro 中 visudo 的默认编辑器是 vi，若要改为 vim，则首先在终端中输入：\n\n```bash\nsudo visudo\n```\n\n在开头的一个空行键入：\n\n```\nDefaults editor=/usr/bin/vim\n```\n\n按 `Esc` 进入命令模式，再按 `:x` 保存，按 `Enter` 退出\n\n如果想临时使用 vim 作为编辑器，则输入：\n\n```bash\nsudo EDITOR=vim visudo\n```\n\n### **sudo 免密码**\n\n在最后一行（空行）按 `i` 进入输入模式，加上这一行：\n\n```\nDefaults:(user_name) !authenticate\n```\n\n进入命令模式，保存退出即可\n\n**注：如果想保留输入密码的步骤但是想在输入密码时显示星号，则加上一行 `Defaults env_reset,pwfeedback` 即可**\n\n### **命令行界面输出语言为英语**\n\n在 `~/.bashrc` 的最后添加一行：\n\n```\nexport LANG=en_US.UTF-8\n```\n\n如果使用 zsh，则去掉 `~/.zshrc` 中这一行的注释即可\n\n### **时间设置**\n\n#### **双系统时间不同步**\n\n系统设置 >> 时间和日期 >> 自动设置时间和日期\n\n在 Manjaro 上设置硬件时间为 UTC：\n\n```bash\nsudo timedatectl set-local-rtc 0\n```\n\n并在 Windows 上设置硬件时间为 UTC，与 Manjaro 同步：\n\n```powershell\nreg add \"HKEY_LOCAL_MACHINE\\System\\CurrentControlSet\\Control\\TimeZoneInformation\" /v RealTimeIsUniversal /d 1 /t REG_QWORD /f\n```\n\n这一步需要在 Powershell（管理员）中执行\n\n#### **Manjaro 数字时钟设置 24 小时制**\n\n右键点击“数字时钟” >> 配置数字时钟 >> 时间显示 >> 24 小时制\n\n#### **添加 TUNA 网络授时服务**\n\n参考以下网址：\n\nTUNA NTP (网络授时) 服务使用说明\n\nhttps://tuna.moe/help/ntp/\n\n### **关闭启动时的系统信息**\n\n参考以下网址：\n\nSilent Boot -- ArchWiki\n\nhttps://wiki.archlinux.org/title/Silent_boot\n\n主要是 [Kernel parameters](https://wiki.archlinux.org/title/Silent_boot#Kernel_parameters) 和 [fsck](https://wiki.archlinux.org/title/Silent_boot#fsck) 两段\n\n编辑 Kernel parameters：\n\n```bash\nsudo vim /etc/default/grub\n```\n\n将 `GRUB_CMDLINE_LINUX_DEFAULT` 的值改为 `\"quiet loglevel=3 udev.log_priority=3\"`\n\n编辑 fsck:\n\n```bash\nsudo vim /etc/mkinitcpio.conf\n```\n\n在 `HOOKS` 一行中将 `udev` 改为 `systemd`，保存后执行：\n\n```bash\nsudo mkinitcpio -P\n```\n\n再编辑 `systemd-fsck-root.service` 和 `systemd-fsck@.service`：\n\n```bash\nsudo systemctl edit --full systemd-fsck-root.service\nsudo systemctl edit --full systemd-fsck@.service\n```\n\n分别在 `Service` 一段中编辑 `StandardOutput` 和 `StandardError` 如下：\n\n```\nStandardOutput=null\nStandardError=journal+console\n```\n\n最后执行\n\n```bash\nsudo update-grub\n```\n\n### **关闭重启时的 watchdog 提示**\n\n创建文件 `/etc/modprobe.d/watchdog.conf`，并写入：\n\n```\nblacklist iTCO_wdtblacklist iTCO_vendor_support\n```\n\n这样可以屏蔽掉不需要的驱动，保存后执行：\n\n```bash\nsudo update-grub\n```\n\n再重启即可\n\n### **hosts 文件设置（可选）**\n\n参考以下网址：\n\n修改 hosts 解决 GitHub 访问失败\n\nhttps://zhuanlan.zhihu.com/p/107334179\n\n需要修改的文件是 `/etc/hosts`，Windows 下对应的文件位置为： `C:\\Windows\\System32\\drivers\\etc\\hosts` （注意这里是反斜杠）\n\n### **动态 Swap 文件设置**\n\n**使用 swap 分区可能会缩短 SSD 的寿命，如果需要 swap 的话建议用 swap 文件，详见 [Swap（简体中文）- Arch Wiki](<https://wiki.archlinux.org/index.php/Swap_(简体中文)#交换文件>)**\n\n先下载 `systemd-swap` 软件包：\n\n```bash\nsudo pacman -S systemd-swap\n```\n\n编辑 `/etc/systemd/swap.conf`:\n\n```bash\nsudo vim /etc/systemd/swap.conf\n```\n\n去掉 `swapfc_enabled` 前的注释并设置为 `swapfc_enabled=1` ，保存并关闭\n\n在终端输入\n\n```bash\nsudo systemctl enable --now systemd-swap\n```\n\n以启动 `systemd-swap` 服务\n\n### **Linux 挂载 Windows 磁盘**\n\n**首先要确保设备加密和快速启动已经关闭**\n\n参考以下网址：\n\nArchwiki -- fstab\n\nhttps://wiki.archlinux.org/title/Fstab_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)\n\n#### **使用 UUID**\n\n官方推荐的方法是使用 UUID，以分别挂载 C 盘和 D 盘到 `/home/(user_name)/C` 和 `/home/(user_name)/D` 为例，在终端中输入：\n\n```bash\nlsblk -f\n```\n\n在输出结果中可以发现 Windows 的硬盘分区：\n\n```\nNAME       FSTYPE       LABEL   UUID\n├─(name_C) ntfs         C       (UUID_C)\n├─(name_D) ntfs         D       (UUID_D)\n```\n\n接着就来修改系统文件：\n\n```bash\nsudo vim /etc/fstab\n```\n\n在最后加入这两行：\n\n```\nUUID=(UUID_C)                     /home/(user_name)/C    ntfs default 0 0\nUUID=(UUID_D)                     /home/(user_name)/D    ntfs default 0 0\n```\n\n重启电脑后，即可自动挂载\n\n**如果需要格式化 C 盘或 D 盘，先从 `/etc/fstab` 中删去这两行，再操作，之后磁盘的 `UUID` 会被更改，再编辑 `/etc/fstab` ，重启挂载即可**\n\n#### **使用图形化界面**\n\n在系统应用“KDE 分区管理器”中卸载 C 盘、D 盘，右键选择编辑挂载点，编辑为 `/home/(user_name)/C` 和 `/home/(user_name)/D`，执行即可\n\n这相当于直接编辑 `/etc/fstab`，加入：\n\n```\n/dev/(name_C)                     /home/(user_name)/C    ntfs default 0 0\n/dev/(name_D)                     /home/(user_name)/D    ntfs default 0 0\n```\n\n好处是格式化磁盘后内核名称不变，依然可以挂载\n\n#### **如果 Windows 磁盘突然变成只读**\n\n**首先检查 Windows 中是否关闭了快速启动**\n\n关闭快速启动（Windows 工具 –> 控制面板 >> 电源选项 >> 选择电源按钮的功能 >> 更改当前不可用的设置 >> 关闭快速启动 >> 保存修改）并重启电脑\n\n一般来讲是 Windows 开启了快速启动，或者进行了优化磁盘等操作导致的，若关闭快速启动不能解决问题，使用下面的方法：\n\n检查占用进程：\n\n```bash\nsudo fuser -m -u /dev/(partition_name)\n```\n\n可以看到数字，就是占用目录的进程 PID，终止进程：\n\n```bash\nsudo kill (PID_number)\n```\n\n卸载磁盘分区：\n\n```bash\nsudo umount /dev/(partition_name)\n```\n\n执行硬盘 NTFS 分区修复：\n\n```bash\nsudo ntfsfix /dev/(partition_name)\n```\n\n再重新挂载即可：\n\n```bash\nsudo mount /dev/(partition_name) (mount_path)/(mount_folder)\n```\n\n如果在 Dolphin 中已经成功卸载分区，则直接执行：\n\n```bash\nsudo ntfsfix /dev/(partition_name) && sudo mount /dev/(partition_name)(mount_path)/(mount_folder)\n```\n\n### **系统分区改变导致时进入 GRUB Rescue 模式**\n\n此时会在开机时显示如下内容而无法进入选择系统的界面：\n\n```\nerror: no such partition.\nEntering rescue mode...\ngrub rescue>\n```\n\n此时执行 `ls`，显示如下：\n\n```\n((hd_number)) ((hd_number),(gpt_number))\n```\n\n其中硬盘编号 `(hd_number)` 从小到大排列（最小值为 0），分区编号 `(gpt_number)` 从大到小排列（最小值为 1）\n\n找到安装 Manjaro 的分区`((hd_number),(gpt_number))`，此时执行 `ls((hd_number),(gpt_number))`应该能看到 Manjaro 根目录下的所有文件和文件夹\n\n手动修改启动分区所在的位置：\n\n```bash\nset prefix=((hd_number),(gpt_number))/boot/grub\n```\n\n执行：\n\n```bash\ninsmod normal\nnormal\n```\n\n即可进入 GRUB 界面，从这里登录 Manjaro 系统，登录后执行：\n\n```\nsudo update-grub\n```\n\n以修复启动项\n\n### **调整文件夹名称为英文**\n\n修改 `~/.config/user-dirs.dirs`，改为：\n\n```bash\nXDG_DESKTOP_DIR=\"$HOME/Desktop\"\nXDG_DOCUMENTS_DIR=\"$HOME/Documents\"\nXDG_DOWNLOAD_DIR=\"$HOME/Downloads\"\nXDG_MUSIC_DIR=\"$HOME/Music\"\nXDG_PICTURES_DIR=\"$HOME/Pictures\"\nXDG_PUBLICSHARE_DIR=\"$HOME/Public\"\nXDG_TEMPLATES_DIR=\"$HOME/Templates\"\nXDG_VIDEOS_DIR=\"$HOME/Videos\"\n```\n\n并在 Dolphin 中按照上面的说明更改文件名\n\n### **Dolphin 在更新后删除文件/文件夹报错**\n\n如果出现以下错误：\n\n```\n无法创建输入输出后端。klauncher 回应：装入“/usr/lib/qt/plugins/kf5/kio/trash.so”时出错\n```\n\n说明 Qt 还在内存中保留着旧版 Dolphin，此时可以重启/重新登录，或执行：\n\n```bash\ndbus-launch dolphin\n```\n\n### **SONY WH-1000XM3 耳机的蓝牙连接**\n\n长按耳机电源键约 7 秒即可进入配对模式，可以在蓝牙中配对\n\n### **Logitech M590 鼠标的蓝牙连接**\n\n同一台电脑的 Windows 系统和 Manjaro 系统在鼠标上会被识别为两个设备\n\n如果 Windows 系统被识别为设备 1，需要按滚轮后的圆形按钮切换至设备 2\n\n长按圆形按钮直到灯 2 快速闪烁进入配对模式，可以在蓝牙中配对\n\n#### **如果鼠标配对后屏幕光标无法移动**\n\n一般可以直接删除设备重新配对，如果失败则按照下面步骤操作：\n\n首先要安装 `bluez-utils`：\n\n```bash\nsudo pacman -S bluez-utils\n```\n\n在终端中输入：\n\n```bash\nbluetoothctl\n```\n\n然后参考以下网站：\n\nArch Wiki -- 关于 Logitech BLE 鼠标的问题\n\nhttps://wiki.archlinux.org/index.php/Bluetooth_mouse#Problems_with_the_Logitech_BLE_mouse_(M557,_M590,_anywhere_mouse_2,_etc)\n\n### **解决用 root 登录没有声音的问题**\n\n在 `/root/.config/autostart/` 下创建一个 `pulseaudio.desktop` 文件：\n\n```bash\nsudo vim /root/.config/autostart/pulseaudio.desktop\n```\n\n写入：\n\n```bash\n[Desktop Entry]\nEncoding=UTF-8\nType=Application\nName=pulseaudio\nExec=pulseaudio --start --log-target=syslog\nStartupNotify=false\nTerminal=true\nHidden=false\n```\n\n保存退出即可\n\n### **切换图形化界面和命令行界面**\n\n登录时默认进入的是图形化界面，有时候开机后黑屏是图形化界面显示不出来所致，此时可以按快捷键 `Ctrl+Alt+Fn+(F2~F6)`进入`tty2 ~ tty6` 的任何一个命令行界面\n\n注意此时需要手动输入用户名和密码\n\n在命令行界面解决问题后，按快捷键 `Ctrl+Alt+Fn+F1` 可以转换回图形化界面\n\n### **网络设置**\n\n#### **ping 命令**\n\nIP 地址和连接情况可以通过对域名 `ping` 得到，例如：\n\n```bash\nping -c (count_number) (website_destination)\n```\n\n表示对网站域名 `(website_destination)` 发送 `(count_number)` 次 `ping` 连通请求\n\n#### **命令行连接 PKU Wi-Fi**\n\n方法一：命令行输入 `nmtui` 并按照终端上的图形界面一步一步操作\n\n方法二：使用 `nmcli`，输入：\n\n```bash\nnmcli device wifi connect PKU\n```\n\n通用的操作是：\n\n```bash\nnmcli device wifi connect (SSID) password (student_passowrd)\n```\n\n注意这里的 SSID 是 Wi-Fi 的名称（如 PKU 或 TP-LINK_XXX），不是 IP 地址或 MAC 地址\n\n#### **命令行连接 PKU VPN**\n\n此处需要一直打开终端，故推荐使用 Yakuake\n\n按 `Fn+F12` 打开 Yakuake，输入：\n\n```bash\nsudo openconnect --protocol=nc --user (student_ID) https://vpn.pku.edu.cn\n```\n\n输入密码即可连接\n\n之后可以按 `Fn+F12` 让它收起，不要关闭窗口（关闭窗口则 VPN 断开）\n\n#### **图形化界面连接 PKU Secure**\n\nWi-Fi 安全 >> 安全 >> 企业 WPA/WPA2\n\nWi-Fi 安全 >> 认证 >> 受保护的 EAP（PEAP）\n\nPEAP 版本 >> 自动\n\n内部认证 >> MSCHAPv2\n\n输入用户名、密码即可连接\n\n#### **命令行连接 PKU Secure**\n\n首先进入 `nmcli` 配置：\n\n```bash\nnmcli connection edit PKU\\ Secure\n```\n\n在 `nmcli` 界面内输入：\n\n```\nset wifi-sec.key-mgmt wpa-eap\nset ipv4.method auto\nset 802-1x.eap peap\nset 802-1x.phase2-auth mschapv2\nset 802-1x.identity (student_ID)\nset 802-1x.password (student_password)\nsave\nactivate\n```\n\n### **调整 CPU 频率（可选）**\n\n```bash\nsudo vim /etc/tlp.conf\n```\n\n若更改 CPU 频率，修改以下位置：\n\n```\nCPU_MIN_PERF_ON_AC=0\nCPU_MAX_PERF_ON_AC=100\nCPU_MIN_PERF_ON_BAT=0\nCPU_MAX_PERF_ON_BAT=30\n```\n\n若更改 CPU 睿频设置，修改以下位置：\n\n```\nCPU_BOOST_ON_AC=1\nCPU_BOOST_ON_BAT=0\n```\n\n**不需要高性能的时候可以关闭睿频，这样 CPU 的频率就会限制在 1.9 GHz 以下，大幅增加续航、减少发热**\n\n保存、关闭，在终端中输入：\n\n```bash\nsudo tlp start\n```\n\n#### **显示 CPU 频率（可选）**\n\n安装 KDE 小部件：[Intel P-state and CPU-Freq Manager](https://github.com/jsalatas/plasma-pstate)\n\n右键点击顶栏，选择“添加部件”，找到 Intel P-state and CPU-Freq Manager 并添加在顶栏即可\n\n### **禁用 baloo（可选）**\n\n`baloo` 是 KDE 的文件索引服务，能加快文件搜索的速度，但可能会时不时产生大量硬盘读写而导致图形界面卡顿。可以用下面的命令禁用之：\n\n```bash\nbalooctl disable\n```\n\n### **为 pacman 启用多线程下载（可选）**\n\n执行下面的命令下载 axel\n\n```bash\n sudo pacman -S axel\n```\n\n编辑 `/etc/pacman.conf` 文件（在第 21 行）:\n\n```\nXferCommand = /usr/bin/axel -n 10 -o %o %u\n```\n\n编辑 `/etc/makepkg.conf` 文件（在第 11-16 行）:\n\n```\nDLAGENTS=('file::/usr/bin/curl -gqC - -o %o %u'\n'ftp::/usr/bin/axel -n 10 -o %o %u'\n'http::/usr/bin/axel -n 10 -o %o %u'\n'https::/usr/bin/axel -n 10 -o %o %u'\n'rsync::/usr/bin/rsync --no-motd -z %u %o'\n'scp::/usr/bin/scp -C %u %o')\n```\n\n**注意某些软件包如 `rider` 和 `qqmusic-bin` 等下载源不支持 axel，启用多线程下载后可能会导致构建失败**\n\n### **重新开启 Secure Boot（未测试）**\n\n如果想在开启 Secure Boot 的情况下登录进 Manjaro Linux，可以使用经过微软签名的 PreLoader 或者 shim，然后在 UEFI 设置中将 Secure Boot 级别设置为 Microsoft & 3rd Party CA\n\n具体教程参考以下网址：\n\nSecure Boot -- ArchWiki\n\nhttps://wiki.archlinux.org/index.php/Unified_Extensible_Firmware_Interface/Secure_Boot#Microsoft_Windows\n\n### **Git 配置用户名、邮箱**\n\n配置用户名、邮箱：\n\n```bash\ngit config --global user.name \"(user_name)\"\ngit config --global user.email \"(user_email)\"\n```\n\nGit 使用教程参考以下网址：\n\n菜鸟教程 -- Git 教程\n\nhttps://www.runoob.com/git/git-tutorial.html\n\n### **使用 SSH 连接到 Github**\n\n推荐使用 SSH 连接到 Github，其安全性更高，访问速度较快且更加稳定\n\n配置参考以下网址：\n\nGithub Docs -- 使用 SSH 连接到 Github\n\nhttps://docs.github.com/cn/github/authenticating-to-github/connecting-to-github-with-ssh\n\n在 Linux 上主要是以下内容：\n\n#### **生成新 SSH 密钥并添加到 ssh-agent**\n\n```bash\nssh-keygen -t ed25519 -C \"(user_email)\"\neval \"$(ssh-agent -s)\"\nssh-add ~/.ssh/id_ed25519\n```\n\n第一步会提示输入安全密码，可以按 `Enter` 跳过，不影响后续操作和使用\n\n#### **新增 SSH 密钥到 GitHub 帐户**\n\n通过 `cat ~/.ssh/id_ed25519.pub` 查看公钥并复制到 Github 账户下的“设置 >> SSH and GPG keys”中\n\n#### **测试 SSH 连接**\n\n在终端中输入：\n\n```\nssh -T git@github.com\n```\n\n这一步要输入 `yes` 确定\n\n**注意 Linux 上和 Windows 上用的是不同的密钥**\n\n## **一些有用的命令总结**\n\n### **获取设备信息**\n\n#### **简要信息**\n\n在终端中输入：\n\n```bash\nscreenfetch\n```\n\n或者：\n\n```bash\nsudo inxi -b\n```\n\n#### **详细信息**\n\n在终端中输入：\n\n```bash\nsudo inxi -Fa\n```\n\n#### **命令行进程查看器**\n\n在终端中输入：\n\n```bash\nhtop\n```\n\n#### **命令行音量调节器**\n\n在终端中输入：\n\n```bash\nalsamixer\n```\n\n#### **内存大小**\n\n在终端中输入：\n\n```bash\nfree\n```\n\n#### **上一次关机的系统日志**\n\n```bash\njournalctl -rb -1\n```\n\n### **查看并转换编码**\n\n查看编码的命令为：\n\n```bash\nfile -i (file_name)\n```\n\n其中 `charset` 一栏的输出即为文件编码\n\n转换编码可以使用系统预装的 `iconv`，方法为：\n\n```bash\niconv -f (from_encoding) -t (to_encoding) (from_file_name) -o (to_file_name)\n```\n\n该方法适合对文本文件转换编码，对 ZIP 压缩包和 PDF 文件等二进制文件则无法使用\n\n`iconv` 支持的编码格式可以用 `iconv -l` 查看\n\n### **转换图片格式**\n\n批量将图片从 PNG 格式转换为 JPG 格式：\n\n```bash\nls -1 *.png | xargs -n 1 bash -c 'convert \"$0\" \"${0%.png}.jpg\"'\n```\n\n### **批量更改文件名**\n\n批量将文件名中的空格改成下划线：\n\n```bash\nfor file in *; do mv -n \"$file\" `echo $file | tr ' ' '_'`; done\n```\n\n**Linux 的内存策略可以参考这个网站：https://www.linuxatemyram.com/**\n\n### **命令行解压 ZIP 压缩包**\n\n建议使用系统预装的 `unar`，因为它可以自动检测文件编码（系统右键菜单默认的 Ark 不具备这个功能，可能导致乱码）：\n\n```bash\nunar (file_name).zip\n```\n\n### **设置命令别名**\n\n在 `~/.bashrc` 中添加一句 `alias (new_command)=(old-command)`，这样直接输入 `new_command` 即等效于输入 `old_command`\n\n## **美化**\n\n### **自定义壁纸**\n\n桌面壁纸可以在 [pling.com](https://www.pling.com/) 下载，专门为 Manjaro 定制的壁纸可以在这里找到：\n\nWallpapers Manjaro -- pling.com\n\nhttps://www.pling.com/browse/cat/309/order/latest/\n\n默认的壁纸保存位置为 `/usr/share/wallpapers/`\n\n还可以使用包管理器（pacman/sudo pacman/pamac）下载壁纸，用“添加/删除软件”或 `pamac search wallpaper` 查找\n\n右键点击桌面得到桌面菜单，点击“配置桌面和壁纸”即可选择想要的壁纸，位置建议选择“缩放并裁剪”\n\n### **添加用户图标**\n\n系统设置 >> 用户账户 >> 图像\n\n### **开机登录美化**\n\n开机与关机 >> 登录屏幕（SDDM） >> Breeze 或者 Fluent\n\n外观 >> 欢迎屏幕 >> Snowy Night Miku、Manjaro Linux Reflection Splashscreen、ManjaroLogo Black、Plasma 5 Manjaro Splashscreen White Blur\n\n**现在新设计的登录屏幕（SDDM）和欢迎屏幕已经非常美观且改进了翻译问题，最方便的方法就是登录屏幕（SDDM）选择 Breath 2，欢迎屏幕选择 Breath2 2021**\n\n#### **SDDM 时间显示调整为 24 小时制**\n\n更改 `/usr/share/sddm/themes/(theme_name)/components/Clock.qml` 或 `/usr/share/sddm/themes/(theme_name)/Clock.qml` 中的 `Qt.formatTime` 一行：\n\n```\ntext: Qt.formatTime(timeSource.data[\"Local\"][\"DateTime\"])\n```\n\n将其改为：\n\n```\ntext: Qt.formatTime(timeSource.data[\"Local\"][\"DateTime\"], \"hh:mm:ss\")\n```\n\n保存重启即可\n\n### **主题 Mac 风格美化（可选）**\n\n参考以下网址：\n\nKDE 桌面的 Mac 化\n\nhttps://www.cnblogs.com/luoshuitianyi/p/10587788.html\n\n其中 Plasma 主题、GTK 主题和图标主题分别选择：\nPlasma Theme: Mojave-CT\nGTK Theme: Mojave-light-alt [GTK2/3]\nIcon Theme: La Capitaine\n\nKDE 桌面美化指南\n\nhttps://acherstyx.github.io/2020/06/30/KDE%E6%A1%8C%E9%9D%A2%E7%BE%8E%E5%8C%96%E6%8C%87%E5%8D%97/\n\nLatte-Dock 的推荐设置：\n\n行为：位置 >> 底部，可见性 >> 自动隐藏，延迟 >> 显示 >> none\n\n外观：绝对大小 >> 96，背景大小 >> 10%\n\n**不想使用 Mac 风格主题但又想使用浅色主题时，建议使用 Manjaro 新官方主题 Breath2 2021（也有深浅搭配和深色主题可选）或 KDE 官方主题 Breeze，并将终端（Konsole 和 Yakuake）主题改为“白底黑字”，背景透明度选择 20%**\n\n#### **配置桌面小部件**\n\n右键点击桌面 >> 添加部件 >> 获取新部件 >> 下载新 Plasma 部件\n\n在这里可以下载桌面小部件，并在“添加部件”处添加，例如 Simple System Monitor\n\n#### **zsh 与 Oh-My-Zsh 配置（可选）**\n\nKonsole >> 设置 >> 编辑当前方案 >> 常规 >> 命令 >> `usr/bin/zsh`\n\n安装 Oh-My-Zsh，执行：（不推荐用包管理器安装）\n\n```bash\nbash -c \"$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)\"\n```\n\n安装插件，执行：\n\n```bash\ngit clone https://github.com/zsh-users/zsh-syntax-highlighting.git $ZSH_CUSTOM/plugins/zsh-syntax-highlightinggit clone https://github.com/zsh-users/zsh-autosuggestions $ZSH_CUSTOM/plugins/zsh-autosuggestions\n```\n\n编辑设置文件：\n\n```bash\nvim ~/.zshrc\n```\n\n选择 Oh-My-Zsh 主题：\n\n```\nZSH_THEME=\"geoffgarside\"\n```\n\n选择 Oh-My-Zsh 插件：\n\n```\nplugins=(git zsh-autosuggestions zsh-syntax-highlighting)\n```\n\n更新 Oh-My-Zsh，执行：\n\n```\nomz update\n```\n\n卸载 Oh-My-Zsh，执行:\n\n```\nuninstall_oh_my_zsh\n```\n\n**如果遇到开关机的时候报错：`\\[FAILED] failed to start pkgfile database update`，卸载 `manjaro-zsh-config`，这会卸载 `zsh` 及其所有依赖，然后重新安装 `zsh`**\n\n### **GRUB 美化**\n\n选择主题 grub2-themes ，下载地址如下：\n\nhttps://github.com/vinceliuice/grub2-themes\n\n以 Vimix grub theme （2K，黑白图标） 为例，解压后在文件夹内执行：\n\n```bash\nsudo ./install.sh -b -t vimix -i white -s 2k\n```\n\n删除多余启动条目，需要修改`/boot/grub/grub.cfg`\n\n删除整一段 `submenu 'Manjaro Linux 的高级选项'`，删除整一段 `UEFI Firmware Settings`，并将 `Windows Boot Manager (on /dev/nvme0n1p1)` 改为 `Windows`\n\n恢复默认的`/boot/grub/grub.cfg`需要输入：\n\n```bash\necho GRUB_DISABLE_OS_PROBER=false | sudo tee -a /etc/default/grub && sudo update-grub\n```\n\n### **pacman 添加吃豆人彩蛋**\n\n编辑 `/etc/pacman.conf`\n\n```bash\nsudo vim /etc/pacman.conf\n```\n\n去掉 `Color` 前面的注释，并在下一行加入：\n\n```\nILoveCandy\n```\n\n即可添加吃豆人彩蛋\n\n### **安装 KDE 的 Wayland 支持（不推荐）**\n\n与 Xorg 相比，Wayland 对触屏的支持更佳，但某些应用在 Wayland 上会有兼容性问题，目前 KDE 对 Wayland 的支持处于能用但还不太完善的状态\n\n```bash\nsudo pacman -S plasma-wayland-session\n```\n\n安装后即可在登录界面选择 Wayland 会话\n\n## **下载软件**\n\n**能用包管理器的尽量用包管理器安装！**\n\n### **PGP 密钥无法导入**\n\n如果安装软件时需要导入 PGP 密钥而发生 `gpg: 从公钥服务器接收失败：一般错误` 的问题，将 PGP 密钥复制下来并运行：\n\n```bash\ngpg --keyserver p80.pool.sks-keyservers.net --recv-keys (pgp_key)\n```\n\n再重新安装软件即可\n\n### **安装软件后在开始菜单中找不到图标**\n\n执行命令：\n\n```\nsudo update-desktop-database\n```\n\n### **语言包**\n\n系统设置 >> 语言包 >> 右上角点击“已安装的软件包”安装语言包\n\n### **Kate 插件下载**\n\n下载 Kate 插件：\n\n```bash\nsudo pacman -S aspell hspell libvoikko\n```\n\n### **字体安装**\n\nManjaro KDE 支持直接在 Dolphin 的右键菜单中安装 TTF 和 OTF 字体，但不支持 TTC 字体集，TTC 字体集可以在系统字体安装的默认文件夹 `/usr/share/fonts` 中用命令 `fc-cache -fv` 安装\n\n**注意不管是 Windows 还是 Manjaro Linux 都要将字体“为所有用户安装”，尤其是 Windows 11 右键直接安装是安装到个人用户目录 `C:\\Users\\user_name\\AppData\\Local\\Microsoft\\Windows\\Fonts` 而非系统目录 `C:\\Windows\\Fonts`**\n\n### **安装微软字体**\n\n安装方法如下：\n\n```bash\nsudo mkdir /usr/share/fonts/winfonts\nsudo cp (win-font-path)/* /usr/share/fonts/winfonts/\ncd /usr/share/fonts/winfonts/\nfc-cache -fv\n```\n\n这样就可以安装微软雅黑、宋体、黑体等字体了\n\n**注意需要排除掉 MS Gothic、Yu Gothic 和 Malgun Gothic 字体，因它们只有部分日/韩文汉字字形（与中文汉字字形一样的会被排除，最后导致部分中文汉字显示为日/韩文字形）**\n\n### **安装 Google Noto 字体**\n\n命令行安装：\n\n```bash\nsudo pacman -S noto-fonts noto-fonts-cjk\n```\n\n所有语言字体的下载地址如下：\n\nGoogle Noto Fonts\n\nhttps://www.google.com/get/noto/\n\n中文（CJK）字体的下载地址如下：\n\nhttps://www.google.com/get/noto/help/cjk/\n\n### **更改程序和终端默认中文字体**\n\n安装的 Noto Sans CJK 字体可能在某些情况下（框架未定义地区）汉字字形与标准形态不符，例如门、关、复等字字形与规范中文不符\n\n这是因为每个程序中可以设置不同的默认字体，而这些字体的属性由 fontconfig 控制，其使用顺序是据地区代码以 A-Z 字母表顺序成默认排序，由于 `ja` 在 `zh` 之前，故优先显示日文字形\n\n解决方法是手动修改字体设置文件：\n\n```bash\nsudo vim /etc/fonts/conf.d/64-language-selector-prefer.conf\n```\n\n并加入以下内容：\n\n```xml\n<?xml version=\"1.0\"?>\n<!DOCTYPE fontconfig SYSTEM \"fonts.dtd\">\n<fontconfig>\n    <alias>\n        <family>sans-serif</family>\n        <prefer>\n            <family>Noto Sans CJK SC</family>\n            <family>Noto Sans CJK TC</family>\n            <family>Noto Sans CJK HK</family>\n            <family>Noto Sans CJK JP</family>\n            <family>Noto Sans CJK KR</family>\n        </prefer>\n    </alias>\n    <alias>\n        <family>serif</family>\n        <prefer>\n            <family>Noto Serif CJK SC</family>\n            <family>Noto Serif CJK TC</family>\n            <family>Noto Serif CJK HK</family>\n            <family>Noto Serif CJK JP</family>\n            <family>Noto Serif CJK KR</family>\n        </prefer>\n    </alias>\n    <alias>\n        <family>monospace</family>\n        <prefer>\n            <family>Noto Sans Mono CJK SC</family>\n            <family>Noto Sans Mono CJK TC</family>\n            <family>Noto Sans Mono CJK HK</family>\n            <family>Noto Sans Mono CJK JP</family>\n            <family>Noto Sans Mono CJK KR</family>\n        </prefer>\n    </alias>\n</fontconfig>\n```\n\n保存退出即可\n\n**另一种处理方法是只安装简体中文字体，比如 Noto Sans SC（注意没有 CJK）**\n\n### **安装中文输入法**\n\n推荐使用 Fcitx5:\n\n```bash\nsudo pacman -S fcitx5 fcitx5-chinese-addons manjaro-asian-input-support-fcitx5 fcitx5-gtk fcitx5-qt fcitx5-configtool\n```\n\n如果无法启动输入法，在系统设置 >> 区域设置 >> 输入法 >> 添加输入法中手动添加“拼音”\n\n对应的 git 版本为：（需要使用 Arch Linux CN 源）\n\n```bash\nsudo pacman -S fcitx5-git fcitx5-chinese-addons-git manjaro-asian-input-support-fcitx5 fcitx5-gtk-git fcitx5-qt5-git fcitx5-configtool-git\n```\n\n可以添加词库：\n\n```bash\nsudo pacman -S fcitx5-pinyin-moegirl fcitx5-pinyin-zhwiki\n```\n\n一个稳定的替代版本是 Fcitx 4.2.9.8-1：\n\n```bash\nsudo pacman -S fcitx-im fcitx-configtool fcitx-cloudpinyin manjaro-asian-input-support-fcitx\n```\n\n可以配合 googlepinyin 或 sunpinyin 使用，即执行：\n\n```bash\nsudo pacman -S fcitx-googlepinyin\n```\n\n或者：\n\n```bash\nsudo pacman -S fcitx-sunpinyin\n```\n\n也可以用 `sudo pacman -S sunpinyin` 安装 Sunpinyin\n\n**安装输入法之后需要重启电脑才能生效**\n\n### **安装其它软件**\n\n以下命令中的 `pamac install` 也可以在“添加/删除软件”（即 pamac）中搜索安装，如果不是 AUR 仓库中的软件，也可以用 `sudo pacman -S` 安装\n\n```bash\npamac install geogebra stellarium typora v2ray qv2ray-dev-git vlc thunderbird qbittorrent baidunetdisk-bin\n```\n\n**这里的 qv2ray-dev-git 一定要选择 Archlinux CN 软件源的版本**\n\n#### **用 debtap 安装 `.deb` 包（不推荐）**\n\n首先要下载并更新 debtap 包：\n\n```bash\npamac install debtap\nsudo debtap -u\n```\n\n**运行 `sudo debtap -u` 时建议连接北京大学校园网**\n\n进入含有 `.deb` 安装包的文件夹，输入：\n\n```bash\nsudo debtap (package_name).deb\n```\n\n系统会询问三个问题：文件名随便写，协议写 `GPL` 即可，编辑文件直接按 `Enter` 跳过\n\n此处会生成一个 `tar.zst` 包，双击打开（右键用“软件安装程序”打开）即可安装\n\n### **安装 TeX Live**\n\n推荐从 ISO 安装 TeX Live\n\n首先在[清华大学镜像站](https://mirrors.tuna.tsinghua.edu.cn/CTAN/systems/texlive/Images/)或者[上海交大镜像站](https://mirrors.sjtug.sjtu.edu.cn/ctan/systems/texlive/Images/)下载 TeX Live ISO，文件名为 `texlive.iso`（和 `texlive(year).iso`、`texlive(year)-(date).iso` 是一致的）\n\n打开终端，运行：\n\n```bash\nsudo mount -t iso9660 -o ro,loop,noauto (texlive_path)/texlive.iso /mnt\n```\n\n#### **使用图形界面安装**\n\n首先要检查是否安装 tcl 和 tk：\n\n```bash\npamac install tcl tk\n```\n\n进入镜像文件夹，运行：\n\n```bash\nsudo perl install-tl -gui\n```\n\n即可在图形界面下载 TeX Live（如果不加 `sudo` 则只能将其安装到 `/home/(user_name)/` 下的文件夹且无法勾选 Create symlinks in standard directories: 一项），高级设置需要点击左下角的 Advanced 按钮\n\n**记住勾选 Create symlinks in standard directories 一项（自动添加到 PATH），Specify directories 选择默认文件夹即可，之后不需要自己添加 PATH**\n\n#### **使用命令行界面安装**\n\n进入镜像文件夹，运行：\n\n```bash\nsudo perl install-tl -gui text\n```\n\n用大写字母命令控制安装：\n\n```\nD >> 1 >> 输入要安装 TeX Live 的位置（TEXDIR） >> R\nO >> L >> 都选择默认位置（按 Enter） >> R\nI\n```\n\nTEXDIR 建议选择 `/home/(user_name)/` 下的文件夹以方便查看和修改，TEXMFLOCAL 会随 TEXDIR 自动更改\n\nCTAN 镜像源可以使用 TeX Live 管理器 tlmgr 更改，更改到清华大学镜像需要在命令行中执行：\n\n```bash\nsudo tlmgr option repository https://mirrors.tuna.tsinghua.edu.cn/CTAN/systems/texlive/tlnet\nsudo tlmgr --repository http://www.texlive.info/tlgpg/ install tlgpg\n```\n\n可以运行 `tex --version` 检查是否安装成功，若成功应显示 TeX 的版本号、TeX Live 的版本号和版权信息\n\n还可以运行 `tlmgr --version` 和 `texdoc (package_name)` （选择常见的宏包名称如 `texdoc ctex`）检查是否安装成功\n\n### **TeXstudio 安装与配置（可选）**\n\n安装 TeXstudio：\n\n```bash\npamac install texstudio\n```\n\n帮助 >> 检查 LaTeX 安装信息\n\n如果能检测到 LaTeX，说明 TeX Live 安装成功，开始设置\n\n选项 >> 设置 TeXstudio\n\n首先在左下角勾选“显示高级选项”\n\n常规 >> 会话 >> 取消勾选“启动时恢复上一次会话”（可选）\n\n菜单 >> 数学 >> `\\frac{}{}` >> `\\frac{%|}{}`\n\n菜单 >> 数学 >> `\\frac{}{}` >> `\\frac{%|}{}`\n\n快捷键 >> 数学 >> 数学字体格式 >> 罗马字体 >> 当前快捷键 >> `Alt+Shift+R`\n\n编辑器 >> 缩进模式 >> 自动增加或减少缩进\n\n编辑器 >> 缩进模式 >> 勾选“将缩进替换为空格”和“将文本中的制表符（Tab）替换为空格”\n\n编辑器 >> 显示行号 >> 所有行号\n\n编辑器 >> 取消勾选“行内检查”\n\n高级编辑器 >> 自动保存所有文件 >> 1 分钟\n\n高级编辑器 >> 破解/变通 >> 取消勾选“自动选择最佳显示选项”，并勾选“禁用字符宽度缓存”和“关闭固定位置模式”\n\n补全 >> 取消勾选“输入参数”\n\n### **Thunderbird 配置**\n\n#### **Thunderbird 首选项配置**\n\n进入首选项界面调整显示：\n\n首选项 >> 常规 >> Thunderbird 起始页 >> 清空并取消勾选\n\n首选项 >> 常规 >> 默认搜索引擎 >> 改为 Bing\n\n首选项 >> 隐私与安全 >> 邮件内容 >> 勾选“允许消息中的远程内容”\n\n右键点击上方邮件工具栏，选择“自定义”，自行配置即可\n\n#### **Thunderbird 帐号配置**\n\n点击邮箱帐号，配置“账户设置”如下：\n\n服务器 >> 服务器设置 >> 每隔 1 分钟检查一次新消息\n\n服务器 >> 服务器设置 >> 在删除消息时 >> 立即删除\n\n### **Python 安装与配置**\n\nManjaro 预装了 Python，但没有安装包管理器，可以使用 `pip` 或 `conda`（即安装 Miniconda）\n\n#### **pip 安装**\n\n在终端中输入：\n\n```bash\ncurl https://bootstrap.pypa.io/get-pip.py -o get-pip.py && python get-pip.py\n```\n\n即可安装 pip，此时不建议安装 conda，pip 下载包的命令是：\n\n```bash\npip install (package_name)\n```\n\n这里不建议安装 spyder 和 jupyter notebook，安装最基本的包即可：\n\n```bash\npip install numpy scipy matplotlib astropy autopep8\n```\n\n#### **Miniconda 安装与配置**\n\nMiniconda 是 Anaconda 的精简版，推荐使用 Miniconda\n\n下载地址如下：\n\nMiniconda -- Conda documentation\n\nhttps://docs.conda.io/en/latest/miniconda.html\n\n或者在[清华大学镜像站](https://mirrors.tuna.tsinghua.edu.cn/#)点击右侧的“获取下载链接”按钮，在“应用软件” >> Conda 里面选择\n\n安装过程参考以下网址：（Miniconda 和 Anaconda 的安装步骤相同）\n\nAnaconda Documentation -- Installing on Linux\n\nhttps://docs.anaconda.com/anaconda/install/linux/\n\n输入以下命令：\n\n```bash\nvim ~/.condarc\n```\n\n修改 `.condarc` 以使用清华大学镜像源：\n\n```\nchannels:\n  - defaults\nshow_channel_urls: true\ndefault_channels:\n  - https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/main\n  - https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/r\n  - https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/msys2\ncustom_channels:\n  conda-forge: https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud\n  msys2: https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud\n  bioconda: https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud\n  menpo: https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud\n  pytorch: https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud\n  simpleitk: https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud\n```\n\n若不用特定的镜像源，改为：\n\n```\nchannels:\n  - defaults\nssl_verify: true\n```\n\n下载所需要的包：\n\n```bash\nconda install numpy scipy matplotlib astropy spyder jupyter\n```\n\n各个操作系统平台上可下载的包可以在以下网站查询：\n\nAnaconda Documentation -- Anaconda Package Lists\n\nhttps://docs.anaconda.com/anaconda/packages/pkg-docs/\n\n#### **Conda 常用命令**\n\n下载包：\n\n```bash\nconda install (package_name)\n```\n\n下载特定版本的包：\n\n```bash\nconda install (package_name)=(version_number)\n```\n\n更新包：\n\n```bash\nconda update (package_name)\n```\n\n更新所有包：\n\n```bash\nconda update --all\n```\n\n恢复之前的版本：\n\n```bash\nconda list --revisions\nconda install --revision (revision_number)\n```\n\n**如果回滚到早期版本（`revision_number` 较小）之后又想回到某个高版本（`revision_number` 较大），必须要把两个版本中的版本都装一遍**\n\n删除所有旧版本的包：\n\n```bash\nconda clean -p\n```\n\n列出所有下载的包：\n\n```bash\nconda list\n```\n\n#### **Spyder 配置**\n\n通用 >> 显示器分辨率 >> 自定义高分辨率缩放 >> 1.0\n\n外观 >> 语法高亮主题 >> IDLE\n\n编辑选定的方案：\n\n文本：\n\n```\n普通文本 #000000\n注释：#999999, B\n字符串：#00aa00\n数值：#aa0000\n关键字：#ff5500, B\n内置：#990099\n定义：#0000ff\n实例：#ff55ff, B\n```\n\n高亮：\n\n```\n当前 Cell：#ffaaff\n当前行：#aaffff\n事件：#ffff00\n匹配圆括号：#99ff99\n不匹配圆括号：#ff9999\n链接：#55ff00\n```\n\n编辑器 >> 勾选“显示标签栏”、“显示缩进指导”、“显示行号”、“高亮显示当前行”、“高亮显示当前 Cell”，并把“高亮延迟时间”设定为 100 毫秒\n\n用 Spyder 打开某个文件需要在终端中输入：\n\n```bash\nspyder (file_path)/(file_name)\n```\n\n**目前 Spyder 还不支持 Fcitx/Fcitx5 输入中文字符**\n\n### **Vim 安装插件**\n\n执行：\n\n```bash\ngit clone (github_repository_URL) ~/.vim/pack/(plugin_name)/start/(plugin_name)\nvim -u NONE -c \"helptags ~/.vim/pack/(plugin_name)/start/(plugin_name)/doc\" -c q\n```\n\n### **Visual Studio Code 安装与配置**\n\n#### **Visual Studio Code 安装**\n\n发行版维护者从开源代码构建的版本，可以用 `code` 命令打开（缺点是图标被重新设计过，且更新落后于微软官方版）：\n\n```bash\npamac install code\n```\n\n微软官方的二进制包（包含部分私有的组件），同样可以用 `code` 命令打开（如果不介意私有组件而且不习惯 Code - OSS 的图标，个人推荐首选此项）：\n\n```bash\npamac install visual-studio-code-bin\n```\n\n内测版本：\n\n```bash\npamac install visual-studio-code-insiders\n```\n\n第三方发布的从开源代码构建的二进制包：\n\n```bash\npamac install vscodium-bin\n```\n\n从最新的开源代码构建：\n\n```bash\npamac install code-git\n```\n\n下载扩展：Python（会自动下载 Pylance、Jupyter 等扩展），Markdown All in One，LaTeX Workshop，C/C++，Rainbow Brackets，Prettier - Code formatter\n\n扩展保存在 `~/.vscode/extensions/` 文件夹内\n\n#### **Visual Studio Code 图标更改（可选）**\n\n如果图标美化后 Visual Studio Code 图标变成圆形，想恢复原图标，更改路径如下：\n\n程序启动器 >> 编辑应用程序 >> Visual Studio Code >> 点击图标更改 >> 其他图标\n\n其图标位置在 `/usr/share/icons/visual-studio-code.png`\n\n#### **Visual Studio Code 缩放比例**\n\n放大比例：`Ctrl+=`\n\n缩小比例：`Ctrl+-`\n\n#### **Visual Studio Code 设置快捷键**\n\n若要更改全局快捷键，设置文件在 `~/.config/Code/User/keybinding.json`，可以在 Visual Studio Code 中按 `Ctrl+K Ctrl+S` 开启设置\n\n#### **Latex Workshop 插件设置**\n\n若想在 LaTeX Workshop 里面添加 `\\frac{}{}` 命令的快捷键为 `Ctrl+M Ctrl+F`，则添加一段：\n\n```json\n{\n    \"key\": \"ctrl+m ctrl+f\",\n    \"command\": \"editor.action.insertSnippet\",\n    \"args\": { \"snippet\": \"\\\\frac{$1}{$2}$0\" },\n    \"when\": \"editorTextFocus && !editorReadonly && editorLangId =~ /latex|rsweave|jlweave/\"\n}\n```\n\n若要更改行间公式 `\\[\\]` 的自动补全（公式独占一行），在 `~/.vscode/extensions/james-yu.latex-workshop-(version_number)/data/commands.json` 中找到：\n\n```json\n\"[\": {\n    \"command\": \"[\",\n    \"snippet\": \"[${1}\\\\]\",\n    \"detail\": \"display math \\\\[ ... \\\\]\"\n  },\n```\n\n改为：\n\n```json\n\"[\": {\n    \"command\": \"[\",\n    \"snippet\": \"[\\n    ${1}\\n\\\\]\",\n    \"detail\": \"display math \\\\[ ... \\\\]\"\n  },\n```\n\n重启 Visual Studio Code 即可生效\n\n#### **Rainbow Brackets 插件设置**\n\n更改 Rainbow Brackets 的括号配色可以修改文件 `~/.vscode/extensions/2gua.rainbow-brackets-0.0.6/out/src/extension.js`：\n\n```js\nvar roundBracketsColor = [\"#ff5500\", \"#cc0066\", \"#00aa66\", \"#ff9999\"];\nvar squareBracketsColor = [\"#33ccff\", \"#8080ff\", \"#0077aa\"];\nvar squigglyBracketsColor = [\"#aa00aa\", \"#009900\", \"#996600\"];\n```\n\n重启 Visual Studio Code 即可生效\n\n### **Typora 美化**\n\n#### **源代码模式**\n\n更改 `/usr/share/typora/resources/style/base-control.css`：（在 Windows 中则是 `C:\\Program Files\\Typora\\resources\\style\\base-control.css`）\n\n找到 `.CodeMirror.cm-s-typora-default div.CodeMirror-cursor` 一行，将光标宽度改为 `1px`，颜色改为 `#000000`\n\n找到 `#typora-source .CodeMirror-lines` 一行，将 `max-width` 改为 `1200px`\n\n更改 `/usr/share/typora/resources/style/base.css`：（在 Windows 中则是 `C:\\Program Files\\Typora\\resources\\style\\base.css`）\n\n找到 `:root` 一行，将 `font-family` 改成自己想要的字体\n\n#### **主题渲染模式**\n\n在 `/home/(user_name)/.config/Typora/themes/` 中自己写一个 CSS 文件（可以复制其中一个默认主题，重命名后更改）\n\n找到 `body` 一行，将 `font-family` 改成自己想要的字体\n\n找到 `tt` 一行，将 `font-family` 改成自己想要的等宽字体（`monospace`）\n\n### **SAOImageDS9 安装**\n\n推荐选择二进制包 `ds9-bin`：\n\n```bash\npamac install ds9-bin\n```\n\n### **Github Desktop 安装（可选）**\n\n推荐选择二进制包 `github-desktop-bin`：\n\n```bash\npamac install github-desktop-bin\n```\n\n登录时要创建一个密钥环，密钥设为 Github 密码即可\n\n### **WPS 安装（可选）**\n\n运行：\n\n```bash\npamac install wps-office-cn wps-office-mui-zh-cn ttf-wps-fonts\n```\n\n### **微信安装**\n\n极简版（原生适配高分辨率屏幕，不需要 wine/deepin-wine 即可运行；但是功能较少，不支持截屏和“订阅号消息”，且对大文件传输的支持不佳）：\n\n```bash\npamac install wechat-uos\n```\n\n功能较多，和最新的 Windows 电脑版同步更新，但依赖 deepin-wine，且暂不支持“截屏时隐藏当前窗口”的版本：\n\n```bash\npamac install deepin-wine-wechat\n```\n\n#### **deepin-wine-wechat 高分辨率适配调整**\n\n用命令 `/opt/apps/com.qq.weixin.deepin/files/run.sh winecfg` 调出 Wine Configuration，对于 200% 的放大率：\n\nGraphics >> Screen Resolution >> 192 dpi\n\n其余基于 Deepin Wine 的软件（如腾讯会议）也是类似的处理方法，将 `com.qq.weixin.deepin` 换成对应的文件夹名称即可（都在 `/opt/apps/` 目录下）\n\n### **会议软件安装**\n\n腾讯会议：\n\n```bash\npamac install com.tencent.deepin.meeting\n```\n\n高分辨率适配调整：\n\n用命令 `/opt/apps/com.tencent.meeting.deepin/files/run.sh winecfg` 调出 Wine Configuration，对于 200% 的放大率：\n\nGraphics >> Screen Resolution >> 192 dpi\n\n### **音乐软件安装**\n\n#### **网易云音乐**\n\n```bash\npamac install netease-cloud-music\n```\n\n#### **QQ 音乐**\n\n```bash\npamac install qqmusic-bin\n```\n\n默认是暗色主题，右上角皮肤键（衣服图案）可以更改为亮色主题\n\n### **Geant4 安装**\n\n#### **从源代码安装 Geant4**\n\n从官网上下载源代码压缩包：\n\nGeant4 -- Download\n\nhttps://geant4.web.cern.ch/support/download\n\n进入解压后的文件夹，若要将 Geant4 安装在 `(Geant4_directory)`，例如 `~/Geant4`，执行：\n\n```bash\nmkdir build\ncd ./build\ncmake -DCMAKE_INSTALL_PREFIX=(Geant4_directory) -DGEANT4_USE_OPENGL_X11=ON -DGEANT4_USE_QT=ON -DGEANT4_INSTALL_DATA=ON -DGEANT4_BUILD_MULTITHREADED=ON ..\nmake -j8\nmake install -j8\n```\n\n之后在 `~/.bashrc` 中添加一行：\n\n```bash\nsource (Geant4_directory)/bin/geant4.sh\n```\n\n#### **检验是否安装成功**\n\n打开 `(Geant4_directory)/share/Geant4-(version_number)/examples/basic/B1`，执行：\n\n```bash\nmkdir build\ncd ./build\ncmake ..\nmake -j8\n./exampleB1\n```\n\n如果出现图形交互界面，说明安装成功\n\n### **Surface：能用上触控笔的软件（可选）**\n\n#### **绘画**\n\n```bash\npamac install krita\n```\n\n#### **手写笔记**\n\n可以选择 Xournal++ 或者 Write\n\n```bash\npamac install xournalpp\npamac install write_stylus\n```\n\n### **Surface：屏幕键盘（可选）**\n\n目前最受欢迎的屏幕键盘应该是 OnBoard\n\n```bash\npamac install onboard\n```\n\n但 OnBoard 在 Wayland 上无法使用。如果需要在 Wayland 会话中使用屏幕键盘，推荐安装 CellWriter\n\n```bash\npamac install cellwriter\n```\n\n## **参考资料**\n\nBitLocker 恢复密钥\n\nhttps://account.microsoft.com/devices/recoverykey?refd=account.microsoft.com\n\nWindows 10 如何关闭快速启动\n\nhttps://jingyan.baidu.com/article/ca00d56c7a40e6e99febcf4f.html\n\n创建和使用 Surface 的 USB 恢复驱动器\n\nhttps://support.microsoft.com/zh-cn/help/4023512/surface-creating-and-using-a-usb-recovery-drive\n\n下载 Surface 的恢复映像\n\nhttps://support.microsoft.com/zh-cn/surfacerecoveryimage\n\n下载 Windows 10 光盘映像\n\nhttps://www.microsoft.com/zh-cn/software-download/windows10ISO\n\n如何使用 Surface UEFI\n\nhttps://support.microsoft.com/zh-cn/help/4023531/surface-how-to-use-surface-uefi\n\nWin 10 环境下安装 Manjaro KDE（双系统）\n\nhttps://www.cnblogs.com/Jaywhen-xiang/p/11561661.html\n\nManjaro 20 KDE 配置心得\n\nhttps://blog.csdn.net/weixin_40293491/article/details/107526553\n\nManjaro 安装体验小结\n\nhttps://zhuanlan.zhihu.com/p/76608451\n\nManjaro 安装后你需要这样做\n\nhttps://www.cnblogs.com/haohao77/p/9034499.html#11-%E9%85%8D%E7%BD%AE%E5%AE%98%E6%96%B9%E6%BA%90\n\nManjaro Wiki -- Pacman Overview\n\nhttps://wiki.manjaro.org/index.php/Pacman_Overview\n\nArchWiki -- Pacman\n\nhttps://wiki.archlinux.org/index.php/Pacman\n\nManjaro Wiki -- Pamac\n\nhttps://wiki.manjaro.org/index.php/Pamac\n\nGitHub -- sudo pacman\n\nhttps://github.com/Jguer/sudo pacman\n\nManjaro Wiki -- Manjaro Hardware Detection Overview\n\nhttps://wiki.manjaro.org/index.php/Manjaro_Hardware_Detection_Overview\n\nManjaro Wiki -- Configure Graphics Cards\n\nhttps://wiki.manjaro.org/index.php/Configure_Graphics_Cards\n\nManjaro Wiki -- Manjaro Kernels\n\nhttps://wiki.manjaro.org/index.php/Manjaro_Kernels\n\nArchWiki -- Sudo (简体中文)\n\nhttps://wiki.archlinux.org/index.php/Sudo_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)\n\nManjaro Wiki -- Switching Branches\n\nhttps://wiki.manjaro.org/index.php?title=Switching_Branches\n\n在 Mac 上用 Openconnect 连接 Pulse Secure VPN\n\nhttps://blog.yangl1996.com/post/use-openconnect-to-connect-to-pulse-secure-on-mac/\n\n双系统下 Ubuntu 读写/挂载 Windows 中的硬盘文件 + 解决文件系统突然变成只读\n\nhttps://jakting.com/archives/ubuntu-rw-windows-files.html\n\n修改 hosts 解决 GitHub 访问失败\n\nhttps://zhuanlan.zhihu.com/p/107334179\n\nManjaro Linux Forum -- Connect to internet from command-line as a beginner\n\nhttps://forum.manjaro.org/t/howto-connect-to-internet-from-command-line-as-a-beginner/\n\nArch Wiki -- XDG user directories\n\nhttps://wiki.archlinux.org/index.php/XDG_user_directories\n\nArch Wiki -- Cinnamon\n\nhttps://wiki.archlinux.org/index.php/Cinnamon#Installation\n\nArch Wiki -- Intel Graphics\n\nhttps://wiki.archlinux.org/index.php/Intel_graphics#Installation\n\nKDE Community -- Plasma 5.9 Errata\n\nhttps://community.kde.org/Plasma/5.9_Errata#Intel_GPUs\n\nArchWiki -- Baloo\n\nhttps://wiki.archlinux.org/index.php/Baloo\n\nArch Wiki -- 关于 Logitech BLE 鼠标的问题\n\nhttps://wiki.archlinux.org/index.php/Bluetooth_mouse#Problems_with_the_Logitech_BLE_mouse_(M557,_M590,_anywhere_mouse_2,_etc)\n\nLinux-Surface -- Installation and Setup\n\nhttps://github.com/linux-surface/linux-surface/wiki/Installation-and-Setup\n\nArch Wiki -- System time（简体中文）\n\nhttps://wiki.archlinux.org/index.php/System_time_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)\n\nKDE 桌面的 Mac 化\n\nhttps://www.cnblogs.com/luoshuitianyi/p/10587788.html\n\nKDE 桌面美化指南\n\nhttps://acherstyx.github.io/2020/06/30/KDE%E6%A1%8C%E9%9D%A2%E7%BE%8E%E5%8C%96%E6%8C%87%E5%8D%97/\n\nOh-My-Zsh 及主题、插件的安装与配置\n\nhttps://www.cnblogs.com/misfit/p/10694397.html\n\nLinux GRUB 删除多余启动条目\n\nhttps://blog.csdn.net/JackLiu16/article/details/80383969\n\nAUR 镜像使用帮助\n\nhttps://mirrors.tuna.tsinghua.edu.cn/help/AUR/\n\nTUNA NTP (网络授时) 服务使用说明\n\nhttps://tuna.moe/help/ntp/\n\nSJTUG 软件源镜像服务\n\nhttps://mirrors.sjtug.sjtu.edu.cn/#/\n\nManjaro 为包管理器 pacman 和 yaourt/sudo pacman 添加多线程下载\n\nhttps://blog.csdn.net/dc90000/article/details/101752743?utm_medium=distribute.wap_relevant.none-task-blog-OPENSEARCH-6.nonecase&depth_1-utm_source=distribute.wap_relevant.none-task-blog-OPENSEARCH-6.nonecase\n\nArchWiki -- Microsoft fonts（简体中文）\n\nhttps://wiki.archlinux.org/index.php/Microsoft_fonts_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)\n\nArchlinux 使用 Windows 字体及相关配置\n\nhttps://blog.csdn.net/sinat_33528967/article/details/93380729\n\nArchWiki -- Fcitx5 (简体中文)\n\nhttps://wiki.archlinux.org/index.php/Fcitx5_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)\n\nArchived Manjaro Forum -- 比较几种中文输入法后，我最终选择了 sunpinyin + cloudpinyin 组合\n\nhttps://archived.forum.manjaro.org/t/sunpinyin-cloudpinyin/114282\n\nAcquiring TeX Live as an ISO image\n\nhttps://www.tug.org/texlive/acquire-iso.html\n\nTeX Live - Quick install\n\nhttps://www.tug.org/texlive/quickinstall.html\n\nTeX Live Documentation -- TeXLive Installation\n\nhttps://www.tug.org/texlive/doc/texlive-en/texlive-en.html#installation\n\nFont size of mailbox is too small\n\nhttps://support.mozilla.org/zh-CN/questions/1297871\n\nAnaconda Documentation -- Installing on Linux\n\nhttps://docs.anaconda.com/anaconda/install/linux/\n\n恢复 Anaconda 环境, 卸载 Anaconda, 重装 Anaconda\n\nhttps://blog.csdn.net/wangweiwells/article/details/88374361\n\nGeant4 -- Building and Installing from Source\n\nhttps://geant4-userdoc.web.cern.ch/UsersGuides/InstallationGuide/html/installguide.html\n\nGeant4 -- Postinstall Setup\n\nhttps://geant4-userdoc.web.cern.ch/UsersGuides/InstallationGuide/html/postinstall.html\n\nGeant4 基础 -- 准备与安装\n\nhttps://zhuanlan.zhihu.com/p/135917392\n\nLinux ate my RAM!\n\nhttps://www.linuxatemyram.com/\n","source":"_posts/Manjaro-KDE-Installation.md","raw":"---\ntitle: Manjaro KDE 安装指南\ndate: 2021-09-13 8:00:00\nmath: true\ncategory:\n- 教程\ntag:\n- Manjaro\n- Linux\nindex_img: /img/Manjaro.jpg\nbanner_img: /img/Manjaro.jpg\n---\n\n# **在 ThinkPad X13 2021 Intel/Surface Pro 6 上安装 Manjaro 21 KDE Plasma + Windows 11 双系统的指南**\n\nThinkPad 系统信息：\n\n```\nOS: Manjaro 21.2.0 Qonos\nKernel: x86_64 Linux 5.14.13-1-MANJARO\nShell: bash 5.1.8\nResolution: 2560x1600\nDE: KDE 5.87.0 / Plasma 5.23.1\nWM: KWin\nGTK Theme: Breeze [GTK2/3]\nIcon Theme: breath2\nCPU: 11th Gen Intel Core i7-1165G7 @ 8x 4.7GHz\nGPU: Mesa Intel(R) Xe Graphics (TGL GT2)\n```\n\nSurface 系统信息：\n\n```\nOS: Manjaro 21.1.1 Pahvo\nKernel: x86_64 Linux 5.14.0-0-MANJARO/x86_64 Linux 5.13.13-arch1-3-surface\nShell: bash 5.1.8\nResolution: 2736x1824\nDE: KDE 5.85.0 / Plasma 5.22.5\nWM: KWin\nGTK Theme: Breath [GTK2/3]\nIcon Theme: breath2\nCPU: Intel Core i5-8250U @ 8x 3.4GHz\nGPU: Mesa Intel(R) UHD Graphics 620 (KBL GT2)\n```\n\n**说明：Surface 专有部分自 2021.9.5 起不再更新，内核终止于 x86_64 Linux 5.14.0-0-MANJARO/x86_64 Linux 5.13.13-arch1-3-surface**\n\n## **Windows 的准备工作**\n\n### **为 Manjaro 系统分区**\n\n右键点击开始菜单，选择”磁盘管理”，分出一块空分区，建议不小于 64GB\n\n### **关闭快速启动**\n\nWindows 工具 >> 控制面板 >> 电源选项 >> 选择电源按钮的功能 >> 更改当前不可用的设置 >> 关闭快速启动 >> 保存修改\n\n### **ThinkPad: UEFI 设置**\n\n启动 ThinkPad 时按 `Enter` 打断正常开机，然后按下 `Fn+Esc` 解锁 `Fn` 按钮，再按 `F1` 进入 UEFI 设置\n\nSecurity >> Secure Boot >> Off\n\n### **Surface: UEFI 设置**\n\n关闭 Surface，然后等待大约 10 秒钟以确保其处于关闭状态\n\n长按 Surface 上的调高音量按钮，同时按下再松开电源按钮\n\n屏幕上会显示 Microsoft 或 Surface 徽标，继续按住调高音量按钮，显示 UEFI 屏幕后，松开此按钮\n\nSecurity >> Secure Boot >> Disabled（第三个选项）\n\nBoot Configuration >> Configure boot device order 中可以调整和删除启动顺序\n\n具体参考下列网址：\n\n如何使用 Surface UEFI\n\nhttps://support.microsoft.com/zh-cn/surface/%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8-surface-uefi-df2c8942-dfa0-859d-4394-95f45eb1c3f9\n\n### 删除多余的 Windows 启动项\n\n如果在电脑上装有多个 Windows，则系统只会选择其中一个在 Windows Boot Manager 中启动，若要删除多余的启动项，在 Windows 的“系统配置”（搜索框中输入 `msconfig` 或在“Windows 工具”中选择）的“引导”页面即可删除\n\n### **制作启动盘**\n\n#### **下载系统 ISO 镜像**\n\n从 Manjaro 官网上下载：\n\nhttps://manjaro.org/downloads/official/kde/ （KDE Plasma 版本）\n\nhttps://manjaro.org/get-manjaro/ （所有官方版本）\n\n或者在 Github 上下载：\n\nhttps://github.com/manjaro-plasma/download/releases （KDE Plasma 版本）\n\nhttps://github.com/manjaro/release-review/releases （所有官方版本）\n\n#### **刻录 USB 启动盘**\n\n推荐使用 [Ventoy](https://www.ventoy.net/cn/index.html)，可以在 Windows/Linux 上使用，方法是下载安装包后解压、安装到 USB 上，之后直接将 ISO 镜像拷贝到 USB 中即可选择镜像文件进行登录系统，支持多个系统镜像登录\n\nLinux 上也可以使用 [Etcher](https://www.balena.io/etcher/)，在 Linux（下载 Appimage 或从 AUR 上用包管理器下载 `balena-etcher`）和 Windows（下载 EXE 可执行文件）上均能使用（但无法刻录 Windows 系统镜像），Github 项目地址在 https://github.com/balena-io/etcher\n\nWindows 上还可以用 [Rufus](https://rufus.ie/zh/)，速度与 Etcher 相当且支持 Windows 和 Linux 系统镜像，但无法在 Linux 上使用（只提供 Windows 版 EXE 可执行文件），Github 项目地址在 https://github.com/pbatard/rufus\n\n### **ThinkPad：安装 Manjaro**\n\n设置 >> 恢复 >> 立即重新启动 >> USB HDD\n\n或按照以下步骤直接从 USB 启动:\n\n启动 ThinkPad 时按 `Enter` 打断正常开机，然后按下 `Fn+Esc` 解锁 `Fn` 按钮，再按 `F12` 选择启动位置为 USB HDD\n\n### **Surface：安装 Manjaro**\n\n设置 >> 恢复 >> 立即重新启动 >> USB Storage\n\n或按照以下步骤直接从 USB 启动:\n\n关闭 Surface\n\n将可启动 U 盘插入 Surface 上的 USB 端口\n\n长按 Surface 上的调低音量按钮，同时按下并释放电源按钮，屏幕上会显示 Microsoft 或 Surface 徽标\n\n继续按住调低音量按钮，释放按钮后，徽标下方将显示旋转圆点，进入 UEFI 界面\n\n在 UEFI 界面内从 USB 启动\n\n#### **进入 Manjaro Hello 窗口开始安装**\n\n语言选择“简体中文”\n\n时区选择“Asia -- Shanghai”\n\n键盘设置选择“Chinese -- Default”\n\n安装时选择“替代一个分区”，并点击之前空出来的空分区\n\n或者手动挂载空分区，挂载点设为 `/`，标记为 `root`，手动挂载 UEFI 分区（即第一个分区`dev/nvme0n1p1`，格式为 FAT32），不要格式化，挂载点设为 `/boot/efi`，标记为 `boot`\n\n用户名建议全部用小写字母并与登录时的用户名一致\n\n设置密码，并勾选“为管理员使用相同的密码”\n\n## **初始配置**\n\n### **电源与开机设置**\n\n系统设置 >> 电源管理 >> 节能 >> 勾选“按键事件处理” >> 合上笔记本盖时 >> 选择“关闭屏幕” >> 勾选“即使已连接外部显示器”\n\n系统设置 >> 开机与关机 >> 桌面会话 >> 登入时 >> 选择“以空会话启动”\n\n#### **与电源管理相关的常见英文名词**\n\nSleep：睡眠，Suspend：挂起，Reboot：重启，Shutdown：关机，Logout：注销\n\n### **高分辨率设置**\n\nThinkPad 的屏幕分辨率是 2560×1600，而 Surface 的屏幕分辨率是 2736×1824，需要配置高分屏优化：\n\n系统设置 >> 显示和监控 >> 显示配置 >> 分辨率 >> 全局缩放 >> 200%\n\n系统设置 >> 光标 >> 大小 >> 36\n\n然后重启电脑\n\n### **快捷键配置**\n\n#### **全局快捷键**\n\n为打开方便，可以采用 i3wm 的默认快捷键打开 Konsole：\n\n系统设置 >> 快捷键 >> 添加应用程序 >> Konsole >> Konsole 的快捷键设为 `Meta+Return`（即“Windows 徽标键 + Enter 键”）\n\n#### **Konsole/Yakuake 快捷键**\n\n设置 >> 配置键盘快捷键 >> 复制改为 `Ctrl+C` ，粘贴改为 `Ctrl+V`\n\n### **选择镜像并更改更新分支**\n\n选择镜像：\n\n```bash\nsudo pacman-mirrors -i -c China\n```\n\n更新分支 `(branch)` 可以选择 stable/testing/unstable，更改更新分支的命令为：（不要漏掉 `-a`）\n\n```bash\nsudo pacman-mirrors -aS (branch)\nsudo pacman -Syyu\n```\n\n获取更新分支的命令为：\n\n```bash\nsudo pacman-mirrors -G\n```\n\n选择镜像并更改更新分支的命令则为：\n\n```bash\nsudo pacman-mirrors -aS (branch) -ic China\n```\n\n**一般建议选择上海交大的镜像，其更新频率最高且支持全部三个更新分支，如果在北京大学访问上海交大镜像源较慢可以考虑用更快的清华大学镜像源**\n\n### 包管理器\n\nManjaro 常用的包管理器有 pacman 和 pamac，其使用教程参考以下网址：\n\nManjaro Wiki -- Pacman Overview\n\nhttps://wiki.manjaro.org/index.php/Pacman_Overview\n\nManjaro Wiki -- Pacman-mirrors\n\nhttps://wiki.manjaro.org/index.php/Pacman-mirrors\n\nArchWiki -- Pacman\n\nhttps://wiki.archlinux.org/index.php/Pacman\n\nManjaro Wiki -- Pamac\n\nhttps://wiki.manjaro.org/index.php/Pamac\n\n其中 pacman 和 pamac 是预装的，“添加/删除软件”就是 pamac 的 GUI 版本\n\n硬件管理的包管理器是 mhwd 和 mhwd-kernel，其使用教程参考以下网址：\n\nManjaro Wiki -- Manjaro Hardware Detection Overview\n\nhttps://wiki.manjaro.org/index.php/Manjaro_Hardware_Detection_Overview\n\nManjaro Wiki -- Configure Graphics Cards\n\nhttps://wiki.manjaro.org/index.php/Configure_Graphics_Cards\n\nManjaro Wiki -- Manjaro Kernels\n\nhttps://wiki.manjaro.org/index.php/Manjaro_Kernels\n\n这两个也可以在 Manjaro Settings Manager （GUI 版本）中使用\n\n### **AUR**\n\n#### **安装 base-devel**\n\nAUR 上的某些 PKGBUILD 会默认你已经安装 `base-devel` 组的所有软件包而不将它们写入构建依赖。为了避免在构建过程中出现一些奇怪的错误，建议先安装 `base-devel`：\n\n```bash\nsudo pacman -S base-devel\n```\n\n#### **启用 pamac 的 AUR 支持**\n\n添加/删除软件 >> 右上角 ··· >> 首选项 >> AUR >> 启用 AUR 支持\n\n然后就可以用 pamac 的图形界面获取 AUR 软件包，或者用命令 `pamac build` 及 `pamac install` 获取 AUR 的软件包\n\n**注意 pacman 不支持 AUR**\n\n### **Arch Linux CN 软件源**\n\n在 `/etc/pacman.conf` 文件末尾添加以下两行以启用上海交大镜像（注意一定要写第一行的 `[archlinuxcn]`）：\n\n```\n[archlinuxcn]\nServer = https://mirrors.sjtug.sjtu.edu.cn/archlinux-cn/$arch\n```\n\n之后执行下面的命令安装 archlinuxcn-keyring 包导入 GPG key\n\n```bash\nsudo pacman -Sy archlinuxcn-keyring\nsudo pacman -Syyu\n```\n\n这样就开启了 pacman 和 pamac 对 Arch Linux CN 的支持\n\n由于 Manjaro 的更新滞后于 Arch，使用 Arch Linux CN 仓库可能会出现“部分更新”的情况，导致某些软件包损坏\n\n建议切换到 testing 或 unstable 分支以尽量跟进 Arch 的更新\n\n#### **搜索软件包**\n\n在 `pamac` 上可以执行：\n\n```bash\npamac search (package_name)\n```\n\n#### **检查依赖关系**\n\n以树状图的形式展示某软件包的依赖关系：\n\n```bash\npactree (package_name)\n```\n\n#### **降级软件包**\n\n在 `/var/cache/pacman/pkg/` 中找到旧软件包，双击打开安装实现手动降级，参考以下网址：\n\nDowngrading Packages -- ArchWiki\n\nhttps://wiki.archlinux.org/title/Downgrading_packages_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)\n\n#### **清理缓存**\n\n清理全部软件安装包：\n\n```bash\npamac clean\n```\n\n删除软件包时清理设置文件：\n\n```bash\nsudo pacman -Rn (package_name)\n```\n\n清理无用的孤立软件包：\n\n```bash\nsudo pacman -Rsn $(pacman -Qdtq)\n```\n\n若显示 `error: no targets specified (use -h for help)` 则说明没有孤立软件包需要清理\n\n或者：\n\n```bash\npamac remove -o\n```\n\n若不小心终止了 `pacman` 进程，则需要先删除 `/var/lib/pacman/db.lck` 才能再次启动 `pacman`\n\n#### **从本地安装包安装软件**\n\npacman 有从本地安装包安装软件的功能，只需输入：\n\n```bash\nsudo pacman -U (package_path)/(package_name)\n```\n\n### **切换到 video-modesetting（可选）**\n\n有时候打字时桌面卡死，只有鼠标能移动，但是无法点击\n\n可能是默认的 video-linux 显卡驱动的问题，已经有此类问题的报告和建议，参考以下网址：\n\nArch Wiki -- Cinnamon\n\nhttps://wiki.archlinux.org/index.php/Cinnamon#Installation\n\nArch Wiki -- Intel Graphics\n\nhttps://wiki.archlinux.org/index.php/Intel_graphics#Installation\n\nKDE Community -- Plasma 5.9 Errata\n\nhttps://community.kde.org/Plasma/5.9_Errata#Intel_GPUs\n\n解决办法：\n\n卸载 video-linux：\n\n```bash\nsudo mhwd -r pci video-linux\n```\n\n下载 video-modesetting：\n\n```bash\nsudo mhwd -i pci video-modesetting\n```\n\n**重启后会发现许多窗口和图标变小，建议先调整全局缩放为 100%，重新启动，再调至 200%，再重启**\n\n### **Surface：Linux-Surface 内核安装（可选）**\n\n**Manjaro 官方支持的最新的内核是 x86_64 Linux 5.14.0-0-MANJARO，从 Linux 5.13-MANJARO 开始已经支持 Surface 的电池组件（旧版内核不支持，无法显示电池电量状态），但不支持触屏**\n\n在终端中输入：\n\n```bash\ncurl -s https://raw.githubusercontent.com/linux-surface/linux-surface/master/pkg/keys/surface.asc \\| sudo pacman-key --add -\n```\n\n如果出现错误或没有响应，一般是网络问题，可能要等待几分钟，建议先配置好 VPN 再装内核\n\n接着输入：\n\n```bash\nsudo pacman-key --finger 56C464BAAC421453\nsudo pacman-key --lsign-key 56C464BAAC421453\n```\n\n在 `/etc/pacman.conf` 里面添加：\n\n```\n[linux-surface]\nServer = https://pkg.surfacelinux.com/arch/\n```\n\n然后更新软件库并下载：\n\n```bash\nsudo pacman -Syyu\nsudo pacman -S linux-surface linux-surface-headers iptsd-git\n```\n\n启动触屏：\n\n```bash\nsudo systemctl enable iptsd\n```\n\n启动相机参考以下网址：（相机功能仍在开发中，可能出现配置失败的情况）\n\nLinux-Surface -- Camera Support\n\nhttps://github.com/linux-surface/linux-surface/wiki/Camera-Support\n\nKDE 上原生的相机应用是 Kamoso，也可以使用 GNOME 上的相机应用 Cheese\n\n**Firefox 启用触屏需要在 `/etc/environment` 中写入 `MOZ_USE_XINPUT2=1`，然后重新启动，并在 about:config 中设置 `apz.allow_zooming` 和 `apz.allow_zooming_out` 为 `true`；Visual Studio Code 启用触屏需要更改 `/usr/share/applications/visual-studio-code.desktop`，在 `Exec` 一行中加入命令 `--touch-events`，这一般对以 Electron 为基础的软件有效**\n\n### **vim 安装与配置**\n\n建议先安装 vim，方便之后编辑各种文件：\n\n```bash\nsudo pacman -S vim\n```\n\nvim 的配置文件主要有 `/usr/share/vim/vimfiles/archlinux.vim`，`/etc/vimrc` 和 `/home/(user_name)/.vimrc`，建议直接修改 `/etc/vimrc`，这样不会覆盖 `/usr/share/vim/vimfiles/archlinux.vim` 上定义的默认配置（语法高亮等）\n\n### **GNU nano 配置**\n\nnano 的配置文件在 `/etc/nanorc`，可以通过取消注释设置选项配置文件，如：\n\n取消注释 `set linenumbers` 可以显示行号\n\n取消注释 `set tabsize 8` 可以更改 Tab 键的长度，例如 `set tabsize 4`\n\n取消注释 `set tabstospaces` 可以将 Tab 转换为空格\n\n取消注释 `set matchbrackets \"(<[{)>]}\"` 可以匹配括号\n\n取消注释 `include \"/usr/share/nano/*.nanorc\"` 一行和所有的颜色设置可以启用代码高亮\n\n取消注释所有的 `Key bindings` 选项可以启用更常用的快捷键设定\n\n**用 nano 编辑后保存的步骤是 `Ctrl+W` （Write Out） >> `Enter` >> `Ctrl+Q` （Exit），如果用默认的快捷键设置，则为 `Ctrl+O` （Write Out） >> `Enter` >> `Ctrl+X` （Exit）**\n\n### **更改 visudo 默认编辑器为 vim**\n\nManjaro 中 visudo 的默认编辑器是 vi，若要改为 vim，则首先在终端中输入：\n\n```bash\nsudo visudo\n```\n\n在开头的一个空行键入：\n\n```\nDefaults editor=/usr/bin/vim\n```\n\n按 `Esc` 进入命令模式，再按 `:x` 保存，按 `Enter` 退出\n\n如果想临时使用 vim 作为编辑器，则输入：\n\n```bash\nsudo EDITOR=vim visudo\n```\n\n### **sudo 免密码**\n\n在最后一行（空行）按 `i` 进入输入模式，加上这一行：\n\n```\nDefaults:(user_name) !authenticate\n```\n\n进入命令模式，保存退出即可\n\n**注：如果想保留输入密码的步骤但是想在输入密码时显示星号，则加上一行 `Defaults env_reset,pwfeedback` 即可**\n\n### **命令行界面输出语言为英语**\n\n在 `~/.bashrc` 的最后添加一行：\n\n```\nexport LANG=en_US.UTF-8\n```\n\n如果使用 zsh，则去掉 `~/.zshrc` 中这一行的注释即可\n\n### **时间设置**\n\n#### **双系统时间不同步**\n\n系统设置 >> 时间和日期 >> 自动设置时间和日期\n\n在 Manjaro 上设置硬件时间为 UTC：\n\n```bash\nsudo timedatectl set-local-rtc 0\n```\n\n并在 Windows 上设置硬件时间为 UTC，与 Manjaro 同步：\n\n```powershell\nreg add \"HKEY_LOCAL_MACHINE\\System\\CurrentControlSet\\Control\\TimeZoneInformation\" /v RealTimeIsUniversal /d 1 /t REG_QWORD /f\n```\n\n这一步需要在 Powershell（管理员）中执行\n\n#### **Manjaro 数字时钟设置 24 小时制**\n\n右键点击“数字时钟” >> 配置数字时钟 >> 时间显示 >> 24 小时制\n\n#### **添加 TUNA 网络授时服务**\n\n参考以下网址：\n\nTUNA NTP (网络授时) 服务使用说明\n\nhttps://tuna.moe/help/ntp/\n\n### **关闭启动时的系统信息**\n\n参考以下网址：\n\nSilent Boot -- ArchWiki\n\nhttps://wiki.archlinux.org/title/Silent_boot\n\n主要是 [Kernel parameters](https://wiki.archlinux.org/title/Silent_boot#Kernel_parameters) 和 [fsck](https://wiki.archlinux.org/title/Silent_boot#fsck) 两段\n\n编辑 Kernel parameters：\n\n```bash\nsudo vim /etc/default/grub\n```\n\n将 `GRUB_CMDLINE_LINUX_DEFAULT` 的值改为 `\"quiet loglevel=3 udev.log_priority=3\"`\n\n编辑 fsck:\n\n```bash\nsudo vim /etc/mkinitcpio.conf\n```\n\n在 `HOOKS` 一行中将 `udev` 改为 `systemd`，保存后执行：\n\n```bash\nsudo mkinitcpio -P\n```\n\n再编辑 `systemd-fsck-root.service` 和 `systemd-fsck@.service`：\n\n```bash\nsudo systemctl edit --full systemd-fsck-root.service\nsudo systemctl edit --full systemd-fsck@.service\n```\n\n分别在 `Service` 一段中编辑 `StandardOutput` 和 `StandardError` 如下：\n\n```\nStandardOutput=null\nStandardError=journal+console\n```\n\n最后执行\n\n```bash\nsudo update-grub\n```\n\n### **关闭重启时的 watchdog 提示**\n\n创建文件 `/etc/modprobe.d/watchdog.conf`，并写入：\n\n```\nblacklist iTCO_wdtblacklist iTCO_vendor_support\n```\n\n这样可以屏蔽掉不需要的驱动，保存后执行：\n\n```bash\nsudo update-grub\n```\n\n再重启即可\n\n### **hosts 文件设置（可选）**\n\n参考以下网址：\n\n修改 hosts 解决 GitHub 访问失败\n\nhttps://zhuanlan.zhihu.com/p/107334179\n\n需要修改的文件是 `/etc/hosts`，Windows 下对应的文件位置为： `C:\\Windows\\System32\\drivers\\etc\\hosts` （注意这里是反斜杠）\n\n### **动态 Swap 文件设置**\n\n**使用 swap 分区可能会缩短 SSD 的寿命，如果需要 swap 的话建议用 swap 文件，详见 [Swap（简体中文）- Arch Wiki](<https://wiki.archlinux.org/index.php/Swap_(简体中文)#交换文件>)**\n\n先下载 `systemd-swap` 软件包：\n\n```bash\nsudo pacman -S systemd-swap\n```\n\n编辑 `/etc/systemd/swap.conf`:\n\n```bash\nsudo vim /etc/systemd/swap.conf\n```\n\n去掉 `swapfc_enabled` 前的注释并设置为 `swapfc_enabled=1` ，保存并关闭\n\n在终端输入\n\n```bash\nsudo systemctl enable --now systemd-swap\n```\n\n以启动 `systemd-swap` 服务\n\n### **Linux 挂载 Windows 磁盘**\n\n**首先要确保设备加密和快速启动已经关闭**\n\n参考以下网址：\n\nArchwiki -- fstab\n\nhttps://wiki.archlinux.org/title/Fstab_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)\n\n#### **使用 UUID**\n\n官方推荐的方法是使用 UUID，以分别挂载 C 盘和 D 盘到 `/home/(user_name)/C` 和 `/home/(user_name)/D` 为例，在终端中输入：\n\n```bash\nlsblk -f\n```\n\n在输出结果中可以发现 Windows 的硬盘分区：\n\n```\nNAME       FSTYPE       LABEL   UUID\n├─(name_C) ntfs         C       (UUID_C)\n├─(name_D) ntfs         D       (UUID_D)\n```\n\n接着就来修改系统文件：\n\n```bash\nsudo vim /etc/fstab\n```\n\n在最后加入这两行：\n\n```\nUUID=(UUID_C)                     /home/(user_name)/C    ntfs default 0 0\nUUID=(UUID_D)                     /home/(user_name)/D    ntfs default 0 0\n```\n\n重启电脑后，即可自动挂载\n\n**如果需要格式化 C 盘或 D 盘，先从 `/etc/fstab` 中删去这两行，再操作，之后磁盘的 `UUID` 会被更改，再编辑 `/etc/fstab` ，重启挂载即可**\n\n#### **使用图形化界面**\n\n在系统应用“KDE 分区管理器”中卸载 C 盘、D 盘，右键选择编辑挂载点，编辑为 `/home/(user_name)/C` 和 `/home/(user_name)/D`，执行即可\n\n这相当于直接编辑 `/etc/fstab`，加入：\n\n```\n/dev/(name_C)                     /home/(user_name)/C    ntfs default 0 0\n/dev/(name_D)                     /home/(user_name)/D    ntfs default 0 0\n```\n\n好处是格式化磁盘后内核名称不变，依然可以挂载\n\n#### **如果 Windows 磁盘突然变成只读**\n\n**首先检查 Windows 中是否关闭了快速启动**\n\n关闭快速启动（Windows 工具 –> 控制面板 >> 电源选项 >> 选择电源按钮的功能 >> 更改当前不可用的设置 >> 关闭快速启动 >> 保存修改）并重启电脑\n\n一般来讲是 Windows 开启了快速启动，或者进行了优化磁盘等操作导致的，若关闭快速启动不能解决问题，使用下面的方法：\n\n检查占用进程：\n\n```bash\nsudo fuser -m -u /dev/(partition_name)\n```\n\n可以看到数字，就是占用目录的进程 PID，终止进程：\n\n```bash\nsudo kill (PID_number)\n```\n\n卸载磁盘分区：\n\n```bash\nsudo umount /dev/(partition_name)\n```\n\n执行硬盘 NTFS 分区修复：\n\n```bash\nsudo ntfsfix /dev/(partition_name)\n```\n\n再重新挂载即可：\n\n```bash\nsudo mount /dev/(partition_name) (mount_path)/(mount_folder)\n```\n\n如果在 Dolphin 中已经成功卸载分区，则直接执行：\n\n```bash\nsudo ntfsfix /dev/(partition_name) && sudo mount /dev/(partition_name)(mount_path)/(mount_folder)\n```\n\n### **系统分区改变导致时进入 GRUB Rescue 模式**\n\n此时会在开机时显示如下内容而无法进入选择系统的界面：\n\n```\nerror: no such partition.\nEntering rescue mode...\ngrub rescue>\n```\n\n此时执行 `ls`，显示如下：\n\n```\n((hd_number)) ((hd_number),(gpt_number))\n```\n\n其中硬盘编号 `(hd_number)` 从小到大排列（最小值为 0），分区编号 `(gpt_number)` 从大到小排列（最小值为 1）\n\n找到安装 Manjaro 的分区`((hd_number),(gpt_number))`，此时执行 `ls((hd_number),(gpt_number))`应该能看到 Manjaro 根目录下的所有文件和文件夹\n\n手动修改启动分区所在的位置：\n\n```bash\nset prefix=((hd_number),(gpt_number))/boot/grub\n```\n\n执行：\n\n```bash\ninsmod normal\nnormal\n```\n\n即可进入 GRUB 界面，从这里登录 Manjaro 系统，登录后执行：\n\n```\nsudo update-grub\n```\n\n以修复启动项\n\n### **调整文件夹名称为英文**\n\n修改 `~/.config/user-dirs.dirs`，改为：\n\n```bash\nXDG_DESKTOP_DIR=\"$HOME/Desktop\"\nXDG_DOCUMENTS_DIR=\"$HOME/Documents\"\nXDG_DOWNLOAD_DIR=\"$HOME/Downloads\"\nXDG_MUSIC_DIR=\"$HOME/Music\"\nXDG_PICTURES_DIR=\"$HOME/Pictures\"\nXDG_PUBLICSHARE_DIR=\"$HOME/Public\"\nXDG_TEMPLATES_DIR=\"$HOME/Templates\"\nXDG_VIDEOS_DIR=\"$HOME/Videos\"\n```\n\n并在 Dolphin 中按照上面的说明更改文件名\n\n### **Dolphin 在更新后删除文件/文件夹报错**\n\n如果出现以下错误：\n\n```\n无法创建输入输出后端。klauncher 回应：装入“/usr/lib/qt/plugins/kf5/kio/trash.so”时出错\n```\n\n说明 Qt 还在内存中保留着旧版 Dolphin，此时可以重启/重新登录，或执行：\n\n```bash\ndbus-launch dolphin\n```\n\n### **SONY WH-1000XM3 耳机的蓝牙连接**\n\n长按耳机电源键约 7 秒即可进入配对模式，可以在蓝牙中配对\n\n### **Logitech M590 鼠标的蓝牙连接**\n\n同一台电脑的 Windows 系统和 Manjaro 系统在鼠标上会被识别为两个设备\n\n如果 Windows 系统被识别为设备 1，需要按滚轮后的圆形按钮切换至设备 2\n\n长按圆形按钮直到灯 2 快速闪烁进入配对模式，可以在蓝牙中配对\n\n#### **如果鼠标配对后屏幕光标无法移动**\n\n一般可以直接删除设备重新配对，如果失败则按照下面步骤操作：\n\n首先要安装 `bluez-utils`：\n\n```bash\nsudo pacman -S bluez-utils\n```\n\n在终端中输入：\n\n```bash\nbluetoothctl\n```\n\n然后参考以下网站：\n\nArch Wiki -- 关于 Logitech BLE 鼠标的问题\n\nhttps://wiki.archlinux.org/index.php/Bluetooth_mouse#Problems_with_the_Logitech_BLE_mouse_(M557,_M590,_anywhere_mouse_2,_etc)\n\n### **解决用 root 登录没有声音的问题**\n\n在 `/root/.config/autostart/` 下创建一个 `pulseaudio.desktop` 文件：\n\n```bash\nsudo vim /root/.config/autostart/pulseaudio.desktop\n```\n\n写入：\n\n```bash\n[Desktop Entry]\nEncoding=UTF-8\nType=Application\nName=pulseaudio\nExec=pulseaudio --start --log-target=syslog\nStartupNotify=false\nTerminal=true\nHidden=false\n```\n\n保存退出即可\n\n### **切换图形化界面和命令行界面**\n\n登录时默认进入的是图形化界面，有时候开机后黑屏是图形化界面显示不出来所致，此时可以按快捷键 `Ctrl+Alt+Fn+(F2~F6)`进入`tty2 ~ tty6` 的任何一个命令行界面\n\n注意此时需要手动输入用户名和密码\n\n在命令行界面解决问题后，按快捷键 `Ctrl+Alt+Fn+F1` 可以转换回图形化界面\n\n### **网络设置**\n\n#### **ping 命令**\n\nIP 地址和连接情况可以通过对域名 `ping` 得到，例如：\n\n```bash\nping -c (count_number) (website_destination)\n```\n\n表示对网站域名 `(website_destination)` 发送 `(count_number)` 次 `ping` 连通请求\n\n#### **命令行连接 PKU Wi-Fi**\n\n方法一：命令行输入 `nmtui` 并按照终端上的图形界面一步一步操作\n\n方法二：使用 `nmcli`，输入：\n\n```bash\nnmcli device wifi connect PKU\n```\n\n通用的操作是：\n\n```bash\nnmcli device wifi connect (SSID) password (student_passowrd)\n```\n\n注意这里的 SSID 是 Wi-Fi 的名称（如 PKU 或 TP-LINK_XXX），不是 IP 地址或 MAC 地址\n\n#### **命令行连接 PKU VPN**\n\n此处需要一直打开终端，故推荐使用 Yakuake\n\n按 `Fn+F12` 打开 Yakuake，输入：\n\n```bash\nsudo openconnect --protocol=nc --user (student_ID) https://vpn.pku.edu.cn\n```\n\n输入密码即可连接\n\n之后可以按 `Fn+F12` 让它收起，不要关闭窗口（关闭窗口则 VPN 断开）\n\n#### **图形化界面连接 PKU Secure**\n\nWi-Fi 安全 >> 安全 >> 企业 WPA/WPA2\n\nWi-Fi 安全 >> 认证 >> 受保护的 EAP（PEAP）\n\nPEAP 版本 >> 自动\n\n内部认证 >> MSCHAPv2\n\n输入用户名、密码即可连接\n\n#### **命令行连接 PKU Secure**\n\n首先进入 `nmcli` 配置：\n\n```bash\nnmcli connection edit PKU\\ Secure\n```\n\n在 `nmcli` 界面内输入：\n\n```\nset wifi-sec.key-mgmt wpa-eap\nset ipv4.method auto\nset 802-1x.eap peap\nset 802-1x.phase2-auth mschapv2\nset 802-1x.identity (student_ID)\nset 802-1x.password (student_password)\nsave\nactivate\n```\n\n### **调整 CPU 频率（可选）**\n\n```bash\nsudo vim /etc/tlp.conf\n```\n\n若更改 CPU 频率，修改以下位置：\n\n```\nCPU_MIN_PERF_ON_AC=0\nCPU_MAX_PERF_ON_AC=100\nCPU_MIN_PERF_ON_BAT=0\nCPU_MAX_PERF_ON_BAT=30\n```\n\n若更改 CPU 睿频设置，修改以下位置：\n\n```\nCPU_BOOST_ON_AC=1\nCPU_BOOST_ON_BAT=0\n```\n\n**不需要高性能的时候可以关闭睿频，这样 CPU 的频率就会限制在 1.9 GHz 以下，大幅增加续航、减少发热**\n\n保存、关闭，在终端中输入：\n\n```bash\nsudo tlp start\n```\n\n#### **显示 CPU 频率（可选）**\n\n安装 KDE 小部件：[Intel P-state and CPU-Freq Manager](https://github.com/jsalatas/plasma-pstate)\n\n右键点击顶栏，选择“添加部件”，找到 Intel P-state and CPU-Freq Manager 并添加在顶栏即可\n\n### **禁用 baloo（可选）**\n\n`baloo` 是 KDE 的文件索引服务，能加快文件搜索的速度，但可能会时不时产生大量硬盘读写而导致图形界面卡顿。可以用下面的命令禁用之：\n\n```bash\nbalooctl disable\n```\n\n### **为 pacman 启用多线程下载（可选）**\n\n执行下面的命令下载 axel\n\n```bash\n sudo pacman -S axel\n```\n\n编辑 `/etc/pacman.conf` 文件（在第 21 行）:\n\n```\nXferCommand = /usr/bin/axel -n 10 -o %o %u\n```\n\n编辑 `/etc/makepkg.conf` 文件（在第 11-16 行）:\n\n```\nDLAGENTS=('file::/usr/bin/curl -gqC - -o %o %u'\n'ftp::/usr/bin/axel -n 10 -o %o %u'\n'http::/usr/bin/axel -n 10 -o %o %u'\n'https::/usr/bin/axel -n 10 -o %o %u'\n'rsync::/usr/bin/rsync --no-motd -z %u %o'\n'scp::/usr/bin/scp -C %u %o')\n```\n\n**注意某些软件包如 `rider` 和 `qqmusic-bin` 等下载源不支持 axel，启用多线程下载后可能会导致构建失败**\n\n### **重新开启 Secure Boot（未测试）**\n\n如果想在开启 Secure Boot 的情况下登录进 Manjaro Linux，可以使用经过微软签名的 PreLoader 或者 shim，然后在 UEFI 设置中将 Secure Boot 级别设置为 Microsoft & 3rd Party CA\n\n具体教程参考以下网址：\n\nSecure Boot -- ArchWiki\n\nhttps://wiki.archlinux.org/index.php/Unified_Extensible_Firmware_Interface/Secure_Boot#Microsoft_Windows\n\n### **Git 配置用户名、邮箱**\n\n配置用户名、邮箱：\n\n```bash\ngit config --global user.name \"(user_name)\"\ngit config --global user.email \"(user_email)\"\n```\n\nGit 使用教程参考以下网址：\n\n菜鸟教程 -- Git 教程\n\nhttps://www.runoob.com/git/git-tutorial.html\n\n### **使用 SSH 连接到 Github**\n\n推荐使用 SSH 连接到 Github，其安全性更高，访问速度较快且更加稳定\n\n配置参考以下网址：\n\nGithub Docs -- 使用 SSH 连接到 Github\n\nhttps://docs.github.com/cn/github/authenticating-to-github/connecting-to-github-with-ssh\n\n在 Linux 上主要是以下内容：\n\n#### **生成新 SSH 密钥并添加到 ssh-agent**\n\n```bash\nssh-keygen -t ed25519 -C \"(user_email)\"\neval \"$(ssh-agent -s)\"\nssh-add ~/.ssh/id_ed25519\n```\n\n第一步会提示输入安全密码，可以按 `Enter` 跳过，不影响后续操作和使用\n\n#### **新增 SSH 密钥到 GitHub 帐户**\n\n通过 `cat ~/.ssh/id_ed25519.pub` 查看公钥并复制到 Github 账户下的“设置 >> SSH and GPG keys”中\n\n#### **测试 SSH 连接**\n\n在终端中输入：\n\n```\nssh -T git@github.com\n```\n\n这一步要输入 `yes` 确定\n\n**注意 Linux 上和 Windows 上用的是不同的密钥**\n\n## **一些有用的命令总结**\n\n### **获取设备信息**\n\n#### **简要信息**\n\n在终端中输入：\n\n```bash\nscreenfetch\n```\n\n或者：\n\n```bash\nsudo inxi -b\n```\n\n#### **详细信息**\n\n在终端中输入：\n\n```bash\nsudo inxi -Fa\n```\n\n#### **命令行进程查看器**\n\n在终端中输入：\n\n```bash\nhtop\n```\n\n#### **命令行音量调节器**\n\n在终端中输入：\n\n```bash\nalsamixer\n```\n\n#### **内存大小**\n\n在终端中输入：\n\n```bash\nfree\n```\n\n#### **上一次关机的系统日志**\n\n```bash\njournalctl -rb -1\n```\n\n### **查看并转换编码**\n\n查看编码的命令为：\n\n```bash\nfile -i (file_name)\n```\n\n其中 `charset` 一栏的输出即为文件编码\n\n转换编码可以使用系统预装的 `iconv`，方法为：\n\n```bash\niconv -f (from_encoding) -t (to_encoding) (from_file_name) -o (to_file_name)\n```\n\n该方法适合对文本文件转换编码，对 ZIP 压缩包和 PDF 文件等二进制文件则无法使用\n\n`iconv` 支持的编码格式可以用 `iconv -l` 查看\n\n### **转换图片格式**\n\n批量将图片从 PNG 格式转换为 JPG 格式：\n\n```bash\nls -1 *.png | xargs -n 1 bash -c 'convert \"$0\" \"${0%.png}.jpg\"'\n```\n\n### **批量更改文件名**\n\n批量将文件名中的空格改成下划线：\n\n```bash\nfor file in *; do mv -n \"$file\" `echo $file | tr ' ' '_'`; done\n```\n\n**Linux 的内存策略可以参考这个网站：https://www.linuxatemyram.com/**\n\n### **命令行解压 ZIP 压缩包**\n\n建议使用系统预装的 `unar`，因为它可以自动检测文件编码（系统右键菜单默认的 Ark 不具备这个功能，可能导致乱码）：\n\n```bash\nunar (file_name).zip\n```\n\n### **设置命令别名**\n\n在 `~/.bashrc` 中添加一句 `alias (new_command)=(old-command)`，这样直接输入 `new_command` 即等效于输入 `old_command`\n\n## **美化**\n\n### **自定义壁纸**\n\n桌面壁纸可以在 [pling.com](https://www.pling.com/) 下载，专门为 Manjaro 定制的壁纸可以在这里找到：\n\nWallpapers Manjaro -- pling.com\n\nhttps://www.pling.com/browse/cat/309/order/latest/\n\n默认的壁纸保存位置为 `/usr/share/wallpapers/`\n\n还可以使用包管理器（pacman/sudo pacman/pamac）下载壁纸，用“添加/删除软件”或 `pamac search wallpaper` 查找\n\n右键点击桌面得到桌面菜单，点击“配置桌面和壁纸”即可选择想要的壁纸，位置建议选择“缩放并裁剪”\n\n### **添加用户图标**\n\n系统设置 >> 用户账户 >> 图像\n\n### **开机登录美化**\n\n开机与关机 >> 登录屏幕（SDDM） >> Breeze 或者 Fluent\n\n外观 >> 欢迎屏幕 >> Snowy Night Miku、Manjaro Linux Reflection Splashscreen、ManjaroLogo Black、Plasma 5 Manjaro Splashscreen White Blur\n\n**现在新设计的登录屏幕（SDDM）和欢迎屏幕已经非常美观且改进了翻译问题，最方便的方法就是登录屏幕（SDDM）选择 Breath 2，欢迎屏幕选择 Breath2 2021**\n\n#### **SDDM 时间显示调整为 24 小时制**\n\n更改 `/usr/share/sddm/themes/(theme_name)/components/Clock.qml` 或 `/usr/share/sddm/themes/(theme_name)/Clock.qml` 中的 `Qt.formatTime` 一行：\n\n```\ntext: Qt.formatTime(timeSource.data[\"Local\"][\"DateTime\"])\n```\n\n将其改为：\n\n```\ntext: Qt.formatTime(timeSource.data[\"Local\"][\"DateTime\"], \"hh:mm:ss\")\n```\n\n保存重启即可\n\n### **主题 Mac 风格美化（可选）**\n\n参考以下网址：\n\nKDE 桌面的 Mac 化\n\nhttps://www.cnblogs.com/luoshuitianyi/p/10587788.html\n\n其中 Plasma 主题、GTK 主题和图标主题分别选择：\nPlasma Theme: Mojave-CT\nGTK Theme: Mojave-light-alt [GTK2/3]\nIcon Theme: La Capitaine\n\nKDE 桌面美化指南\n\nhttps://acherstyx.github.io/2020/06/30/KDE%E6%A1%8C%E9%9D%A2%E7%BE%8E%E5%8C%96%E6%8C%87%E5%8D%97/\n\nLatte-Dock 的推荐设置：\n\n行为：位置 >> 底部，可见性 >> 自动隐藏，延迟 >> 显示 >> none\n\n外观：绝对大小 >> 96，背景大小 >> 10%\n\n**不想使用 Mac 风格主题但又想使用浅色主题时，建议使用 Manjaro 新官方主题 Breath2 2021（也有深浅搭配和深色主题可选）或 KDE 官方主题 Breeze，并将终端（Konsole 和 Yakuake）主题改为“白底黑字”，背景透明度选择 20%**\n\n#### **配置桌面小部件**\n\n右键点击桌面 >> 添加部件 >> 获取新部件 >> 下载新 Plasma 部件\n\n在这里可以下载桌面小部件，并在“添加部件”处添加，例如 Simple System Monitor\n\n#### **zsh 与 Oh-My-Zsh 配置（可选）**\n\nKonsole >> 设置 >> 编辑当前方案 >> 常规 >> 命令 >> `usr/bin/zsh`\n\n安装 Oh-My-Zsh，执行：（不推荐用包管理器安装）\n\n```bash\nbash -c \"$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)\"\n```\n\n安装插件，执行：\n\n```bash\ngit clone https://github.com/zsh-users/zsh-syntax-highlighting.git $ZSH_CUSTOM/plugins/zsh-syntax-highlightinggit clone https://github.com/zsh-users/zsh-autosuggestions $ZSH_CUSTOM/plugins/zsh-autosuggestions\n```\n\n编辑设置文件：\n\n```bash\nvim ~/.zshrc\n```\n\n选择 Oh-My-Zsh 主题：\n\n```\nZSH_THEME=\"geoffgarside\"\n```\n\n选择 Oh-My-Zsh 插件：\n\n```\nplugins=(git zsh-autosuggestions zsh-syntax-highlighting)\n```\n\n更新 Oh-My-Zsh，执行：\n\n```\nomz update\n```\n\n卸载 Oh-My-Zsh，执行:\n\n```\nuninstall_oh_my_zsh\n```\n\n**如果遇到开关机的时候报错：`\\[FAILED] failed to start pkgfile database update`，卸载 `manjaro-zsh-config`，这会卸载 `zsh` 及其所有依赖，然后重新安装 `zsh`**\n\n### **GRUB 美化**\n\n选择主题 grub2-themes ，下载地址如下：\n\nhttps://github.com/vinceliuice/grub2-themes\n\n以 Vimix grub theme （2K，黑白图标） 为例，解压后在文件夹内执行：\n\n```bash\nsudo ./install.sh -b -t vimix -i white -s 2k\n```\n\n删除多余启动条目，需要修改`/boot/grub/grub.cfg`\n\n删除整一段 `submenu 'Manjaro Linux 的高级选项'`，删除整一段 `UEFI Firmware Settings`，并将 `Windows Boot Manager (on /dev/nvme0n1p1)` 改为 `Windows`\n\n恢复默认的`/boot/grub/grub.cfg`需要输入：\n\n```bash\necho GRUB_DISABLE_OS_PROBER=false | sudo tee -a /etc/default/grub && sudo update-grub\n```\n\n### **pacman 添加吃豆人彩蛋**\n\n编辑 `/etc/pacman.conf`\n\n```bash\nsudo vim /etc/pacman.conf\n```\n\n去掉 `Color` 前面的注释，并在下一行加入：\n\n```\nILoveCandy\n```\n\n即可添加吃豆人彩蛋\n\n### **安装 KDE 的 Wayland 支持（不推荐）**\n\n与 Xorg 相比，Wayland 对触屏的支持更佳，但某些应用在 Wayland 上会有兼容性问题，目前 KDE 对 Wayland 的支持处于能用但还不太完善的状态\n\n```bash\nsudo pacman -S plasma-wayland-session\n```\n\n安装后即可在登录界面选择 Wayland 会话\n\n## **下载软件**\n\n**能用包管理器的尽量用包管理器安装！**\n\n### **PGP 密钥无法导入**\n\n如果安装软件时需要导入 PGP 密钥而发生 `gpg: 从公钥服务器接收失败：一般错误` 的问题，将 PGP 密钥复制下来并运行：\n\n```bash\ngpg --keyserver p80.pool.sks-keyservers.net --recv-keys (pgp_key)\n```\n\n再重新安装软件即可\n\n### **安装软件后在开始菜单中找不到图标**\n\n执行命令：\n\n```\nsudo update-desktop-database\n```\n\n### **语言包**\n\n系统设置 >> 语言包 >> 右上角点击“已安装的软件包”安装语言包\n\n### **Kate 插件下载**\n\n下载 Kate 插件：\n\n```bash\nsudo pacman -S aspell hspell libvoikko\n```\n\n### **字体安装**\n\nManjaro KDE 支持直接在 Dolphin 的右键菜单中安装 TTF 和 OTF 字体，但不支持 TTC 字体集，TTC 字体集可以在系统字体安装的默认文件夹 `/usr/share/fonts` 中用命令 `fc-cache -fv` 安装\n\n**注意不管是 Windows 还是 Manjaro Linux 都要将字体“为所有用户安装”，尤其是 Windows 11 右键直接安装是安装到个人用户目录 `C:\\Users\\user_name\\AppData\\Local\\Microsoft\\Windows\\Fonts` 而非系统目录 `C:\\Windows\\Fonts`**\n\n### **安装微软字体**\n\n安装方法如下：\n\n```bash\nsudo mkdir /usr/share/fonts/winfonts\nsudo cp (win-font-path)/* /usr/share/fonts/winfonts/\ncd /usr/share/fonts/winfonts/\nfc-cache -fv\n```\n\n这样就可以安装微软雅黑、宋体、黑体等字体了\n\n**注意需要排除掉 MS Gothic、Yu Gothic 和 Malgun Gothic 字体，因它们只有部分日/韩文汉字字形（与中文汉字字形一样的会被排除，最后导致部分中文汉字显示为日/韩文字形）**\n\n### **安装 Google Noto 字体**\n\n命令行安装：\n\n```bash\nsudo pacman -S noto-fonts noto-fonts-cjk\n```\n\n所有语言字体的下载地址如下：\n\nGoogle Noto Fonts\n\nhttps://www.google.com/get/noto/\n\n中文（CJK）字体的下载地址如下：\n\nhttps://www.google.com/get/noto/help/cjk/\n\n### **更改程序和终端默认中文字体**\n\n安装的 Noto Sans CJK 字体可能在某些情况下（框架未定义地区）汉字字形与标准形态不符，例如门、关、复等字字形与规范中文不符\n\n这是因为每个程序中可以设置不同的默认字体，而这些字体的属性由 fontconfig 控制，其使用顺序是据地区代码以 A-Z 字母表顺序成默认排序，由于 `ja` 在 `zh` 之前，故优先显示日文字形\n\n解决方法是手动修改字体设置文件：\n\n```bash\nsudo vim /etc/fonts/conf.d/64-language-selector-prefer.conf\n```\n\n并加入以下内容：\n\n```xml\n<?xml version=\"1.0\"?>\n<!DOCTYPE fontconfig SYSTEM \"fonts.dtd\">\n<fontconfig>\n    <alias>\n        <family>sans-serif</family>\n        <prefer>\n            <family>Noto Sans CJK SC</family>\n            <family>Noto Sans CJK TC</family>\n            <family>Noto Sans CJK HK</family>\n            <family>Noto Sans CJK JP</family>\n            <family>Noto Sans CJK KR</family>\n        </prefer>\n    </alias>\n    <alias>\n        <family>serif</family>\n        <prefer>\n            <family>Noto Serif CJK SC</family>\n            <family>Noto Serif CJK TC</family>\n            <family>Noto Serif CJK HK</family>\n            <family>Noto Serif CJK JP</family>\n            <family>Noto Serif CJK KR</family>\n        </prefer>\n    </alias>\n    <alias>\n        <family>monospace</family>\n        <prefer>\n            <family>Noto Sans Mono CJK SC</family>\n            <family>Noto Sans Mono CJK TC</family>\n            <family>Noto Sans Mono CJK HK</family>\n            <family>Noto Sans Mono CJK JP</family>\n            <family>Noto Sans Mono CJK KR</family>\n        </prefer>\n    </alias>\n</fontconfig>\n```\n\n保存退出即可\n\n**另一种处理方法是只安装简体中文字体，比如 Noto Sans SC（注意没有 CJK）**\n\n### **安装中文输入法**\n\n推荐使用 Fcitx5:\n\n```bash\nsudo pacman -S fcitx5 fcitx5-chinese-addons manjaro-asian-input-support-fcitx5 fcitx5-gtk fcitx5-qt fcitx5-configtool\n```\n\n如果无法启动输入法，在系统设置 >> 区域设置 >> 输入法 >> 添加输入法中手动添加“拼音”\n\n对应的 git 版本为：（需要使用 Arch Linux CN 源）\n\n```bash\nsudo pacman -S fcitx5-git fcitx5-chinese-addons-git manjaro-asian-input-support-fcitx5 fcitx5-gtk-git fcitx5-qt5-git fcitx5-configtool-git\n```\n\n可以添加词库：\n\n```bash\nsudo pacman -S fcitx5-pinyin-moegirl fcitx5-pinyin-zhwiki\n```\n\n一个稳定的替代版本是 Fcitx 4.2.9.8-1：\n\n```bash\nsudo pacman -S fcitx-im fcitx-configtool fcitx-cloudpinyin manjaro-asian-input-support-fcitx\n```\n\n可以配合 googlepinyin 或 sunpinyin 使用，即执行：\n\n```bash\nsudo pacman -S fcitx-googlepinyin\n```\n\n或者：\n\n```bash\nsudo pacman -S fcitx-sunpinyin\n```\n\n也可以用 `sudo pacman -S sunpinyin` 安装 Sunpinyin\n\n**安装输入法之后需要重启电脑才能生效**\n\n### **安装其它软件**\n\n以下命令中的 `pamac install` 也可以在“添加/删除软件”（即 pamac）中搜索安装，如果不是 AUR 仓库中的软件，也可以用 `sudo pacman -S` 安装\n\n```bash\npamac install geogebra stellarium typora v2ray qv2ray-dev-git vlc thunderbird qbittorrent baidunetdisk-bin\n```\n\n**这里的 qv2ray-dev-git 一定要选择 Archlinux CN 软件源的版本**\n\n#### **用 debtap 安装 `.deb` 包（不推荐）**\n\n首先要下载并更新 debtap 包：\n\n```bash\npamac install debtap\nsudo debtap -u\n```\n\n**运行 `sudo debtap -u` 时建议连接北京大学校园网**\n\n进入含有 `.deb` 安装包的文件夹，输入：\n\n```bash\nsudo debtap (package_name).deb\n```\n\n系统会询问三个问题：文件名随便写，协议写 `GPL` 即可，编辑文件直接按 `Enter` 跳过\n\n此处会生成一个 `tar.zst` 包，双击打开（右键用“软件安装程序”打开）即可安装\n\n### **安装 TeX Live**\n\n推荐从 ISO 安装 TeX Live\n\n首先在[清华大学镜像站](https://mirrors.tuna.tsinghua.edu.cn/CTAN/systems/texlive/Images/)或者[上海交大镜像站](https://mirrors.sjtug.sjtu.edu.cn/ctan/systems/texlive/Images/)下载 TeX Live ISO，文件名为 `texlive.iso`（和 `texlive(year).iso`、`texlive(year)-(date).iso` 是一致的）\n\n打开终端，运行：\n\n```bash\nsudo mount -t iso9660 -o ro,loop,noauto (texlive_path)/texlive.iso /mnt\n```\n\n#### **使用图形界面安装**\n\n首先要检查是否安装 tcl 和 tk：\n\n```bash\npamac install tcl tk\n```\n\n进入镜像文件夹，运行：\n\n```bash\nsudo perl install-tl -gui\n```\n\n即可在图形界面下载 TeX Live（如果不加 `sudo` 则只能将其安装到 `/home/(user_name)/` 下的文件夹且无法勾选 Create symlinks in standard directories: 一项），高级设置需要点击左下角的 Advanced 按钮\n\n**记住勾选 Create symlinks in standard directories 一项（自动添加到 PATH），Specify directories 选择默认文件夹即可，之后不需要自己添加 PATH**\n\n#### **使用命令行界面安装**\n\n进入镜像文件夹，运行：\n\n```bash\nsudo perl install-tl -gui text\n```\n\n用大写字母命令控制安装：\n\n```\nD >> 1 >> 输入要安装 TeX Live 的位置（TEXDIR） >> R\nO >> L >> 都选择默认位置（按 Enter） >> R\nI\n```\n\nTEXDIR 建议选择 `/home/(user_name)/` 下的文件夹以方便查看和修改，TEXMFLOCAL 会随 TEXDIR 自动更改\n\nCTAN 镜像源可以使用 TeX Live 管理器 tlmgr 更改，更改到清华大学镜像需要在命令行中执行：\n\n```bash\nsudo tlmgr option repository https://mirrors.tuna.tsinghua.edu.cn/CTAN/systems/texlive/tlnet\nsudo tlmgr --repository http://www.texlive.info/tlgpg/ install tlgpg\n```\n\n可以运行 `tex --version` 检查是否安装成功，若成功应显示 TeX 的版本号、TeX Live 的版本号和版权信息\n\n还可以运行 `tlmgr --version` 和 `texdoc (package_name)` （选择常见的宏包名称如 `texdoc ctex`）检查是否安装成功\n\n### **TeXstudio 安装与配置（可选）**\n\n安装 TeXstudio：\n\n```bash\npamac install texstudio\n```\n\n帮助 >> 检查 LaTeX 安装信息\n\n如果能检测到 LaTeX，说明 TeX Live 安装成功，开始设置\n\n选项 >> 设置 TeXstudio\n\n首先在左下角勾选“显示高级选项”\n\n常规 >> 会话 >> 取消勾选“启动时恢复上一次会话”（可选）\n\n菜单 >> 数学 >> `\\frac{}{}` >> `\\frac{%|}{}`\n\n菜单 >> 数学 >> `\\frac{}{}` >> `\\frac{%|}{}`\n\n快捷键 >> 数学 >> 数学字体格式 >> 罗马字体 >> 当前快捷键 >> `Alt+Shift+R`\n\n编辑器 >> 缩进模式 >> 自动增加或减少缩进\n\n编辑器 >> 缩进模式 >> 勾选“将缩进替换为空格”和“将文本中的制表符（Tab）替换为空格”\n\n编辑器 >> 显示行号 >> 所有行号\n\n编辑器 >> 取消勾选“行内检查”\n\n高级编辑器 >> 自动保存所有文件 >> 1 分钟\n\n高级编辑器 >> 破解/变通 >> 取消勾选“自动选择最佳显示选项”，并勾选“禁用字符宽度缓存”和“关闭固定位置模式”\n\n补全 >> 取消勾选“输入参数”\n\n### **Thunderbird 配置**\n\n#### **Thunderbird 首选项配置**\n\n进入首选项界面调整显示：\n\n首选项 >> 常规 >> Thunderbird 起始页 >> 清空并取消勾选\n\n首选项 >> 常规 >> 默认搜索引擎 >> 改为 Bing\n\n首选项 >> 隐私与安全 >> 邮件内容 >> 勾选“允许消息中的远程内容”\n\n右键点击上方邮件工具栏，选择“自定义”，自行配置即可\n\n#### **Thunderbird 帐号配置**\n\n点击邮箱帐号，配置“账户设置”如下：\n\n服务器 >> 服务器设置 >> 每隔 1 分钟检查一次新消息\n\n服务器 >> 服务器设置 >> 在删除消息时 >> 立即删除\n\n### **Python 安装与配置**\n\nManjaro 预装了 Python，但没有安装包管理器，可以使用 `pip` 或 `conda`（即安装 Miniconda）\n\n#### **pip 安装**\n\n在终端中输入：\n\n```bash\ncurl https://bootstrap.pypa.io/get-pip.py -o get-pip.py && python get-pip.py\n```\n\n即可安装 pip，此时不建议安装 conda，pip 下载包的命令是：\n\n```bash\npip install (package_name)\n```\n\n这里不建议安装 spyder 和 jupyter notebook，安装最基本的包即可：\n\n```bash\npip install numpy scipy matplotlib astropy autopep8\n```\n\n#### **Miniconda 安装与配置**\n\nMiniconda 是 Anaconda 的精简版，推荐使用 Miniconda\n\n下载地址如下：\n\nMiniconda -- Conda documentation\n\nhttps://docs.conda.io/en/latest/miniconda.html\n\n或者在[清华大学镜像站](https://mirrors.tuna.tsinghua.edu.cn/#)点击右侧的“获取下载链接”按钮，在“应用软件” >> Conda 里面选择\n\n安装过程参考以下网址：（Miniconda 和 Anaconda 的安装步骤相同）\n\nAnaconda Documentation -- Installing on Linux\n\nhttps://docs.anaconda.com/anaconda/install/linux/\n\n输入以下命令：\n\n```bash\nvim ~/.condarc\n```\n\n修改 `.condarc` 以使用清华大学镜像源：\n\n```\nchannels:\n  - defaults\nshow_channel_urls: true\ndefault_channels:\n  - https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/main\n  - https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/r\n  - https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/msys2\ncustom_channels:\n  conda-forge: https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud\n  msys2: https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud\n  bioconda: https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud\n  menpo: https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud\n  pytorch: https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud\n  simpleitk: https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud\n```\n\n若不用特定的镜像源，改为：\n\n```\nchannels:\n  - defaults\nssl_verify: true\n```\n\n下载所需要的包：\n\n```bash\nconda install numpy scipy matplotlib astropy spyder jupyter\n```\n\n各个操作系统平台上可下载的包可以在以下网站查询：\n\nAnaconda Documentation -- Anaconda Package Lists\n\nhttps://docs.anaconda.com/anaconda/packages/pkg-docs/\n\n#### **Conda 常用命令**\n\n下载包：\n\n```bash\nconda install (package_name)\n```\n\n下载特定版本的包：\n\n```bash\nconda install (package_name)=(version_number)\n```\n\n更新包：\n\n```bash\nconda update (package_name)\n```\n\n更新所有包：\n\n```bash\nconda update --all\n```\n\n恢复之前的版本：\n\n```bash\nconda list --revisions\nconda install --revision (revision_number)\n```\n\n**如果回滚到早期版本（`revision_number` 较小）之后又想回到某个高版本（`revision_number` 较大），必须要把两个版本中的版本都装一遍**\n\n删除所有旧版本的包：\n\n```bash\nconda clean -p\n```\n\n列出所有下载的包：\n\n```bash\nconda list\n```\n\n#### **Spyder 配置**\n\n通用 >> 显示器分辨率 >> 自定义高分辨率缩放 >> 1.0\n\n外观 >> 语法高亮主题 >> IDLE\n\n编辑选定的方案：\n\n文本：\n\n```\n普通文本 #000000\n注释：#999999, B\n字符串：#00aa00\n数值：#aa0000\n关键字：#ff5500, B\n内置：#990099\n定义：#0000ff\n实例：#ff55ff, B\n```\n\n高亮：\n\n```\n当前 Cell：#ffaaff\n当前行：#aaffff\n事件：#ffff00\n匹配圆括号：#99ff99\n不匹配圆括号：#ff9999\n链接：#55ff00\n```\n\n编辑器 >> 勾选“显示标签栏”、“显示缩进指导”、“显示行号”、“高亮显示当前行”、“高亮显示当前 Cell”，并把“高亮延迟时间”设定为 100 毫秒\n\n用 Spyder 打开某个文件需要在终端中输入：\n\n```bash\nspyder (file_path)/(file_name)\n```\n\n**目前 Spyder 还不支持 Fcitx/Fcitx5 输入中文字符**\n\n### **Vim 安装插件**\n\n执行：\n\n```bash\ngit clone (github_repository_URL) ~/.vim/pack/(plugin_name)/start/(plugin_name)\nvim -u NONE -c \"helptags ~/.vim/pack/(plugin_name)/start/(plugin_name)/doc\" -c q\n```\n\n### **Visual Studio Code 安装与配置**\n\n#### **Visual Studio Code 安装**\n\n发行版维护者从开源代码构建的版本，可以用 `code` 命令打开（缺点是图标被重新设计过，且更新落后于微软官方版）：\n\n```bash\npamac install code\n```\n\n微软官方的二进制包（包含部分私有的组件），同样可以用 `code` 命令打开（如果不介意私有组件而且不习惯 Code - OSS 的图标，个人推荐首选此项）：\n\n```bash\npamac install visual-studio-code-bin\n```\n\n内测版本：\n\n```bash\npamac install visual-studio-code-insiders\n```\n\n第三方发布的从开源代码构建的二进制包：\n\n```bash\npamac install vscodium-bin\n```\n\n从最新的开源代码构建：\n\n```bash\npamac install code-git\n```\n\n下载扩展：Python（会自动下载 Pylance、Jupyter 等扩展），Markdown All in One，LaTeX Workshop，C/C++，Rainbow Brackets，Prettier - Code formatter\n\n扩展保存在 `~/.vscode/extensions/` 文件夹内\n\n#### **Visual Studio Code 图标更改（可选）**\n\n如果图标美化后 Visual Studio Code 图标变成圆形，想恢复原图标，更改路径如下：\n\n程序启动器 >> 编辑应用程序 >> Visual Studio Code >> 点击图标更改 >> 其他图标\n\n其图标位置在 `/usr/share/icons/visual-studio-code.png`\n\n#### **Visual Studio Code 缩放比例**\n\n放大比例：`Ctrl+=`\n\n缩小比例：`Ctrl+-`\n\n#### **Visual Studio Code 设置快捷键**\n\n若要更改全局快捷键，设置文件在 `~/.config/Code/User/keybinding.json`，可以在 Visual Studio Code 中按 `Ctrl+K Ctrl+S` 开启设置\n\n#### **Latex Workshop 插件设置**\n\n若想在 LaTeX Workshop 里面添加 `\\frac{}{}` 命令的快捷键为 `Ctrl+M Ctrl+F`，则添加一段：\n\n```json\n{\n    \"key\": \"ctrl+m ctrl+f\",\n    \"command\": \"editor.action.insertSnippet\",\n    \"args\": { \"snippet\": \"\\\\frac{$1}{$2}$0\" },\n    \"when\": \"editorTextFocus && !editorReadonly && editorLangId =~ /latex|rsweave|jlweave/\"\n}\n```\n\n若要更改行间公式 `\\[\\]` 的自动补全（公式独占一行），在 `~/.vscode/extensions/james-yu.latex-workshop-(version_number)/data/commands.json` 中找到：\n\n```json\n\"[\": {\n    \"command\": \"[\",\n    \"snippet\": \"[${1}\\\\]\",\n    \"detail\": \"display math \\\\[ ... \\\\]\"\n  },\n```\n\n改为：\n\n```json\n\"[\": {\n    \"command\": \"[\",\n    \"snippet\": \"[\\n    ${1}\\n\\\\]\",\n    \"detail\": \"display math \\\\[ ... \\\\]\"\n  },\n```\n\n重启 Visual Studio Code 即可生效\n\n#### **Rainbow Brackets 插件设置**\n\n更改 Rainbow Brackets 的括号配色可以修改文件 `~/.vscode/extensions/2gua.rainbow-brackets-0.0.6/out/src/extension.js`：\n\n```js\nvar roundBracketsColor = [\"#ff5500\", \"#cc0066\", \"#00aa66\", \"#ff9999\"];\nvar squareBracketsColor = [\"#33ccff\", \"#8080ff\", \"#0077aa\"];\nvar squigglyBracketsColor = [\"#aa00aa\", \"#009900\", \"#996600\"];\n```\n\n重启 Visual Studio Code 即可生效\n\n### **Typora 美化**\n\n#### **源代码模式**\n\n更改 `/usr/share/typora/resources/style/base-control.css`：（在 Windows 中则是 `C:\\Program Files\\Typora\\resources\\style\\base-control.css`）\n\n找到 `.CodeMirror.cm-s-typora-default div.CodeMirror-cursor` 一行，将光标宽度改为 `1px`，颜色改为 `#000000`\n\n找到 `#typora-source .CodeMirror-lines` 一行，将 `max-width` 改为 `1200px`\n\n更改 `/usr/share/typora/resources/style/base.css`：（在 Windows 中则是 `C:\\Program Files\\Typora\\resources\\style\\base.css`）\n\n找到 `:root` 一行，将 `font-family` 改成自己想要的字体\n\n#### **主题渲染模式**\n\n在 `/home/(user_name)/.config/Typora/themes/` 中自己写一个 CSS 文件（可以复制其中一个默认主题，重命名后更改）\n\n找到 `body` 一行，将 `font-family` 改成自己想要的字体\n\n找到 `tt` 一行，将 `font-family` 改成自己想要的等宽字体（`monospace`）\n\n### **SAOImageDS9 安装**\n\n推荐选择二进制包 `ds9-bin`：\n\n```bash\npamac install ds9-bin\n```\n\n### **Github Desktop 安装（可选）**\n\n推荐选择二进制包 `github-desktop-bin`：\n\n```bash\npamac install github-desktop-bin\n```\n\n登录时要创建一个密钥环，密钥设为 Github 密码即可\n\n### **WPS 安装（可选）**\n\n运行：\n\n```bash\npamac install wps-office-cn wps-office-mui-zh-cn ttf-wps-fonts\n```\n\n### **微信安装**\n\n极简版（原生适配高分辨率屏幕，不需要 wine/deepin-wine 即可运行；但是功能较少，不支持截屏和“订阅号消息”，且对大文件传输的支持不佳）：\n\n```bash\npamac install wechat-uos\n```\n\n功能较多，和最新的 Windows 电脑版同步更新，但依赖 deepin-wine，且暂不支持“截屏时隐藏当前窗口”的版本：\n\n```bash\npamac install deepin-wine-wechat\n```\n\n#### **deepin-wine-wechat 高分辨率适配调整**\n\n用命令 `/opt/apps/com.qq.weixin.deepin/files/run.sh winecfg` 调出 Wine Configuration，对于 200% 的放大率：\n\nGraphics >> Screen Resolution >> 192 dpi\n\n其余基于 Deepin Wine 的软件（如腾讯会议）也是类似的处理方法，将 `com.qq.weixin.deepin` 换成对应的文件夹名称即可（都在 `/opt/apps/` 目录下）\n\n### **会议软件安装**\n\n腾讯会议：\n\n```bash\npamac install com.tencent.deepin.meeting\n```\n\n高分辨率适配调整：\n\n用命令 `/opt/apps/com.tencent.meeting.deepin/files/run.sh winecfg` 调出 Wine Configuration，对于 200% 的放大率：\n\nGraphics >> Screen Resolution >> 192 dpi\n\n### **音乐软件安装**\n\n#### **网易云音乐**\n\n```bash\npamac install netease-cloud-music\n```\n\n#### **QQ 音乐**\n\n```bash\npamac install qqmusic-bin\n```\n\n默认是暗色主题，右上角皮肤键（衣服图案）可以更改为亮色主题\n\n### **Geant4 安装**\n\n#### **从源代码安装 Geant4**\n\n从官网上下载源代码压缩包：\n\nGeant4 -- Download\n\nhttps://geant4.web.cern.ch/support/download\n\n进入解压后的文件夹，若要将 Geant4 安装在 `(Geant4_directory)`，例如 `~/Geant4`，执行：\n\n```bash\nmkdir build\ncd ./build\ncmake -DCMAKE_INSTALL_PREFIX=(Geant4_directory) -DGEANT4_USE_OPENGL_X11=ON -DGEANT4_USE_QT=ON -DGEANT4_INSTALL_DATA=ON -DGEANT4_BUILD_MULTITHREADED=ON ..\nmake -j8\nmake install -j8\n```\n\n之后在 `~/.bashrc` 中添加一行：\n\n```bash\nsource (Geant4_directory)/bin/geant4.sh\n```\n\n#### **检验是否安装成功**\n\n打开 `(Geant4_directory)/share/Geant4-(version_number)/examples/basic/B1`，执行：\n\n```bash\nmkdir build\ncd ./build\ncmake ..\nmake -j8\n./exampleB1\n```\n\n如果出现图形交互界面，说明安装成功\n\n### **Surface：能用上触控笔的软件（可选）**\n\n#### **绘画**\n\n```bash\npamac install krita\n```\n\n#### **手写笔记**\n\n可以选择 Xournal++ 或者 Write\n\n```bash\npamac install xournalpp\npamac install write_stylus\n```\n\n### **Surface：屏幕键盘（可选）**\n\n目前最受欢迎的屏幕键盘应该是 OnBoard\n\n```bash\npamac install onboard\n```\n\n但 OnBoard 在 Wayland 上无法使用。如果需要在 Wayland 会话中使用屏幕键盘，推荐安装 CellWriter\n\n```bash\npamac install cellwriter\n```\n\n## **参考资料**\n\nBitLocker 恢复密钥\n\nhttps://account.microsoft.com/devices/recoverykey?refd=account.microsoft.com\n\nWindows 10 如何关闭快速启动\n\nhttps://jingyan.baidu.com/article/ca00d56c7a40e6e99febcf4f.html\n\n创建和使用 Surface 的 USB 恢复驱动器\n\nhttps://support.microsoft.com/zh-cn/help/4023512/surface-creating-and-using-a-usb-recovery-drive\n\n下载 Surface 的恢复映像\n\nhttps://support.microsoft.com/zh-cn/surfacerecoveryimage\n\n下载 Windows 10 光盘映像\n\nhttps://www.microsoft.com/zh-cn/software-download/windows10ISO\n\n如何使用 Surface UEFI\n\nhttps://support.microsoft.com/zh-cn/help/4023531/surface-how-to-use-surface-uefi\n\nWin 10 环境下安装 Manjaro KDE（双系统）\n\nhttps://www.cnblogs.com/Jaywhen-xiang/p/11561661.html\n\nManjaro 20 KDE 配置心得\n\nhttps://blog.csdn.net/weixin_40293491/article/details/107526553\n\nManjaro 安装体验小结\n\nhttps://zhuanlan.zhihu.com/p/76608451\n\nManjaro 安装后你需要这样做\n\nhttps://www.cnblogs.com/haohao77/p/9034499.html#11-%E9%85%8D%E7%BD%AE%E5%AE%98%E6%96%B9%E6%BA%90\n\nManjaro Wiki -- Pacman Overview\n\nhttps://wiki.manjaro.org/index.php/Pacman_Overview\n\nArchWiki -- Pacman\n\nhttps://wiki.archlinux.org/index.php/Pacman\n\nManjaro Wiki -- Pamac\n\nhttps://wiki.manjaro.org/index.php/Pamac\n\nGitHub -- sudo pacman\n\nhttps://github.com/Jguer/sudo pacman\n\nManjaro Wiki -- Manjaro Hardware Detection Overview\n\nhttps://wiki.manjaro.org/index.php/Manjaro_Hardware_Detection_Overview\n\nManjaro Wiki -- Configure Graphics Cards\n\nhttps://wiki.manjaro.org/index.php/Configure_Graphics_Cards\n\nManjaro Wiki -- Manjaro Kernels\n\nhttps://wiki.manjaro.org/index.php/Manjaro_Kernels\n\nArchWiki -- Sudo (简体中文)\n\nhttps://wiki.archlinux.org/index.php/Sudo_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)\n\nManjaro Wiki -- Switching Branches\n\nhttps://wiki.manjaro.org/index.php?title=Switching_Branches\n\n在 Mac 上用 Openconnect 连接 Pulse Secure VPN\n\nhttps://blog.yangl1996.com/post/use-openconnect-to-connect-to-pulse-secure-on-mac/\n\n双系统下 Ubuntu 读写/挂载 Windows 中的硬盘文件 + 解决文件系统突然变成只读\n\nhttps://jakting.com/archives/ubuntu-rw-windows-files.html\n\n修改 hosts 解决 GitHub 访问失败\n\nhttps://zhuanlan.zhihu.com/p/107334179\n\nManjaro Linux Forum -- Connect to internet from command-line as a beginner\n\nhttps://forum.manjaro.org/t/howto-connect-to-internet-from-command-line-as-a-beginner/\n\nArch Wiki -- XDG user directories\n\nhttps://wiki.archlinux.org/index.php/XDG_user_directories\n\nArch Wiki -- Cinnamon\n\nhttps://wiki.archlinux.org/index.php/Cinnamon#Installation\n\nArch Wiki -- Intel Graphics\n\nhttps://wiki.archlinux.org/index.php/Intel_graphics#Installation\n\nKDE Community -- Plasma 5.9 Errata\n\nhttps://community.kde.org/Plasma/5.9_Errata#Intel_GPUs\n\nArchWiki -- Baloo\n\nhttps://wiki.archlinux.org/index.php/Baloo\n\nArch Wiki -- 关于 Logitech BLE 鼠标的问题\n\nhttps://wiki.archlinux.org/index.php/Bluetooth_mouse#Problems_with_the_Logitech_BLE_mouse_(M557,_M590,_anywhere_mouse_2,_etc)\n\nLinux-Surface -- Installation and Setup\n\nhttps://github.com/linux-surface/linux-surface/wiki/Installation-and-Setup\n\nArch Wiki -- System time（简体中文）\n\nhttps://wiki.archlinux.org/index.php/System_time_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)\n\nKDE 桌面的 Mac 化\n\nhttps://www.cnblogs.com/luoshuitianyi/p/10587788.html\n\nKDE 桌面美化指南\n\nhttps://acherstyx.github.io/2020/06/30/KDE%E6%A1%8C%E9%9D%A2%E7%BE%8E%E5%8C%96%E6%8C%87%E5%8D%97/\n\nOh-My-Zsh 及主题、插件的安装与配置\n\nhttps://www.cnblogs.com/misfit/p/10694397.html\n\nLinux GRUB 删除多余启动条目\n\nhttps://blog.csdn.net/JackLiu16/article/details/80383969\n\nAUR 镜像使用帮助\n\nhttps://mirrors.tuna.tsinghua.edu.cn/help/AUR/\n\nTUNA NTP (网络授时) 服务使用说明\n\nhttps://tuna.moe/help/ntp/\n\nSJTUG 软件源镜像服务\n\nhttps://mirrors.sjtug.sjtu.edu.cn/#/\n\nManjaro 为包管理器 pacman 和 yaourt/sudo pacman 添加多线程下载\n\nhttps://blog.csdn.net/dc90000/article/details/101752743?utm_medium=distribute.wap_relevant.none-task-blog-OPENSEARCH-6.nonecase&depth_1-utm_source=distribute.wap_relevant.none-task-blog-OPENSEARCH-6.nonecase\n\nArchWiki -- Microsoft fonts（简体中文）\n\nhttps://wiki.archlinux.org/index.php/Microsoft_fonts_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)\n\nArchlinux 使用 Windows 字体及相关配置\n\nhttps://blog.csdn.net/sinat_33528967/article/details/93380729\n\nArchWiki -- Fcitx5 (简体中文)\n\nhttps://wiki.archlinux.org/index.php/Fcitx5_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)\n\nArchived Manjaro Forum -- 比较几种中文输入法后，我最终选择了 sunpinyin + cloudpinyin 组合\n\nhttps://archived.forum.manjaro.org/t/sunpinyin-cloudpinyin/114282\n\nAcquiring TeX Live as an ISO image\n\nhttps://www.tug.org/texlive/acquire-iso.html\n\nTeX Live - Quick install\n\nhttps://www.tug.org/texlive/quickinstall.html\n\nTeX Live Documentation -- TeXLive Installation\n\nhttps://www.tug.org/texlive/doc/texlive-en/texlive-en.html#installation\n\nFont size of mailbox is too small\n\nhttps://support.mozilla.org/zh-CN/questions/1297871\n\nAnaconda Documentation -- Installing on Linux\n\nhttps://docs.anaconda.com/anaconda/install/linux/\n\n恢复 Anaconda 环境, 卸载 Anaconda, 重装 Anaconda\n\nhttps://blog.csdn.net/wangweiwells/article/details/88374361\n\nGeant4 -- Building and Installing from Source\n\nhttps://geant4-userdoc.web.cern.ch/UsersGuides/InstallationGuide/html/installguide.html\n\nGeant4 -- Postinstall Setup\n\nhttps://geant4-userdoc.web.cern.ch/UsersGuides/InstallationGuide/html/postinstall.html\n\nGeant4 基础 -- 准备与安装\n\nhttps://zhuanlan.zhihu.com/p/135917392\n\nLinux ate my RAM!\n\nhttps://www.linuxatemyram.com/\n","slug":"Manjaro-KDE-Installation","published":1,"updated":"2021-11-04T16:32:54.334Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckvl6t11k0007jbn3e0v161i8","content":"<h1 id=\"在-ThinkPad-X13-2021-Intel-Surface-Pro-6-上安装-Manjaro-21-KDE-Plasma-Windows-11-双系统的指南\"><a href=\"#在-ThinkPad-X13-2021-Intel-Surface-Pro-6-上安装-Manjaro-21-KDE-Plasma-Windows-11-双系统的指南\" class=\"headerlink\" title=\"在 ThinkPad X13 2021 Intel/Surface Pro 6 上安装 Manjaro 21 KDE Plasma + Windows 11 双系统的指南\"></a><strong>在 ThinkPad X13 2021 Intel/Surface Pro 6 上安装 Manjaro 21 KDE Plasma + Windows 11 双系统的指南</strong></h1><p>ThinkPad 系统信息：</p>\n<figure class=\"highlight apache\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs apache\"><span class=\"hljs-attribute\">OS</span>: Manjaro <span class=\"hljs-number\">21</span>.<span class=\"hljs-number\">2</span>.<span class=\"hljs-number\">0</span> Qonos<br><span class=\"hljs-attribute\">Kernel</span>: x<span class=\"hljs-number\">86</span>_<span class=\"hljs-number\">64</span> Linux <span class=\"hljs-number\">5</span>.<span class=\"hljs-number\">14</span>.<span class=\"hljs-number\">13</span>-<span class=\"hljs-number\">1</span>-MANJARO<br><span class=\"hljs-attribute\">Shell</span>: bash <span class=\"hljs-number\">5</span>.<span class=\"hljs-number\">1</span>.<span class=\"hljs-number\">8</span><br><span class=\"hljs-attribute\">Resolution</span>: <span class=\"hljs-number\">2560</span>x<span class=\"hljs-number\">1600</span><br><span class=\"hljs-attribute\">DE</span>: KDE <span class=\"hljs-number\">5</span>.<span class=\"hljs-number\">87</span>.<span class=\"hljs-number\">0</span> / Plasma <span class=\"hljs-number\">5</span>.<span class=\"hljs-number\">23</span>.<span class=\"hljs-number\">1</span><br><span class=\"hljs-attribute\">WM</span>: KWin<br><span class=\"hljs-attribute\">GTK</span> Theme: Breeze<span class=\"hljs-meta\"> [GTK2/3]</span><br><span class=\"hljs-attribute\">Icon</span> Theme: breath<span class=\"hljs-number\">2</span><br><span class=\"hljs-attribute\">CPU</span>: <span class=\"hljs-number\">11</span>th Gen Intel Core i<span class=\"hljs-number\">7</span>-<span class=\"hljs-number\">1165</span>G<span class=\"hljs-number\">7</span> @ <span class=\"hljs-number\">8</span>x <span class=\"hljs-number\">4</span>.<span class=\"hljs-number\">7</span>GHz<br><span class=\"hljs-attribute\">GPU</span>: Mesa Intel(R) Xe Graphics (TGL GT<span class=\"hljs-number\">2</span>)<br></code></pre></td></tr></table></figure>\n<p>Surface 系统信息：</p>\n<figure class=\"highlight apache\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs apache\"><span class=\"hljs-attribute\">OS</span>: Manjaro <span class=\"hljs-number\">21</span>.<span class=\"hljs-number\">1</span>.<span class=\"hljs-number\">1</span> Pahvo<br><span class=\"hljs-attribute\">Kernel</span>: x<span class=\"hljs-number\">86</span>_<span class=\"hljs-number\">64</span> Linux <span class=\"hljs-number\">5</span>.<span class=\"hljs-number\">14</span>.<span class=\"hljs-number\">0</span>-<span class=\"hljs-number\">0</span>-MANJARO/x<span class=\"hljs-number\">86</span>_<span class=\"hljs-number\">64</span> Linux <span class=\"hljs-number\">5</span>.<span class=\"hljs-number\">13</span>.<span class=\"hljs-number\">13</span>-arch<span class=\"hljs-number\">1</span>-<span class=\"hljs-number\">3</span>-surface<br><span class=\"hljs-attribute\">Shell</span>: bash <span class=\"hljs-number\">5</span>.<span class=\"hljs-number\">1</span>.<span class=\"hljs-number\">8</span><br><span class=\"hljs-attribute\">Resolution</span>: <span class=\"hljs-number\">2736</span>x<span class=\"hljs-number\">1824</span><br><span class=\"hljs-attribute\">DE</span>: KDE <span class=\"hljs-number\">5</span>.<span class=\"hljs-number\">85</span>.<span class=\"hljs-number\">0</span> / Plasma <span class=\"hljs-number\">5</span>.<span class=\"hljs-number\">22</span>.<span class=\"hljs-number\">5</span><br><span class=\"hljs-attribute\">WM</span>: KWin<br><span class=\"hljs-attribute\">GTK</span> Theme: Breath<span class=\"hljs-meta\"> [GTK2/3]</span><br><span class=\"hljs-attribute\">Icon</span> Theme: breath<span class=\"hljs-number\">2</span><br><span class=\"hljs-attribute\">CPU</span>: Intel Core i<span class=\"hljs-number\">5</span>-<span class=\"hljs-number\">8250</span>U @ <span class=\"hljs-number\">8</span>x <span class=\"hljs-number\">3</span>.<span class=\"hljs-number\">4</span>GHz<br><span class=\"hljs-attribute\">GPU</span>: Mesa Intel(R) UHD Graphics <span class=\"hljs-number\">620</span> (KBL GT<span class=\"hljs-number\">2</span>)<br></code></pre></td></tr></table></figure>\n<p><strong>说明：Surface 专有部分自 2021.9.5 起不再更新，内核终止于 x86_64 Linux 5.14.0-0-MANJARO/x86_64 Linux 5.13.13-arch1-3-surface</strong></p>\n<h2 id=\"Windows-的准备工作\"><a href=\"#Windows-的准备工作\" class=\"headerlink\" title=\"Windows 的准备工作\"></a><strong>Windows 的准备工作</strong></h2><h3 id=\"为-Manjaro-系统分区\"><a href=\"#为-Manjaro-系统分区\" class=\"headerlink\" title=\"为 Manjaro 系统分区\"></a><strong>为 Manjaro 系统分区</strong></h3><p>右键点击开始菜单，选择”磁盘管理”，分出一块空分区，建议不小于 64GB</p>\n<h3 id=\"关闭快速启动\"><a href=\"#关闭快速启动\" class=\"headerlink\" title=\"关闭快速启动\"></a><strong>关闭快速启动</strong></h3><p>Windows 工具 &gt;&gt; 控制面板 &gt;&gt; 电源选项 &gt;&gt; 选择电源按钮的功能 &gt;&gt; 更改当前不可用的设置 &gt;&gt; 关闭快速启动 &gt;&gt; 保存修改</p>\n<h3 id=\"ThinkPad-UEFI-设置\"><a href=\"#ThinkPad-UEFI-设置\" class=\"headerlink\" title=\"ThinkPad: UEFI 设置\"></a><strong>ThinkPad: UEFI 设置</strong></h3><p>启动 ThinkPad 时按 <code>Enter</code> 打断正常开机，然后按下 <code>Fn+Esc</code> 解锁 <code>Fn</code> 按钮，再按 <code>F1</code> 进入 UEFI 设置</p>\n<p>Security &gt;&gt; Secure Boot &gt;&gt; Off</p>\n<h3 id=\"Surface-UEFI-设置\"><a href=\"#Surface-UEFI-设置\" class=\"headerlink\" title=\"Surface: UEFI 设置\"></a><strong>Surface: UEFI 设置</strong></h3><p>关闭 Surface，然后等待大约 10 秒钟以确保其处于关闭状态</p>\n<p>长按 Surface 上的调高音量按钮，同时按下再松开电源按钮</p>\n<p>屏幕上会显示 Microsoft 或 Surface 徽标，继续按住调高音量按钮，显示 UEFI 屏幕后，松开此按钮</p>\n<p>Security &gt;&gt; Secure Boot &gt;&gt; Disabled（第三个选项）</p>\n<p>Boot Configuration &gt;&gt; Configure boot device order 中可以调整和删除启动顺序</p>\n<p>具体参考下列网址：</p>\n<p>如何使用 Surface UEFI</p>\n<p><a href=\"https://support.microsoft.com/zh-cn/surface/%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8-surface-uefi-df2c8942-dfa0-859d-4394-95f45eb1c3f9\">https://support.microsoft.com/zh-cn/surface/%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8-surface-uefi-df2c8942-dfa0-859d-4394-95f45eb1c3f9</a></p>\n<h3 id=\"删除多余的-Windows-启动项\"><a href=\"#删除多余的-Windows-启动项\" class=\"headerlink\" title=\"删除多余的 Windows 启动项\"></a>删除多余的 Windows 启动项</h3><p>如果在电脑上装有多个 Windows，则系统只会选择其中一个在 Windows Boot Manager 中启动，若要删除多余的启动项，在 Windows 的“系统配置”（搜索框中输入 <code>msconfig</code> 或在“Windows 工具”中选择）的“引导”页面即可删除</p>\n<h3 id=\"制作启动盘\"><a href=\"#制作启动盘\" class=\"headerlink\" title=\"制作启动盘\"></a><strong>制作启动盘</strong></h3><h4 id=\"下载系统-ISO-镜像\"><a href=\"#下载系统-ISO-镜像\" class=\"headerlink\" title=\"下载系统 ISO 镜像\"></a><strong>下载系统 ISO 镜像</strong></h4><p>从 Manjaro 官网上下载：</p>\n<p><a href=\"https://manjaro.org/downloads/official/kde/\">https://manjaro.org/downloads/official/kde/</a> （KDE Plasma 版本）</p>\n<p><a href=\"https://manjaro.org/get-manjaro/\">https://manjaro.org/get-manjaro/</a> （所有官方版本）</p>\n<p>或者在 Github 上下载：</p>\n<p><a href=\"https://github.com/manjaro-plasma/download/releases\">https://github.com/manjaro-plasma/download/releases</a> （KDE Plasma 版本）</p>\n<p><a href=\"https://github.com/manjaro/release-review/releases\">https://github.com/manjaro/release-review/releases</a> （所有官方版本）</p>\n<h4 id=\"刻录-USB-启动盘\"><a href=\"#刻录-USB-启动盘\" class=\"headerlink\" title=\"刻录 USB 启动盘\"></a><strong>刻录 USB 启动盘</strong></h4><p>推荐使用 <a href=\"https://www.ventoy.net/cn/index.html\">Ventoy</a>，可以在 Windows/Linux 上使用，方法是下载安装包后解压、安装到 USB 上，之后直接将 ISO 镜像拷贝到 USB 中即可选择镜像文件进行登录系统，支持多个系统镜像登录</p>\n<p>Linux 上也可以使用 <a href=\"https://www.balena.io/etcher/\">Etcher</a>，在 Linux（下载 Appimage 或从 AUR 上用包管理器下载 <code>balena-etcher</code>）和 Windows（下载 EXE 可执行文件）上均能使用（但无法刻录 Windows 系统镜像），Github 项目地址在 <a href=\"https://github.com/balena-io/etcher\">https://github.com/balena-io/etcher</a></p>\n<p>Windows 上还可以用 <a href=\"https://rufus.ie/zh/\">Rufus</a>，速度与 Etcher 相当且支持 Windows 和 Linux 系统镜像，但无法在 Linux 上使用（只提供 Windows 版 EXE 可执行文件），Github 项目地址在 <a href=\"https://github.com/pbatard/rufus\">https://github.com/pbatard/rufus</a></p>\n<h3 id=\"ThinkPad：安装-Manjaro\"><a href=\"#ThinkPad：安装-Manjaro\" class=\"headerlink\" title=\"ThinkPad：安装 Manjaro\"></a><strong>ThinkPad：安装 Manjaro</strong></h3><p>设置 &gt;&gt; 恢复 &gt;&gt; 立即重新启动 &gt;&gt; USB HDD</p>\n<p>或按照以下步骤直接从 USB 启动:</p>\n<p>启动 ThinkPad 时按 <code>Enter</code> 打断正常开机，然后按下 <code>Fn+Esc</code> 解锁 <code>Fn</code> 按钮，再按 <code>F12</code> 选择启动位置为 USB HDD</p>\n<h3 id=\"Surface：安装-Manjaro\"><a href=\"#Surface：安装-Manjaro\" class=\"headerlink\" title=\"Surface：安装 Manjaro\"></a><strong>Surface：安装 Manjaro</strong></h3><p>设置 &gt;&gt; 恢复 &gt;&gt; 立即重新启动 &gt;&gt; USB Storage</p>\n<p>或按照以下步骤直接从 USB 启动:</p>\n<p>关闭 Surface</p>\n<p>将可启动 U 盘插入 Surface 上的 USB 端口</p>\n<p>长按 Surface 上的调低音量按钮，同时按下并释放电源按钮，屏幕上会显示 Microsoft 或 Surface 徽标</p>\n<p>继续按住调低音量按钮，释放按钮后，徽标下方将显示旋转圆点，进入 UEFI 界面</p>\n<p>在 UEFI 界面内从 USB 启动</p>\n<h4 id=\"进入-Manjaro-Hello-窗口开始安装\"><a href=\"#进入-Manjaro-Hello-窗口开始安装\" class=\"headerlink\" title=\"进入 Manjaro Hello 窗口开始安装\"></a><strong>进入 Manjaro Hello 窗口开始安装</strong></h4><p>语言选择“简体中文”</p>\n<p>时区选择“Asia — Shanghai”</p>\n<p>键盘设置选择“Chinese — Default”</p>\n<p>安装时选择“替代一个分区”，并点击之前空出来的空分区</p>\n<p>或者手动挂载空分区，挂载点设为 <code>/</code>，标记为 <code>root</code>，手动挂载 UEFI 分区（即第一个分区<code>dev/nvme0n1p1</code>，格式为 FAT32），不要格式化，挂载点设为 <code>/boot/efi</code>，标记为 <code>boot</code></p>\n<p>用户名建议全部用小写字母并与登录时的用户名一致</p>\n<p>设置密码，并勾选“为管理员使用相同的密码”</p>\n<h2 id=\"初始配置\"><a href=\"#初始配置\" class=\"headerlink\" title=\"初始配置\"></a><strong>初始配置</strong></h2><h3 id=\"电源与开机设置\"><a href=\"#电源与开机设置\" class=\"headerlink\" title=\"电源与开机设置\"></a><strong>电源与开机设置</strong></h3><p>系统设置 &gt;&gt; 电源管理 &gt;&gt; 节能 &gt;&gt; 勾选“按键事件处理” &gt;&gt; 合上笔记本盖时 &gt;&gt; 选择“关闭屏幕” &gt;&gt; 勾选“即使已连接外部显示器”</p>\n<p>系统设置 &gt;&gt; 开机与关机 &gt;&gt; 桌面会话 &gt;&gt; 登入时 &gt;&gt; 选择“以空会话启动”</p>\n<h4 id=\"与电源管理相关的常见英文名词\"><a href=\"#与电源管理相关的常见英文名词\" class=\"headerlink\" title=\"与电源管理相关的常见英文名词\"></a><strong>与电源管理相关的常见英文名词</strong></h4><p>Sleep：睡眠，Suspend：挂起，Reboot：重启，Shutdown：关机，Logout：注销</p>\n<h3 id=\"高分辨率设置\"><a href=\"#高分辨率设置\" class=\"headerlink\" title=\"高分辨率设置\"></a><strong>高分辨率设置</strong></h3><p>ThinkPad 的屏幕分辨率是 2560×1600，而 Surface 的屏幕分辨率是 2736×1824，需要配置高分屏优化：</p>\n<p>系统设置 &gt;&gt; 显示和监控 &gt;&gt; 显示配置 &gt;&gt; 分辨率 &gt;&gt; 全局缩放 &gt;&gt; 200%</p>\n<p>系统设置 &gt;&gt; 光标 &gt;&gt; 大小 &gt;&gt; 36</p>\n<p>然后重启电脑</p>\n<h3 id=\"快捷键配置\"><a href=\"#快捷键配置\" class=\"headerlink\" title=\"快捷键配置\"></a><strong>快捷键配置</strong></h3><h4 id=\"全局快捷键\"><a href=\"#全局快捷键\" class=\"headerlink\" title=\"全局快捷键\"></a><strong>全局快捷键</strong></h4><p>为打开方便，可以采用 i3wm 的默认快捷键打开 Konsole：</p>\n<p>系统设置 &gt;&gt; 快捷键 &gt;&gt; 添加应用程序 &gt;&gt; Konsole &gt;&gt; Konsole 的快捷键设为 <code>Meta+Return</code>（即“Windows 徽标键 + Enter 键”）</p>\n<h4 id=\"Konsole-Yakuake-快捷键\"><a href=\"#Konsole-Yakuake-快捷键\" class=\"headerlink\" title=\"Konsole/Yakuake 快捷键\"></a><strong>Konsole/Yakuake 快捷键</strong></h4><p>设置 &gt;&gt; 配置键盘快捷键 &gt;&gt; 复制改为 <code>Ctrl+C</code> ，粘贴改为 <code>Ctrl+V</code></p>\n<h3 id=\"选择镜像并更改更新分支\"><a href=\"#选择镜像并更改更新分支\" class=\"headerlink\" title=\"选择镜像并更改更新分支\"></a><strong>选择镜像并更改更新分支</strong></h3><p>选择镜像：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">sudo pacman-mirrors -i -c China<br></code></pre></td></tr></table></figure>\n<p>更新分支 <code>(branch)</code> 可以选择 stable/testing/unstable，更改更新分支的命令为：（不要漏掉 <code>-a</code>）</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">sudo pacman-mirrors -aS (branch)<br>sudo pacman -Syyu<br></code></pre></td></tr></table></figure>\n<p>获取更新分支的命令为：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">sudo pacman-mirrors -G<br></code></pre></td></tr></table></figure>\n<p>选择镜像并更改更新分支的命令则为：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">sudo pacman-mirrors -aS (branch) -ic China<br></code></pre></td></tr></table></figure>\n<p><strong>一般建议选择上海交大的镜像，其更新频率最高且支持全部三个更新分支，如果在北京大学访问上海交大镜像源较慢可以考虑用更快的清华大学镜像源</strong></p>\n<h3 id=\"包管理器\"><a href=\"#包管理器\" class=\"headerlink\" title=\"包管理器\"></a>包管理器</h3><p>Manjaro 常用的包管理器有 pacman 和 pamac，其使用教程参考以下网址：</p>\n<p>Manjaro Wiki — Pacman Overview</p>\n<p><a href=\"https://wiki.manjaro.org/index.php/Pacman_Overview\">https://wiki.manjaro.org/index.php/Pacman_Overview</a></p>\n<p>Manjaro Wiki — Pacman-mirrors</p>\n<p><a href=\"https://wiki.manjaro.org/index.php/Pacman-mirrors\">https://wiki.manjaro.org/index.php/Pacman-mirrors</a></p>\n<p>ArchWiki — Pacman</p>\n<p><a href=\"https://wiki.archlinux.org/index.php/Pacman\">https://wiki.archlinux.org/index.php/Pacman</a></p>\n<p>Manjaro Wiki — Pamac</p>\n<p><a href=\"https://wiki.manjaro.org/index.php/Pamac\">https://wiki.manjaro.org/index.php/Pamac</a></p>\n<p>其中 pacman 和 pamac 是预装的，“添加/删除软件”就是 pamac 的 GUI 版本</p>\n<p>硬件管理的包管理器是 mhwd 和 mhwd-kernel，其使用教程参考以下网址：</p>\n<p>Manjaro Wiki — Manjaro Hardware Detection Overview</p>\n<p><a href=\"https://wiki.manjaro.org/index.php/Manjaro_Hardware_Detection_Overview\">https://wiki.manjaro.org/index.php/Manjaro_Hardware_Detection_Overview</a></p>\n<p>Manjaro Wiki — Configure Graphics Cards</p>\n<p><a href=\"https://wiki.manjaro.org/index.php/Configure_Graphics_Cards\">https://wiki.manjaro.org/index.php/Configure_Graphics_Cards</a></p>\n<p>Manjaro Wiki — Manjaro Kernels</p>\n<p><a href=\"https://wiki.manjaro.org/index.php/Manjaro_Kernels\">https://wiki.manjaro.org/index.php/Manjaro_Kernels</a></p>\n<p>这两个也可以在 Manjaro Settings Manager （GUI 版本）中使用</p>\n<h3 id=\"AUR\"><a href=\"#AUR\" class=\"headerlink\" title=\"AUR\"></a><strong>AUR</strong></h3><h4 id=\"安装-base-devel\"><a href=\"#安装-base-devel\" class=\"headerlink\" title=\"安装 base-devel\"></a><strong>安装 base-devel</strong></h4><p>AUR 上的某些 PKGBUILD 会默认你已经安装 <code>base-devel</code> 组的所有软件包而不将它们写入构建依赖。为了避免在构建过程中出现一些奇怪的错误，建议先安装 <code>base-devel</code>：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">sudo pacman -S base-devel<br></code></pre></td></tr></table></figure>\n<h4 id=\"启用-pamac-的-AUR-支持\"><a href=\"#启用-pamac-的-AUR-支持\" class=\"headerlink\" title=\"启用 pamac 的 AUR 支持\"></a><strong>启用 pamac 的 AUR 支持</strong></h4><p>添加/删除软件 &gt;&gt; 右上角 ··· &gt;&gt; 首选项 &gt;&gt; AUR &gt;&gt; 启用 AUR 支持</p>\n<p>然后就可以用 pamac 的图形界面获取 AUR 软件包，或者用命令 <code>pamac build</code> 及 <code>pamac install</code> 获取 AUR 的软件包</p>\n<p><strong>注意 pacman 不支持 AUR</strong></p>\n<h3 id=\"Arch-Linux-CN-软件源\"><a href=\"#Arch-Linux-CN-软件源\" class=\"headerlink\" title=\"Arch Linux CN 软件源\"></a><strong>Arch Linux CN 软件源</strong></h3><p>在 <code>/etc/pacman.conf</code> 文件末尾添加以下两行以启用上海交大镜像（注意一定要写第一行的 <code>[archlinuxcn]</code>）：</p>\n<figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs awk\">[archlinuxcn]<br>Server = https:<span class=\"hljs-regexp\">//mi</span>rrors.sjtug.sjtu.edu.cn<span class=\"hljs-regexp\">/archlinux-cn/</span><span class=\"hljs-variable\">$arch</span><br></code></pre></td></tr></table></figure>\n<p>之后执行下面的命令安装 archlinuxcn-keyring 包导入 GPG key</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">sudo pacman -Sy archlinuxcn-keyring<br>sudo pacman -Syyu<br></code></pre></td></tr></table></figure>\n<p>这样就开启了 pacman 和 pamac 对 Arch Linux CN 的支持</p>\n<p>由于 Manjaro 的更新滞后于 Arch，使用 Arch Linux CN 仓库可能会出现“部分更新”的情况，导致某些软件包损坏</p>\n<p>建议切换到 testing 或 unstable 分支以尽量跟进 Arch 的更新</p>\n<h4 id=\"搜索软件包\"><a href=\"#搜索软件包\" class=\"headerlink\" title=\"搜索软件包\"></a><strong>搜索软件包</strong></h4><p>在 <code>pamac</code> 上可以执行：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">pamac search (package_name)<br></code></pre></td></tr></table></figure>\n<h4 id=\"检查依赖关系\"><a href=\"#检查依赖关系\" class=\"headerlink\" title=\"检查依赖关系\"></a><strong>检查依赖关系</strong></h4><p>以树状图的形式展示某软件包的依赖关系：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">pactree (package_name)<br></code></pre></td></tr></table></figure>\n<h4 id=\"降级软件包\"><a href=\"#降级软件包\" class=\"headerlink\" title=\"降级软件包\"></a><strong>降级软件包</strong></h4><p>在 <code>/var/cache/pacman/pkg/</code> 中找到旧软件包，双击打开安装实现手动降级，参考以下网址：</p>\n<p>Downgrading Packages — ArchWiki</p>\n<p><a href=\"https://wiki.archlinux.org/title/Downgrading_packages_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87\">https://wiki.archlinux.org/title/Downgrading_packages_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87</a>)</p>\n<h4 id=\"清理缓存\"><a href=\"#清理缓存\" class=\"headerlink\" title=\"清理缓存\"></a><strong>清理缓存</strong></h4><p>清理全部软件安装包：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">pamac clean<br></code></pre></td></tr></table></figure>\n<p>删除软件包时清理设置文件：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">sudo pacman -Rn (package_name)<br></code></pre></td></tr></table></figure>\n<p>清理无用的孤立软件包：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">sudo pacman -Rsn $(pacman -Qdtq)<br></code></pre></td></tr></table></figure>\n<p>若显示 <code>error: no targets specified (use -h for help)</code> 则说明没有孤立软件包需要清理</p>\n<p>或者：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">pamac remove -o<br></code></pre></td></tr></table></figure>\n<p>若不小心终止了 <code>pacman</code> 进程，则需要先删除 <code>/var/lib/pacman/db.lck</code> 才能再次启动 <code>pacman</code></p>\n<h4 id=\"从本地安装包安装软件\"><a href=\"#从本地安装包安装软件\" class=\"headerlink\" title=\"从本地安装包安装软件\"></a><strong>从本地安装包安装软件</strong></h4><p>pacman 有从本地安装包安装软件的功能，只需输入：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">sudo pacman -U (package_path)/(package_name)<br></code></pre></td></tr></table></figure>\n<h3 id=\"切换到-video-modesetting（可选）\"><a href=\"#切换到-video-modesetting（可选）\" class=\"headerlink\" title=\"切换到 video-modesetting（可选）\"></a><strong>切换到 video-modesetting（可选）</strong></h3><p>有时候打字时桌面卡死，只有鼠标能移动，但是无法点击</p>\n<p>可能是默认的 video-linux 显卡驱动的问题，已经有此类问题的报告和建议，参考以下网址：</p>\n<p>Arch Wiki — Cinnamon</p>\n<p><a href=\"https://wiki.archlinux.org/index.php/Cinnamon#Installation\">https://wiki.archlinux.org/index.php/Cinnamon#Installation</a></p>\n<p>Arch Wiki — Intel Graphics</p>\n<p><a href=\"https://wiki.archlinux.org/index.php/Intel_graphics#Installation\">https://wiki.archlinux.org/index.php/Intel_graphics#Installation</a></p>\n<p>KDE Community — Plasma 5.9 Errata</p>\n<p><a href=\"https://community.kde.org/Plasma/5.9_Errata#Intel_GPUs\">https://community.kde.org/Plasma/5.9_Errata#Intel_GPUs</a></p>\n<p>解决办法：</p>\n<p>卸载 video-linux：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">sudo mhwd -r pci video-linux<br></code></pre></td></tr></table></figure>\n<p>下载 video-modesetting：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">sudo mhwd -i pci video-modesetting<br></code></pre></td></tr></table></figure>\n<p><strong>重启后会发现许多窗口和图标变小，建议先调整全局缩放为 100%，重新启动，再调至 200%，再重启</strong></p>\n<h3 id=\"Surface：Linux-Surface-内核安装（可选）\"><a href=\"#Surface：Linux-Surface-内核安装（可选）\" class=\"headerlink\" title=\"Surface：Linux-Surface 内核安装（可选）\"></a><strong>Surface：Linux-Surface 内核安装（可选）</strong></h3><p><strong>Manjaro 官方支持的最新的内核是 x86_64 Linux 5.14.0-0-MANJARO，从 Linux 5.13-MANJARO 开始已经支持 Surface 的电池组件（旧版内核不支持，无法显示电池电量状态），但不支持触屏</strong></p>\n<p>在终端中输入：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">curl -s https://raw.githubusercontent.com/linux-surface/linux-surface/master/pkg/keys/surface.asc \\| sudo pacman-key --add -<br></code></pre></td></tr></table></figure>\n<p>如果出现错误或没有响应，一般是网络问题，可能要等待几分钟，建议先配置好 VPN 再装内核</p>\n<p>接着输入：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">sudo pacman-key --finger 56C464BAAC421453<br>sudo pacman-key --lsign-key 56C464BAAC421453<br></code></pre></td></tr></table></figure>\n<p>在 <code>/etc/pacman.conf</code> 里面添加：</p>\n<figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs awk\">[linux-surface]<br>Server = https:<span class=\"hljs-regexp\">//</span>pkg.surfacelinux.com<span class=\"hljs-regexp\">/arch/</span><br></code></pre></td></tr></table></figure>\n<p>然后更新软件库并下载：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">sudo pacman -Syyu<br>sudo pacman -S linux-surface linux-surface-headers iptsd-git<br></code></pre></td></tr></table></figure>\n<p>启动触屏：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">sudo systemctl <span class=\"hljs-built_in\">enable</span> iptsd<br></code></pre></td></tr></table></figure>\n<p>启动相机参考以下网址：（相机功能仍在开发中，可能出现配置失败的情况）</p>\n<p>Linux-Surface — Camera Support</p>\n<p><a href=\"https://github.com/linux-surface/linux-surface/wiki/Camera-Support\">https://github.com/linux-surface/linux-surface/wiki/Camera-Support</a></p>\n<p>KDE 上原生的相机应用是 Kamoso，也可以使用 GNOME 上的相机应用 Cheese</p>\n<p><strong>Firefox 启用触屏需要在 <code>/etc/environment</code> 中写入 <code>MOZ_USE_XINPUT2=1</code>，然后重新启动，并在 about:config 中设置 <code>apz.allow_zooming</code> 和 <code>apz.allow_zooming_out</code> 为 <code>true</code>；Visual Studio Code 启用触屏需要更改 <code>/usr/share/applications/visual-studio-code.desktop</code>，在 <code>Exec</code> 一行中加入命令 <code>--touch-events</code>，这一般对以 Electron 为基础的软件有效</strong></p>\n<h3 id=\"vim-安装与配置\"><a href=\"#vim-安装与配置\" class=\"headerlink\" title=\"vim 安装与配置\"></a><strong>vim 安装与配置</strong></h3><p>建议先安装 vim，方便之后编辑各种文件：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">sudo pacman -S vim<br></code></pre></td></tr></table></figure>\n<p>vim 的配置文件主要有 <code>/usr/share/vim/vimfiles/archlinux.vim</code>，<code>/etc/vimrc</code> 和 <code>/home/(user_name)/.vimrc</code>，建议直接修改 <code>/etc/vimrc</code>，这样不会覆盖 <code>/usr/share/vim/vimfiles/archlinux.vim</code> 上定义的默认配置（语法高亮等）</p>\n<h3 id=\"GNU-nano-配置\"><a href=\"#GNU-nano-配置\" class=\"headerlink\" title=\"GNU nano 配置\"></a><strong>GNU nano 配置</strong></h3><p>nano 的配置文件在 <code>/etc/nanorc</code>，可以通过取消注释设置选项配置文件，如：</p>\n<p>取消注释 <code>set linenumbers</code> 可以显示行号</p>\n<p>取消注释 <code>set tabsize 8</code> 可以更改 Tab 键的长度，例如 <code>set tabsize 4</code></p>\n<p>取消注释 <code>set tabstospaces</code> 可以将 Tab 转换为空格</p>\n<p>取消注释 <code>set matchbrackets &quot;(&lt;[&#123;)&gt;]&#125;&quot;</code> 可以匹配括号</p>\n<p>取消注释 <code>include &quot;/usr/share/nano/*.nanorc&quot;</code> 一行和所有的颜色设置可以启用代码高亮</p>\n<p>取消注释所有的 <code>Key bindings</code> 选项可以启用更常用的快捷键设定</p>\n<p><strong>用 nano 编辑后保存的步骤是 <code>Ctrl+W</code> （Write Out） &gt;&gt; <code>Enter</code> &gt;&gt; <code>Ctrl+Q</code> （Exit），如果用默认的快捷键设置，则为 <code>Ctrl+O</code> （Write Out） &gt;&gt; <code>Enter</code> &gt;&gt; <code>Ctrl+X</code> （Exit）</strong></p>\n<h3 id=\"更改-visudo-默认编辑器为-vim\"><a href=\"#更改-visudo-默认编辑器为-vim\" class=\"headerlink\" title=\"更改 visudo 默认编辑器为 vim\"></a><strong>更改 visudo 默认编辑器为 vim</strong></h3><p>Manjaro 中 visudo 的默认编辑器是 vi，若要改为 vim，则首先在终端中输入：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">sudo visudo<br></code></pre></td></tr></table></figure>\n<p>在开头的一个空行键入：</p>\n<figure class=\"highlight arcade\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs arcade\">Defaults editor=<span class=\"hljs-regexp\">/usr/</span>bin/vim<br></code></pre></td></tr></table></figure>\n<p>按 <code>Esc</code> 进入命令模式，再按 <code>:x</code> 保存，按 <code>Enter</code> 退出</p>\n<p>如果想临时使用 vim 作为编辑器，则输入：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">sudo EDITOR=vim visudo<br></code></pre></td></tr></table></figure>\n<h3 id=\"sudo-免密码\"><a href=\"#sudo-免密码\" class=\"headerlink\" title=\"sudo 免密码\"></a><strong>sudo 免密码</strong></h3><p>在最后一行（空行）按 <code>i</code> 进入输入模式，加上这一行：</p>\n<figure class=\"highlight avrasm\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs avrasm\"><span class=\"hljs-symbol\">Defaults:</span>(user_name) !authenticate<br></code></pre></td></tr></table></figure>\n<p>进入命令模式，保存退出即可</p>\n<p><strong>注：如果想保留输入密码的步骤但是想在输入密码时显示星号，则加上一行 <code>Defaults env_reset,pwfeedback</code> 即可</strong></p>\n<h3 id=\"命令行界面输出语言为英语\"><a href=\"#命令行界面输出语言为英语\" class=\"headerlink\" title=\"命令行界面输出语言为英语\"></a><strong>命令行界面输出语言为英语</strong></h3><p>在 <code>~/.bashrc</code> 的最后添加一行：</p>\n<figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs routeros\"><span class=\"hljs-builtin-name\">export</span> <span class=\"hljs-attribute\">LANG</span>=en_US.UTF-8<br></code></pre></td></tr></table></figure>\n<p>如果使用 zsh，则去掉 <code>~/.zshrc</code> 中这一行的注释即可</p>\n<h3 id=\"时间设置\"><a href=\"#时间设置\" class=\"headerlink\" title=\"时间设置\"></a><strong>时间设置</strong></h3><h4 id=\"双系统时间不同步\"><a href=\"#双系统时间不同步\" class=\"headerlink\" title=\"双系统时间不同步\"></a><strong>双系统时间不同步</strong></h4><p>系统设置 &gt;&gt; 时间和日期 &gt;&gt; 自动设置时间和日期</p>\n<p>在 Manjaro 上设置硬件时间为 UTC：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">sudo timedatectl set-local-rtc 0<br></code></pre></td></tr></table></figure>\n<p>并在 Windows 上设置硬件时间为 UTC，与 Manjaro 同步：</p>\n<figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs powershell\">reg add <span class=\"hljs-string\">&quot;HKEY_LOCAL_MACHINE\\System\\CurrentControlSet\\Control\\TimeZoneInformation&quot;</span> /v RealTimeIsUniversal /d <span class=\"hljs-number\">1</span> /t REG_QWORD /f<br></code></pre></td></tr></table></figure>\n<p>这一步需要在 Powershell（管理员）中执行</p>\n<h4 id=\"Manjaro-数字时钟设置-24-小时制\"><a href=\"#Manjaro-数字时钟设置-24-小时制\" class=\"headerlink\" title=\"Manjaro 数字时钟设置 24 小时制\"></a><strong>Manjaro 数字时钟设置 24 小时制</strong></h4><p>右键点击“数字时钟” &gt;&gt; 配置数字时钟 &gt;&gt; 时间显示 &gt;&gt; 24 小时制</p>\n<h4 id=\"添加-TUNA-网络授时服务\"><a href=\"#添加-TUNA-网络授时服务\" class=\"headerlink\" title=\"添加 TUNA 网络授时服务\"></a><strong>添加 TUNA 网络授时服务</strong></h4><p>参考以下网址：</p>\n<p>TUNA NTP (网络授时) 服务使用说明</p>\n<p><a href=\"https://tuna.moe/help/ntp/\">https://tuna.moe/help/ntp/</a></p>\n<h3 id=\"关闭启动时的系统信息\"><a href=\"#关闭启动时的系统信息\" class=\"headerlink\" title=\"关闭启动时的系统信息\"></a><strong>关闭启动时的系统信息</strong></h3><p>参考以下网址：</p>\n<p>Silent Boot — ArchWiki</p>\n<p><a href=\"https://wiki.archlinux.org/title/Silent_boot\">https://wiki.archlinux.org/title/Silent_boot</a></p>\n<p>主要是 <a href=\"https://wiki.archlinux.org/title/Silent_boot#Kernel_parameters\">Kernel parameters</a> 和 <a href=\"https://wiki.archlinux.org/title/Silent_boot#fsck\">fsck</a> 两段</p>\n<p>编辑 Kernel parameters：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">sudo vim /etc/default/grub<br></code></pre></td></tr></table></figure>\n<p>将 <code>GRUB_CMDLINE_LINUX_DEFAULT</code> 的值改为 <code>&quot;quiet loglevel=3 udev.log_priority=3&quot;</code></p>\n<p>编辑 fsck:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">sudo vim /etc/mkinitcpio.conf<br></code></pre></td></tr></table></figure>\n<p>在 <code>HOOKS</code> 一行中将 <code>udev</code> 改为 <code>systemd</code>，保存后执行：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">sudo mkinitcpio -P<br></code></pre></td></tr></table></figure>\n<p>再编辑 <code>systemd-fsck-root.service</code> 和 <code>systemd-fsck@.service</code>：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">sudo systemctl edit --full systemd-fsck-root.service<br>sudo systemctl edit --full systemd-fsck@.service<br></code></pre></td></tr></table></figure>\n<p>分别在 <code>Service</code> 一段中编辑 <code>StandardOutput</code> 和 <code>StandardError</code> 如下：</p>\n<figure class=\"highlight ini\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs ini\"><span class=\"hljs-attr\">StandardOutput</span>=null<br><span class=\"hljs-attr\">StandardError</span>=journal+console<br></code></pre></td></tr></table></figure>\n<p>最后执行</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">sudo update-grub<br></code></pre></td></tr></table></figure>\n<h3 id=\"关闭重启时的-watchdog-提示\"><a href=\"#关闭重启时的-watchdog-提示\" class=\"headerlink\" title=\"关闭重启时的 watchdog 提示\"></a><strong>关闭重启时的 watchdog 提示</strong></h3><p>创建文件 <code>/etc/modprobe.d/watchdog.conf</code>，并写入：</p>\n<figure class=\"highlight elm\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs elm\"><span class=\"hljs-title\">blacklist</span> iTCO_wdtblacklist iTCO_vendor_sup<span class=\"hljs-keyword\">port</span><br></code></pre></td></tr></table></figure>\n<p>这样可以屏蔽掉不需要的驱动，保存后执行：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">sudo update-grub<br></code></pre></td></tr></table></figure>\n<p>再重启即可</p>\n<h3 id=\"hosts-文件设置（可选）\"><a href=\"#hosts-文件设置（可选）\" class=\"headerlink\" title=\"hosts 文件设置（可选）\"></a><strong>hosts 文件设置（可选）</strong></h3><p>参考以下网址：</p>\n<p>修改 hosts 解决 GitHub 访问失败</p>\n<p><a href=\"https://zhuanlan.zhihu.com/p/107334179\">https://zhuanlan.zhihu.com/p/107334179</a></p>\n<p>需要修改的文件是 <code>/etc/hosts</code>，Windows 下对应的文件位置为： <code>C:\\Windows\\System32\\drivers\\etc\\hosts</code> （注意这里是反斜杠）</p>\n<h3 id=\"动态-Swap-文件设置\"><a href=\"#动态-Swap-文件设置\" class=\"headerlink\" title=\"动态 Swap 文件设置\"></a><strong>动态 Swap 文件设置</strong></h3><p><strong>使用 swap 分区可能会缩短 SSD 的寿命，如果需要 swap 的话建议用 swap 文件，详见 <a href=\"https://wiki.archlinux.org/index.php/Swap_(简体中文\">Swap（简体中文）- Arch Wiki</a>#交换文件&gt;)</strong></p>\n<p>先下载 <code>systemd-swap</code> 软件包：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">sudo pacman -S systemd-swap<br></code></pre></td></tr></table></figure>\n<p>编辑 <code>/etc/systemd/swap.conf</code>:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">sudo vim /etc/systemd/swap.conf<br></code></pre></td></tr></table></figure>\n<p>去掉 <code>swapfc_enabled</code> 前的注释并设置为 <code>swapfc_enabled=1</code> ，保存并关闭</p>\n<p>在终端输入</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">sudo systemctl <span class=\"hljs-built_in\">enable</span> --now systemd-swap<br></code></pre></td></tr></table></figure>\n<p>以启动 <code>systemd-swap</code> 服务</p>\n<h3 id=\"Linux-挂载-Windows-磁盘\"><a href=\"#Linux-挂载-Windows-磁盘\" class=\"headerlink\" title=\"Linux 挂载 Windows 磁盘\"></a><strong>Linux 挂载 Windows 磁盘</strong></h3><p><strong>首先要确保设备加密和快速启动已经关闭</strong></p>\n<p>参考以下网址：</p>\n<p>Archwiki — fstab</p>\n<p><a href=\"https://wiki.archlinux.org/title/Fstab_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87\">https://wiki.archlinux.org/title/Fstab_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87</a>)</p>\n<h4 id=\"使用-UUID\"><a href=\"#使用-UUID\" class=\"headerlink\" title=\"使用 UUID\"></a><strong>使用 UUID</strong></h4><p>官方推荐的方法是使用 UUID，以分别挂载 C 盘和 D 盘到 <code>/home/(user_name)/C</code> 和 <code>/home/(user_name)/D</code> 为例，在终端中输入：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">lsblk -f<br></code></pre></td></tr></table></figure>\n<p>在输出结果中可以发现 Windows 的硬盘分区：</p>\n<figure class=\"highlight less\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs less\"><span class=\"hljs-selector-tag\">NAME</span>       <span class=\"hljs-selector-tag\">FSTYPE</span>       <span class=\"hljs-selector-tag\">LABEL</span>   <span class=\"hljs-selector-tag\">UUID</span><br>├─(name_C) <span class=\"hljs-selector-tag\">ntfs</span>         <span class=\"hljs-selector-tag\">C</span>       (UUID_C)<br>├─(name_D) <span class=\"hljs-selector-tag\">ntfs</span>         <span class=\"hljs-selector-tag\">D</span>       (UUID_D)<br></code></pre></td></tr></table></figure>\n<p>接着就来修改系统文件：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">sudo vim /etc/fstab<br></code></pre></td></tr></table></figure>\n<p>在最后加入这两行：</p>\n<figure class=\"highlight gradle\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs gradle\">UUID=(UUID_C)                     <span class=\"hljs-regexp\">/home/</span>(user_name)/C    ntfs <span class=\"hljs-keyword\">default</span> <span class=\"hljs-number\">0</span> <span class=\"hljs-number\">0</span><br>UUID=(UUID_D)                     <span class=\"hljs-regexp\">/home/</span>(user_name)/D    ntfs <span class=\"hljs-keyword\">default</span> <span class=\"hljs-number\">0</span> <span class=\"hljs-number\">0</span><br></code></pre></td></tr></table></figure>\n<p>重启电脑后，即可自动挂载</p>\n<p><strong>如果需要格式化 C 盘或 D 盘，先从 <code>/etc/fstab</code> 中删去这两行，再操作，之后磁盘的 <code>UUID</code> 会被更改，再编辑 <code>/etc/fstab</code> ，重启挂载即可</strong></p>\n<h4 id=\"使用图形化界面\"><a href=\"#使用图形化界面\" class=\"headerlink\" title=\"使用图形化界面\"></a><strong>使用图形化界面</strong></h4><p>在系统应用“KDE 分区管理器”中卸载 C 盘、D 盘，右键选择编辑挂载点，编辑为 <code>/home/(user_name)/C</code> 和 <code>/home/(user_name)/D</code>，执行即可</p>\n<p>这相当于直接编辑 <code>/etc/fstab</code>，加入：</p>\n<figure class=\"highlight gradle\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs gradle\"><span class=\"hljs-regexp\">/dev/</span>(name_C)                     <span class=\"hljs-regexp\">/home/</span>(user_name)/C    ntfs <span class=\"hljs-keyword\">default</span> <span class=\"hljs-number\">0</span> <span class=\"hljs-number\">0</span><br><span class=\"hljs-regexp\">/dev/</span>(name_D)                     <span class=\"hljs-regexp\">/home/</span>(user_name)/D    ntfs <span class=\"hljs-keyword\">default</span> <span class=\"hljs-number\">0</span> <span class=\"hljs-number\">0</span><br></code></pre></td></tr></table></figure>\n<p>好处是格式化磁盘后内核名称不变，依然可以挂载</p>\n<h4 id=\"如果-Windows-磁盘突然变成只读\"><a href=\"#如果-Windows-磁盘突然变成只读\" class=\"headerlink\" title=\"如果 Windows 磁盘突然变成只读\"></a><strong>如果 Windows 磁盘突然变成只读</strong></h4><p><strong>首先检查 Windows 中是否关闭了快速启动</strong></p>\n<p>关闭快速启动（Windows 工具 –&gt; 控制面板 &gt;&gt; 电源选项 &gt;&gt; 选择电源按钮的功能 &gt;&gt; 更改当前不可用的设置 &gt;&gt; 关闭快速启动 &gt;&gt; 保存修改）并重启电脑</p>\n<p>一般来讲是 Windows 开启了快速启动，或者进行了优化磁盘等操作导致的，若关闭快速启动不能解决问题，使用下面的方法：</p>\n<p>检查占用进程：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">sudo fuser -m -u /dev/(partition_name)<br></code></pre></td></tr></table></figure>\n<p>可以看到数字，就是占用目录的进程 PID，终止进程：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">sudo <span class=\"hljs-built_in\">kill</span> (PID_number)<br></code></pre></td></tr></table></figure>\n<p>卸载磁盘分区：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">sudo umount /dev/(partition_name)<br></code></pre></td></tr></table></figure>\n<p>执行硬盘 NTFS 分区修复：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">sudo ntfsfix /dev/(partition_name)<br></code></pre></td></tr></table></figure>\n<p>再重新挂载即可：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">sudo mount /dev/(partition_name) (mount_path)/(mount_folder)<br></code></pre></td></tr></table></figure>\n<p>如果在 Dolphin 中已经成功卸载分区，则直接执行：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">sudo ntfsfix /dev/(partition_name) &amp;&amp; sudo mount /dev/(partition_name)(mount_path)/(mount_folder)<br></code></pre></td></tr></table></figure>\n<h3 id=\"系统分区改变导致时进入-GRUB-Rescue-模式\"><a href=\"#系统分区改变导致时进入-GRUB-Rescue-模式\" class=\"headerlink\" title=\"系统分区改变导致时进入 GRUB Rescue 模式\"></a><strong>系统分区改变导致时进入 GRUB Rescue 模式</strong></h3><p>此时会在开机时显示如下内容而无法进入选择系统的界面：</p>\n<figure class=\"highlight subunit\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs subunit\"><span class=\"hljs-keyword\">error: </span>no such partition.<br>Entering rescue mode...<br>grub rescue&gt;<br></code></pre></td></tr></table></figure>\n<p>此时执行 <code>ls</code>，显示如下：</p>\n<figure class=\"highlight clojure\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs clojure\">((<span class=\"hljs-name\">hd_number</span>)) ((<span class=\"hljs-name\">hd_number</span>),(<span class=\"hljs-name\">gpt_number</span>))<br></code></pre></td></tr></table></figure>\n<p>其中硬盘编号 <code>(hd_number)</code> 从小到大排列（最小值为 0），分区编号 <code>(gpt_number)</code> 从大到小排列（最小值为 1）</p>\n<p>找到安装 Manjaro 的分区<code>((hd_number),(gpt_number))</code>，此时执行 <code>ls((hd_number),(gpt_number))</code>应该能看到 Manjaro 根目录下的所有文件和文件夹</p>\n<p>手动修改启动分区所在的位置：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-built_in\">set</span> prefix=((hd_number),(gpt_number))/boot/grub<br></code></pre></td></tr></table></figure>\n<p>执行：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">insmod normal<br>normal<br></code></pre></td></tr></table></figure>\n<p>即可进入 GRUB 界面，从这里登录 Manjaro 系统，登录后执行：</p>\n<figure class=\"highlight ebnf\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs ebnf\"><span class=\"hljs-attribute\">sudo update-grub</span><br></code></pre></td></tr></table></figure>\n<p>以修复启动项</p>\n<h3 id=\"调整文件夹名称为英文\"><a href=\"#调整文件夹名称为英文\" class=\"headerlink\" title=\"调整文件夹名称为英文\"></a><strong>调整文件夹名称为英文</strong></h3><p>修改 <code>~/.config/user-dirs.dirs</code>，改为：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">XDG_DESKTOP_DIR=<span class=\"hljs-string\">&quot;<span class=\"hljs-variable\">$HOME</span>/Desktop&quot;</span><br>XDG_DOCUMENTS_DIR=<span class=\"hljs-string\">&quot;<span class=\"hljs-variable\">$HOME</span>/Documents&quot;</span><br>XDG_DOWNLOAD_DIR=<span class=\"hljs-string\">&quot;<span class=\"hljs-variable\">$HOME</span>/Downloads&quot;</span><br>XDG_MUSIC_DIR=<span class=\"hljs-string\">&quot;<span class=\"hljs-variable\">$HOME</span>/Music&quot;</span><br>XDG_PICTURES_DIR=<span class=\"hljs-string\">&quot;<span class=\"hljs-variable\">$HOME</span>/Pictures&quot;</span><br>XDG_PUBLICSHARE_DIR=<span class=\"hljs-string\">&quot;<span class=\"hljs-variable\">$HOME</span>/Public&quot;</span><br>XDG_TEMPLATES_DIR=<span class=\"hljs-string\">&quot;<span class=\"hljs-variable\">$HOME</span>/Templates&quot;</span><br>XDG_VIDEOS_DIR=<span class=\"hljs-string\">&quot;<span class=\"hljs-variable\">$HOME</span>/Videos&quot;</span><br></code></pre></td></tr></table></figure>\n<p>并在 Dolphin 中按照上面的说明更改文件名</p>\n<h3 id=\"Dolphin-在更新后删除文件-文件夹报错\"><a href=\"#Dolphin-在更新后删除文件-文件夹报错\" class=\"headerlink\" title=\"Dolphin 在更新后删除文件/文件夹报错\"></a><strong>Dolphin 在更新后删除文件/文件夹报错</strong></h3><p>如果出现以下错误：</p>\n<figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs awk\">无法创建输入输出后端。klauncher 回应：装入“<span class=\"hljs-regexp\">/usr/</span>lib<span class=\"hljs-regexp\">/qt/</span>plugins<span class=\"hljs-regexp\">/kf5/</span>kio/trash.so”时出错<br></code></pre></td></tr></table></figure>\n<p>说明 Qt 还在内存中保留着旧版 Dolphin，此时可以重启/重新登录，或执行：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">dbus-launch dolphin<br></code></pre></td></tr></table></figure>\n<h3 id=\"SONY-WH-1000XM3-耳机的蓝牙连接\"><a href=\"#SONY-WH-1000XM3-耳机的蓝牙连接\" class=\"headerlink\" title=\"SONY WH-1000XM3 耳机的蓝牙连接\"></a><strong>SONY WH-1000XM3 耳机的蓝牙连接</strong></h3><p>长按耳机电源键约 7 秒即可进入配对模式，可以在蓝牙中配对</p>\n<h3 id=\"Logitech-M590-鼠标的蓝牙连接\"><a href=\"#Logitech-M590-鼠标的蓝牙连接\" class=\"headerlink\" title=\"Logitech M590 鼠标的蓝牙连接\"></a><strong>Logitech M590 鼠标的蓝牙连接</strong></h3><p>同一台电脑的 Windows 系统和 Manjaro 系统在鼠标上会被识别为两个设备</p>\n<p>如果 Windows 系统被识别为设备 1，需要按滚轮后的圆形按钮切换至设备 2</p>\n<p>长按圆形按钮直到灯 2 快速闪烁进入配对模式，可以在蓝牙中配对</p>\n<h4 id=\"如果鼠标配对后屏幕光标无法移动\"><a href=\"#如果鼠标配对后屏幕光标无法移动\" class=\"headerlink\" title=\"如果鼠标配对后屏幕光标无法移动\"></a><strong>如果鼠标配对后屏幕光标无法移动</strong></h4><p>一般可以直接删除设备重新配对，如果失败则按照下面步骤操作：</p>\n<p>首先要安装 <code>bluez-utils</code>：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">sudo pacman -S bluez-utils<br></code></pre></td></tr></table></figure>\n<p>在终端中输入：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">bluetoothctl<br></code></pre></td></tr></table></figure>\n<p>然后参考以下网站：</p>\n<p>Arch Wiki — 关于 Logitech BLE 鼠标的问题</p>\n<p><a href=\"https://wiki.archlinux.org/index.php/Bluetooth_mouse#Problems_with_the_Logitech_BLE_mouse_(M557,_M590,_anywhere_mouse_2,_etc\">https://wiki.archlinux.org/index.php/Bluetooth_mouse#Problems_with_the_Logitech_BLE_mouse_(M557,_M590,_anywhere_mouse_2,_etc</a>)</p>\n<h3 id=\"解决用-root-登录没有声音的问题\"><a href=\"#解决用-root-登录没有声音的问题\" class=\"headerlink\" title=\"解决用 root 登录没有声音的问题\"></a><strong>解决用 root 登录没有声音的问题</strong></h3><p>在 <code>/root/.config/autostart/</code> 下创建一个 <code>pulseaudio.desktop</code> 文件：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">sudo vim /root/.config/autostart/pulseaudio.desktop<br></code></pre></td></tr></table></figure>\n<p>写入：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">[Desktop Entry]<br>Encoding=UTF-8<br>Type=Application<br>Name=pulseaudio<br>Exec=pulseaudio --start --log-target=syslog<br>StartupNotify=<span class=\"hljs-literal\">false</span><br>Terminal=<span class=\"hljs-literal\">true</span><br>Hidden=<span class=\"hljs-literal\">false</span><br></code></pre></td></tr></table></figure>\n<p>保存退出即可</p>\n<h3 id=\"切换图形化界面和命令行界面\"><a href=\"#切换图形化界面和命令行界面\" class=\"headerlink\" title=\"切换图形化界面和命令行界面\"></a><strong>切换图形化界面和命令行界面</strong></h3><p>登录时默认进入的是图形化界面，有时候开机后黑屏是图形化界面显示不出来所致，此时可以按快捷键 <code>Ctrl+Alt+Fn+(F2~F6)</code>进入<code>tty2 ~ tty6</code> 的任何一个命令行界面</p>\n<p>注意此时需要手动输入用户名和密码</p>\n<p>在命令行界面解决问题后，按快捷键 <code>Ctrl+Alt+Fn+F1</code> 可以转换回图形化界面</p>\n<h3 id=\"网络设置\"><a href=\"#网络设置\" class=\"headerlink\" title=\"网络设置\"></a><strong>网络设置</strong></h3><h4 id=\"ping-命令\"><a href=\"#ping-命令\" class=\"headerlink\" title=\"ping 命令\"></a><strong>ping 命令</strong></h4><p>IP 地址和连接情况可以通过对域名 <code>ping</code> 得到，例如：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">ping -c (count_number) (website_destination)<br></code></pre></td></tr></table></figure>\n<p>表示对网站域名 <code>(website_destination)</code> 发送 <code>(count_number)</code> 次 <code>ping</code> 连通请求</p>\n<h4 id=\"命令行连接-PKU-Wi-Fi\"><a href=\"#命令行连接-PKU-Wi-Fi\" class=\"headerlink\" title=\"命令行连接 PKU Wi-Fi\"></a><strong>命令行连接 PKU Wi-Fi</strong></h4><p>方法一：命令行输入 <code>nmtui</code> 并按照终端上的图形界面一步一步操作</p>\n<p>方法二：使用 <code>nmcli</code>，输入：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">nmcli device wifi connect PKU<br></code></pre></td></tr></table></figure>\n<p>通用的操作是：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">nmcli device wifi connect (SSID) password (student_passowrd)<br></code></pre></td></tr></table></figure>\n<p>注意这里的 SSID 是 Wi-Fi 的名称（如 PKU 或 TP-LINK_XXX），不是 IP 地址或 MAC 地址</p>\n<h4 id=\"命令行连接-PKU-VPN\"><a href=\"#命令行连接-PKU-VPN\" class=\"headerlink\" title=\"命令行连接 PKU VPN\"></a><strong>命令行连接 PKU VPN</strong></h4><p>此处需要一直打开终端，故推荐使用 Yakuake</p>\n<p>按 <code>Fn+F12</code> 打开 Yakuake，输入：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">sudo openconnect --protocol=nc --user (student_ID) https://vpn.pku.edu.cn<br></code></pre></td></tr></table></figure>\n<p>输入密码即可连接</p>\n<p>之后可以按 <code>Fn+F12</code> 让它收起，不要关闭窗口（关闭窗口则 VPN 断开）</p>\n<h4 id=\"图形化界面连接-PKU-Secure\"><a href=\"#图形化界面连接-PKU-Secure\" class=\"headerlink\" title=\"图形化界面连接 PKU Secure\"></a><strong>图形化界面连接 PKU Secure</strong></h4><p>Wi-Fi 安全 &gt;&gt; 安全 &gt;&gt; 企业 WPA/WPA2</p>\n<p>Wi-Fi 安全 &gt;&gt; 认证 &gt;&gt; 受保护的 EAP（PEAP）</p>\n<p>PEAP 版本 &gt;&gt; 自动</p>\n<p>内部认证 &gt;&gt; MSCHAPv2</p>\n<p>输入用户名、密码即可连接</p>\n<h4 id=\"命令行连接-PKU-Secure\"><a href=\"#命令行连接-PKU-Secure\" class=\"headerlink\" title=\"命令行连接 PKU Secure\"></a><strong>命令行连接 PKU Secure</strong></h4><p>首先进入 <code>nmcli</code> 配置：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">nmcli connection edit PKU\\ Secure<br></code></pre></td></tr></table></figure>\n<p>在 <code>nmcli</code> 界面内输入：</p>\n<figure class=\"highlight gams\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs gams\"><span class=\"hljs-keyword\">set</span> wifi-sec.key-mgmt <span class=\"hljs-comment\">wpa-eap</span><br><span class=\"hljs-keyword\">set</span> <span class=\"hljs-comment\">ipv4.method auto</span><br><span class=\"hljs-keyword\">set</span> <span class=\"hljs-comment\">802-1x.eap peap</span><br><span class=\"hljs-keyword\">set</span> <span class=\"hljs-comment\">802-1x.phase2-auth mschapv2</span><br><span class=\"hljs-keyword\">set</span> <span class=\"hljs-comment\">802-1x.identity (student_ID)</span><br><span class=\"hljs-keyword\">set</span> <span class=\"hljs-comment\">802-1x.password (student_password)</span><br>save<br>activate<br></code></pre></td></tr></table></figure>\n<h3 id=\"调整-CPU-频率（可选）\"><a href=\"#调整-CPU-频率（可选）\" class=\"headerlink\" title=\"调整 CPU 频率（可选）\"></a><strong>调整 CPU 频率（可选）</strong></h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">sudo vim /etc/tlp.conf<br></code></pre></td></tr></table></figure>\n<p>若更改 CPU 频率，修改以下位置：</p>\n<figure class=\"highlight ini\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs ini\"><span class=\"hljs-attr\">CPU_MIN_PERF_ON_AC</span>=<span class=\"hljs-number\">0</span><br><span class=\"hljs-attr\">CPU_MAX_PERF_ON_AC</span>=<span class=\"hljs-number\">100</span><br><span class=\"hljs-attr\">CPU_MIN_PERF_ON_BAT</span>=<span class=\"hljs-number\">0</span><br><span class=\"hljs-attr\">CPU_MAX_PERF_ON_BAT</span>=<span class=\"hljs-number\">30</span><br></code></pre></td></tr></table></figure>\n<p>若更改 CPU 睿频设置，修改以下位置：</p>\n<figure class=\"highlight ini\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs ini\"><span class=\"hljs-attr\">CPU_BOOST_ON_AC</span>=<span class=\"hljs-number\">1</span><br><span class=\"hljs-attr\">CPU_BOOST_ON_BAT</span>=<span class=\"hljs-number\">0</span><br></code></pre></td></tr></table></figure>\n<p><strong>不需要高性能的时候可以关闭睿频，这样 CPU 的频率就会限制在 1.9 GHz 以下，大幅增加续航、减少发热</strong></p>\n<p>保存、关闭，在终端中输入：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">sudo tlp start<br></code></pre></td></tr></table></figure>\n<h4 id=\"显示-CPU-频率（可选）\"><a href=\"#显示-CPU-频率（可选）\" class=\"headerlink\" title=\"显示 CPU 频率（可选）\"></a><strong>显示 CPU 频率（可选）</strong></h4><p>安装 KDE 小部件：<a href=\"https://github.com/jsalatas/plasma-pstate\">Intel P-state and CPU-Freq Manager</a></p>\n<p>右键点击顶栏，选择“添加部件”，找到 Intel P-state and CPU-Freq Manager 并添加在顶栏即可</p>\n<h3 id=\"禁用-baloo（可选）\"><a href=\"#禁用-baloo（可选）\" class=\"headerlink\" title=\"禁用 baloo（可选）\"></a><strong>禁用 baloo（可选）</strong></h3><p><code>baloo</code> 是 KDE 的文件索引服务，能加快文件搜索的速度，但可能会时不时产生大量硬盘读写而导致图形界面卡顿。可以用下面的命令禁用之：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">balooctl <span class=\"hljs-built_in\">disable</span><br></code></pre></td></tr></table></figure>\n<h3 id=\"为-pacman-启用多线程下载（可选）\"><a href=\"#为-pacman-启用多线程下载（可选）\" class=\"headerlink\" title=\"为 pacman 启用多线程下载（可选）\"></a><strong>为 pacman 启用多线程下载（可选）</strong></h3><p>执行下面的命令下载 axel</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">sudo pacman -S axel<br></code></pre></td></tr></table></figure>\n<p>编辑 <code>/etc/pacman.conf</code> 文件（在第 21 行）:</p>\n<figure class=\"highlight perl\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs perl\">XferCommand = <span class=\"hljs-regexp\">/usr/</span>bin/axel -n <span class=\"hljs-number\">10</span> -o %o %u<br></code></pre></td></tr></table></figure>\n<p>编辑 <code>/etc/makepkg.conf</code> 文件（在第 11-16 行）:</p>\n<figure class=\"highlight lisp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs lisp\">DLAGENTS=(&#x27;file:<span class=\"hljs-symbol\">:/usr/bin/curl</span> -gqC - -o %o %u&#x27;<br>&#x27;ftp:<span class=\"hljs-symbol\">:/usr/bin/axel</span> -n <span class=\"hljs-number\">10</span> -o %o %u&#x27;<br>&#x27;http:<span class=\"hljs-symbol\">:/usr/bin/axel</span> -n <span class=\"hljs-number\">10</span> -o %o %u&#x27;<br>&#x27;https:<span class=\"hljs-symbol\">:/usr/bin/axel</span> -n <span class=\"hljs-number\">10</span> -o %o %u&#x27;<br>&#x27;rsync:<span class=\"hljs-symbol\">:/usr/bin/rsync</span> --no-motd -z %u %o&#x27;<br>&#x27;scp:<span class=\"hljs-symbol\">:/usr/bin/scp</span> -C %u %o&#x27;)<br></code></pre></td></tr></table></figure>\n<p><strong>注意某些软件包如 <code>rider</code> 和 <code>qqmusic-bin</code> 等下载源不支持 axel，启用多线程下载后可能会导致构建失败</strong></p>\n<h3 id=\"重新开启-Secure-Boot（未测试）\"><a href=\"#重新开启-Secure-Boot（未测试）\" class=\"headerlink\" title=\"重新开启 Secure Boot（未测试）\"></a><strong>重新开启 Secure Boot（未测试）</strong></h3><p>如果想在开启 Secure Boot 的情况下登录进 Manjaro Linux，可以使用经过微软签名的 PreLoader 或者 shim，然后在 UEFI 设置中将 Secure Boot 级别设置为 Microsoft &amp; 3rd Party CA</p>\n<p>具体教程参考以下网址：</p>\n<p>Secure Boot — ArchWiki</p>\n<p><a href=\"https://wiki.archlinux.org/index.php/Unified_Extensible_Firmware_Interface/Secure_Boot#Microsoft_Windows\">https://wiki.archlinux.org/index.php/Unified_Extensible_Firmware_Interface/Secure_Boot#Microsoft_Windows</a></p>\n<h3 id=\"Git-配置用户名、邮箱\"><a href=\"#Git-配置用户名、邮箱\" class=\"headerlink\" title=\"Git 配置用户名、邮箱\"></a><strong>Git 配置用户名、邮箱</strong></h3><p>配置用户名、邮箱：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">git config --global user.name <span class=\"hljs-string\">&quot;(user_name)&quot;</span><br>git config --global user.email <span class=\"hljs-string\">&quot;(user_email)&quot;</span><br></code></pre></td></tr></table></figure>\n<p>Git 使用教程参考以下网址：</p>\n<p>菜鸟教程 — Git 教程</p>\n<p><a href=\"https://www.runoob.com/git/git-tutorial.html\">https://www.runoob.com/git/git-tutorial.html</a></p>\n<h3 id=\"使用-SSH-连接到-Github\"><a href=\"#使用-SSH-连接到-Github\" class=\"headerlink\" title=\"使用 SSH 连接到 Github\"></a><strong>使用 SSH 连接到 Github</strong></h3><p>推荐使用 SSH 连接到 Github，其安全性更高，访问速度较快且更加稳定</p>\n<p>配置参考以下网址：</p>\n<p>Github Docs — 使用 SSH 连接到 Github</p>\n<p><a href=\"https://docs.github.com/cn/github/authenticating-to-github/connecting-to-github-with-ssh\">https://docs.github.com/cn/github/authenticating-to-github/connecting-to-github-with-ssh</a></p>\n<p>在 Linux 上主要是以下内容：</p>\n<h4 id=\"生成新-SSH-密钥并添加到-ssh-agent\"><a href=\"#生成新-SSH-密钥并添加到-ssh-agent\" class=\"headerlink\" title=\"生成新 SSH 密钥并添加到 ssh-agent\"></a><strong>生成新 SSH 密钥并添加到 ssh-agent</strong></h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">ssh-keygen -t ed25519 -C <span class=\"hljs-string\">&quot;(user_email)&quot;</span><br><span class=\"hljs-built_in\">eval</span> <span class=\"hljs-string\">&quot;<span class=\"hljs-subst\">$(ssh-agent -s)</span>&quot;</span><br>ssh-add ~/.ssh/id_ed25519<br></code></pre></td></tr></table></figure>\n<p>第一步会提示输入安全密码，可以按 <code>Enter</code> 跳过，不影响后续操作和使用</p>\n<h4 id=\"新增-SSH-密钥到-GitHub-帐户\"><a href=\"#新增-SSH-密钥到-GitHub-帐户\" class=\"headerlink\" title=\"新增 SSH 密钥到 GitHub 帐户\"></a><strong>新增 SSH 密钥到 GitHub 帐户</strong></h4><p>通过 <code>cat ~/.ssh/id_ed25519.pub</code> 查看公钥并复制到 Github 账户下的“设置 &gt;&gt; SSH and GPG keys”中</p>\n<h4 id=\"测试-SSH-连接\"><a href=\"#测试-SSH-连接\" class=\"headerlink\" title=\"测试 SSH 连接\"></a><strong>测试 SSH 连接</strong></h4><p>在终端中输入：</p>\n<figure class=\"highlight angelscript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs angelscript\">ssh -T <span class=\"hljs-symbol\">git@</span>github.com<br></code></pre></td></tr></table></figure>\n<p>这一步要输入 <code>yes</code> 确定</p>\n<p><strong>注意 Linux 上和 Windows 上用的是不同的密钥</strong></p>\n<h2 id=\"一些有用的命令总结\"><a href=\"#一些有用的命令总结\" class=\"headerlink\" title=\"一些有用的命令总结\"></a><strong>一些有用的命令总结</strong></h2><h3 id=\"获取设备信息\"><a href=\"#获取设备信息\" class=\"headerlink\" title=\"获取设备信息\"></a><strong>获取设备信息</strong></h3><h4 id=\"简要信息\"><a href=\"#简要信息\" class=\"headerlink\" title=\"简要信息\"></a><strong>简要信息</strong></h4><p>在终端中输入：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">screenfetch<br></code></pre></td></tr></table></figure>\n<p>或者：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">sudo inxi -b<br></code></pre></td></tr></table></figure>\n<h4 id=\"详细信息\"><a href=\"#详细信息\" class=\"headerlink\" title=\"详细信息\"></a><strong>详细信息</strong></h4><p>在终端中输入：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">sudo inxi -Fa<br></code></pre></td></tr></table></figure>\n<h4 id=\"命令行进程查看器\"><a href=\"#命令行进程查看器\" class=\"headerlink\" title=\"命令行进程查看器\"></a><strong>命令行进程查看器</strong></h4><p>在终端中输入：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">htop<br></code></pre></td></tr></table></figure>\n<h4 id=\"命令行音量调节器\"><a href=\"#命令行音量调节器\" class=\"headerlink\" title=\"命令行音量调节器\"></a><strong>命令行音量调节器</strong></h4><p>在终端中输入：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">alsamixer<br></code></pre></td></tr></table></figure>\n<h4 id=\"内存大小\"><a href=\"#内存大小\" class=\"headerlink\" title=\"内存大小\"></a><strong>内存大小</strong></h4><p>在终端中输入：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">free<br></code></pre></td></tr></table></figure>\n<h4 id=\"上一次关机的系统日志\"><a href=\"#上一次关机的系统日志\" class=\"headerlink\" title=\"上一次关机的系统日志\"></a><strong>上一次关机的系统日志</strong></h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">journalctl -rb -1<br></code></pre></td></tr></table></figure>\n<h3 id=\"查看并转换编码\"><a href=\"#查看并转换编码\" class=\"headerlink\" title=\"查看并转换编码\"></a><strong>查看并转换编码</strong></h3><p>查看编码的命令为：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">file -i (file_name)<br></code></pre></td></tr></table></figure>\n<p>其中 <code>charset</code> 一栏的输出即为文件编码</p>\n<p>转换编码可以使用系统预装的 <code>iconv</code>，方法为：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">iconv -f (from_encoding) -t (to_encoding) (from_file_name) -o (to_file_name)<br></code></pre></td></tr></table></figure>\n<p>该方法适合对文本文件转换编码，对 ZIP 压缩包和 PDF 文件等二进制文件则无法使用</p>\n<p><code>iconv</code> 支持的编码格式可以用 <code>iconv -l</code> 查看</p>\n<h3 id=\"转换图片格式\"><a href=\"#转换图片格式\" class=\"headerlink\" title=\"转换图片格式\"></a><strong>转换图片格式</strong></h3><p>批量将图片从 PNG 格式转换为 JPG 格式：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">ls -1 *.png | xargs -n 1 bash -c <span class=\"hljs-string\">&#x27;convert &quot;$0&quot; &quot;$&#123;0%.png&#125;.jpg&quot;&#x27;</span><br></code></pre></td></tr></table></figure>\n<h3 id=\"批量更改文件名\"><a href=\"#批量更改文件名\" class=\"headerlink\" title=\"批量更改文件名\"></a><strong>批量更改文件名</strong></h3><p>批量将文件名中的空格改成下划线：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-keyword\">for</span> file <span class=\"hljs-keyword\">in</span> *; <span class=\"hljs-keyword\">do</span> mv -n <span class=\"hljs-string\">&quot;<span class=\"hljs-variable\">$file</span>&quot;</span> `<span class=\"hljs-built_in\">echo</span> <span class=\"hljs-variable\">$file</span> | tr <span class=\"hljs-string\">&#x27; &#x27;</span> <span class=\"hljs-string\">&#x27;_&#x27;</span>`; <span class=\"hljs-keyword\">done</span><br></code></pre></td></tr></table></figure>\n<p><strong>Linux 的内存策略可以参考这个网站：<a href=\"https://www.linuxatemyram.com/\">https://www.linuxatemyram.com/</a></strong></p>\n<h3 id=\"命令行解压-ZIP-压缩包\"><a href=\"#命令行解压-ZIP-压缩包\" class=\"headerlink\" title=\"命令行解压 ZIP 压缩包\"></a><strong>命令行解压 ZIP 压缩包</strong></h3><p>建议使用系统预装的 <code>unar</code>，因为它可以自动检测文件编码（系统右键菜单默认的 Ark 不具备这个功能，可能导致乱码）：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">unar (file_name).zip<br></code></pre></td></tr></table></figure>\n<h3 id=\"设置命令别名\"><a href=\"#设置命令别名\" class=\"headerlink\" title=\"设置命令别名\"></a><strong>设置命令别名</strong></h3><p>在 <code>~/.bashrc</code> 中添加一句 <code>alias (new_command)=(old-command)</code>，这样直接输入 <code>new_command</code> 即等效于输入 <code>old_command</code></p>\n<h2 id=\"美化\"><a href=\"#美化\" class=\"headerlink\" title=\"美化\"></a><strong>美化</strong></h2><h3 id=\"自定义壁纸\"><a href=\"#自定义壁纸\" class=\"headerlink\" title=\"自定义壁纸\"></a><strong>自定义壁纸</strong></h3><p>桌面壁纸可以在 <a href=\"https://www.pling.com/\">pling.com</a> 下载，专门为 Manjaro 定制的壁纸可以在这里找到：</p>\n<p>Wallpapers Manjaro — pling.com</p>\n<p><a href=\"https://www.pling.com/browse/cat/309/order/latest/\">https://www.pling.com/browse/cat/309/order/latest/</a></p>\n<p>默认的壁纸保存位置为 <code>/usr/share/wallpapers/</code></p>\n<p>还可以使用包管理器（pacman/sudo pacman/pamac）下载壁纸，用“添加/删除软件”或 <code>pamac search wallpaper</code> 查找</p>\n<p>右键点击桌面得到桌面菜单，点击“配置桌面和壁纸”即可选择想要的壁纸，位置建议选择“缩放并裁剪”</p>\n<h3 id=\"添加用户图标\"><a href=\"#添加用户图标\" class=\"headerlink\" title=\"添加用户图标\"></a><strong>添加用户图标</strong></h3><p>系统设置 &gt;&gt; 用户账户 &gt;&gt; 图像</p>\n<h3 id=\"开机登录美化\"><a href=\"#开机登录美化\" class=\"headerlink\" title=\"开机登录美化\"></a><strong>开机登录美化</strong></h3><p>开机与关机 &gt;&gt; 登录屏幕（SDDM） &gt;&gt; Breeze 或者 Fluent</p>\n<p>外观 &gt;&gt; 欢迎屏幕 &gt;&gt; Snowy Night Miku、Manjaro Linux Reflection Splashscreen、ManjaroLogo Black、Plasma 5 Manjaro Splashscreen White Blur</p>\n<p><strong>现在新设计的登录屏幕（SDDM）和欢迎屏幕已经非常美观且改进了翻译问题，最方便的方法就是登录屏幕（SDDM）选择 Breath 2，欢迎屏幕选择 Breath2 2021</strong></p>\n<h4 id=\"SDDM-时间显示调整为-24-小时制\"><a href=\"#SDDM-时间显示调整为-24-小时制\" class=\"headerlink\" title=\"SDDM 时间显示调整为 24 小时制\"></a><strong>SDDM 时间显示调整为 24 小时制</strong></h4><p>更改 <code>/usr/share/sddm/themes/(theme_name)/components/Clock.qml</code> 或 <code>/usr/share/sddm/themes/(theme_name)/Clock.qml</code> 中的 <code>Qt.formatTime</code> 一行：</p>\n<figure class=\"highlight reasonml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs reasonml\">text: <span class=\"hljs-module-access\"><span class=\"hljs-module\"><span class=\"hljs-identifier\">Qt</span>.</span></span>format<span class=\"hljs-constructor\">Time(<span class=\"hljs-params\">timeSource</span>.<span class=\"hljs-params\">data</span>[<span class=\"hljs-string\">&quot;Local&quot;</span>][<span class=\"hljs-string\">&quot;DateTime&quot;</span>])</span><br></code></pre></td></tr></table></figure>\n<p>将其改为：</p>\n<figure class=\"highlight reasonml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs reasonml\">text: <span class=\"hljs-module-access\"><span class=\"hljs-module\"><span class=\"hljs-identifier\">Qt</span>.</span></span>format<span class=\"hljs-constructor\">Time(<span class=\"hljs-params\">timeSource</span>.<span class=\"hljs-params\">data</span>[<span class=\"hljs-string\">&quot;Local&quot;</span>][<span class=\"hljs-string\">&quot;DateTime&quot;</span>], <span class=\"hljs-string\">&quot;hh:mm:ss&quot;</span>)</span><br></code></pre></td></tr></table></figure>\n<p>保存重启即可</p>\n<h3 id=\"主题-Mac-风格美化（可选）\"><a href=\"#主题-Mac-风格美化（可选）\" class=\"headerlink\" title=\"主题 Mac 风格美化（可选）\"></a><strong>主题 Mac 风格美化（可选）</strong></h3><p>参考以下网址：</p>\n<p>KDE 桌面的 Mac 化</p>\n<p><a href=\"https://www.cnblogs.com/luoshuitianyi/p/10587788.html\">https://www.cnblogs.com/luoshuitianyi/p/10587788.html</a></p>\n<p>其中 Plasma 主题、GTK 主题和图标主题分别选择：<br>Plasma Theme: Mojave-CT<br>GTK Theme: Mojave-light-alt [GTK2/3]<br>Icon Theme: La Capitaine</p>\n<p>KDE 桌面美化指南</p>\n<p><a href=\"https://acherstyx.github.io/2020/06/30/KDE%E6%A1%8C%E9%9D%A2%E7%BE%8E%E5%8C%96%E6%8C%87%E5%8D%97/\">https://acherstyx.github.io/2020/06/30/KDE%E6%A1%8C%E9%9D%A2%E7%BE%8E%E5%8C%96%E6%8C%87%E5%8D%97/</a></p>\n<p>Latte-Dock 的推荐设置：</p>\n<p>行为：位置 &gt;&gt; 底部，可见性 &gt;&gt; 自动隐藏，延迟 &gt;&gt; 显示 &gt;&gt; none</p>\n<p>外观：绝对大小 &gt;&gt; 96，背景大小 &gt;&gt; 10%</p>\n<p><strong>不想使用 Mac 风格主题但又想使用浅色主题时，建议使用 Manjaro 新官方主题 Breath2 2021（也有深浅搭配和深色主题可选）或 KDE 官方主题 Breeze，并将终端（Konsole 和 Yakuake）主题改为“白底黑字”，背景透明度选择 20%</strong></p>\n<h4 id=\"配置桌面小部件\"><a href=\"#配置桌面小部件\" class=\"headerlink\" title=\"配置桌面小部件\"></a><strong>配置桌面小部件</strong></h4><p>右键点击桌面 &gt;&gt; 添加部件 &gt;&gt; 获取新部件 &gt;&gt; 下载新 Plasma 部件</p>\n<p>在这里可以下载桌面小部件，并在“添加部件”处添加，例如 Simple System Monitor</p>\n<h4 id=\"zsh-与-Oh-My-Zsh-配置（可选）\"><a href=\"#zsh-与-Oh-My-Zsh-配置（可选）\" class=\"headerlink\" title=\"zsh 与 Oh-My-Zsh 配置（可选）\"></a><strong>zsh 与 Oh-My-Zsh 配置（可选）</strong></h4><p>Konsole &gt;&gt; 设置 &gt;&gt; 编辑当前方案 &gt;&gt; 常规 &gt;&gt; 命令 &gt;&gt; <code>usr/bin/zsh</code></p>\n<p>安装 Oh-My-Zsh，执行：（不推荐用包管理器安装）</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">bash -c <span class=\"hljs-string\">&quot;<span class=\"hljs-subst\">$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)</span>&quot;</span><br></code></pre></td></tr></table></figure>\n<p>安装插件，执行：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">git <span class=\"hljs-built_in\">clone</span> https://github.com/zsh-users/zsh-syntax-highlighting.git <span class=\"hljs-variable\">$ZSH_CUSTOM</span>/plugins/zsh-syntax-highlightinggit <span class=\"hljs-built_in\">clone</span> https://github.com/zsh-users/zsh-autosuggestions <span class=\"hljs-variable\">$ZSH_CUSTOM</span>/plugins/zsh-autosuggestions<br></code></pre></td></tr></table></figure>\n<p>编辑设置文件：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">vim ~/.zshrc<br></code></pre></td></tr></table></figure>\n<p>选择 Oh-My-Zsh 主题：</p>\n<figure class=\"highlight ini\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs ini\"><span class=\"hljs-attr\">ZSH_THEME</span>=<span class=\"hljs-string\">&quot;geoffgarside&quot;</span><br></code></pre></td></tr></table></figure>\n<p>选择 Oh-My-Zsh 插件：</p>\n<figure class=\"highlight ini\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs ini\"><span class=\"hljs-attr\">plugins</span>=(git zsh-autosuggestions zsh-syntax-highlighting)<br></code></pre></td></tr></table></figure>\n<p>更新 Oh-My-Zsh，执行：</p>\n<figure class=\"highlight ebnf\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs ebnf\"><span class=\"hljs-attribute\">omz update</span><br></code></pre></td></tr></table></figure>\n<p>卸载 Oh-My-Zsh，执行:</p>\n<figure class=\"highlight ebnf\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs ebnf\"><span class=\"hljs-attribute\">uninstall_oh_my_zsh</span><br></code></pre></td></tr></table></figure>\n<p><strong>如果遇到开关机的时候报错：<code>\\[FAILED] failed to start pkgfile database update</code>，卸载 <code>manjaro-zsh-config</code>，这会卸载 <code>zsh</code> 及其所有依赖，然后重新安装 <code>zsh</code></strong></p>\n<h3 id=\"GRUB-美化\"><a href=\"#GRUB-美化\" class=\"headerlink\" title=\"GRUB 美化\"></a><strong>GRUB 美化</strong></h3><p>选择主题 grub2-themes ，下载地址如下：</p>\n<p><a href=\"https://github.com/vinceliuice/grub2-themes\">https://github.com/vinceliuice/grub2-themes</a></p>\n<p>以 Vimix grub theme （2K，黑白图标） 为例，解压后在文件夹内执行：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">sudo ./install.sh -b -t vimix -i white -s 2k<br></code></pre></td></tr></table></figure>\n<p>删除多余启动条目，需要修改<code>/boot/grub/grub.cfg</code></p>\n<p>删除整一段 <code>submenu &#39;Manjaro Linux 的高级选项&#39;</code>，删除整一段 <code>UEFI Firmware Settings</code>，并将 <code>Windows Boot Manager (on /dev/nvme0n1p1)</code> 改为 <code>Windows</code></p>\n<p>恢复默认的<code>/boot/grub/grub.cfg</code>需要输入：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-built_in\">echo</span> GRUB_DISABLE_OS_PROBER=<span class=\"hljs-literal\">false</span> | sudo tee -a /etc/default/grub &amp;&amp; sudo update-grub<br></code></pre></td></tr></table></figure>\n<h3 id=\"pacman-添加吃豆人彩蛋\"><a href=\"#pacman-添加吃豆人彩蛋\" class=\"headerlink\" title=\"pacman 添加吃豆人彩蛋\"></a><strong>pacman 添加吃豆人彩蛋</strong></h3><p>编辑 <code>/etc/pacman.conf</code></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">sudo vim /etc/pacman.conf<br></code></pre></td></tr></table></figure>\n<p>去掉 <code>Color</code> 前面的注释，并在下一行加入：</p>\n<figure class=\"highlight ebnf\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs ebnf\"><span class=\"hljs-attribute\">ILoveCandy</span><br></code></pre></td></tr></table></figure>\n<p>即可添加吃豆人彩蛋</p>\n<h3 id=\"安装-KDE-的-Wayland-支持（不推荐）\"><a href=\"#安装-KDE-的-Wayland-支持（不推荐）\" class=\"headerlink\" title=\"安装 KDE 的 Wayland 支持（不推荐）\"></a><strong>安装 KDE 的 Wayland 支持（不推荐）</strong></h3><p>与 Xorg 相比，Wayland 对触屏的支持更佳，但某些应用在 Wayland 上会有兼容性问题，目前 KDE 对 Wayland 的支持处于能用但还不太完善的状态</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">sudo pacman -S plasma-wayland-session<br></code></pre></td></tr></table></figure>\n<p>安装后即可在登录界面选择 Wayland 会话</p>\n<h2 id=\"下载软件\"><a href=\"#下载软件\" class=\"headerlink\" title=\"下载软件\"></a><strong>下载软件</strong></h2><p><strong>能用包管理器的尽量用包管理器安装！</strong></p>\n<h3 id=\"PGP-密钥无法导入\"><a href=\"#PGP-密钥无法导入\" class=\"headerlink\" title=\"PGP 密钥无法导入\"></a><strong>PGP 密钥无法导入</strong></h3><p>如果安装软件时需要导入 PGP 密钥而发生 <code>gpg: 从公钥服务器接收失败：一般错误</code> 的问题，将 PGP 密钥复制下来并运行：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">gpg --keyserver p80.pool.sks-keyservers.net --recv-keys (pgp_key)<br></code></pre></td></tr></table></figure>\n<p>再重新安装软件即可</p>\n<h3 id=\"安装软件后在开始菜单中找不到图标\"><a href=\"#安装软件后在开始菜单中找不到图标\" class=\"headerlink\" title=\"安装软件后在开始菜单中找不到图标\"></a><strong>安装软件后在开始菜单中找不到图标</strong></h3><p>执行命令：</p>\n<figure class=\"highlight n1ql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs n1ql\">sudo <span class=\"hljs-keyword\">update</span>-desktop-<span class=\"hljs-keyword\">database</span><br></code></pre></td></tr></table></figure>\n<h3 id=\"语言包\"><a href=\"#语言包\" class=\"headerlink\" title=\"语言包\"></a><strong>语言包</strong></h3><p>系统设置 &gt;&gt; 语言包 &gt;&gt; 右上角点击“已安装的软件包”安装语言包</p>\n<h3 id=\"Kate-插件下载\"><a href=\"#Kate-插件下载\" class=\"headerlink\" title=\"Kate 插件下载\"></a><strong>Kate 插件下载</strong></h3><p>下载 Kate 插件：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">sudo pacman -S aspell hspell libvoikko<br></code></pre></td></tr></table></figure>\n<h3 id=\"字体安装\"><a href=\"#字体安装\" class=\"headerlink\" title=\"字体安装\"></a><strong>字体安装</strong></h3><p>Manjaro KDE 支持直接在 Dolphin 的右键菜单中安装 TTF 和 OTF 字体，但不支持 TTC 字体集，TTC 字体集可以在系统字体安装的默认文件夹 <code>/usr/share/fonts</code> 中用命令 <code>fc-cache -fv</code> 安装</p>\n<p><strong>注意不管是 Windows 还是 Manjaro Linux 都要将字体“为所有用户安装”，尤其是 Windows 11 右键直接安装是安装到个人用户目录 <code>C:\\Users\\user_name\\AppData\\Local\\Microsoft\\Windows\\Fonts</code> 而非系统目录 <code>C:\\Windows\\Fonts</code></strong></p>\n<h3 id=\"安装微软字体\"><a href=\"#安装微软字体\" class=\"headerlink\" title=\"安装微软字体\"></a><strong>安装微软字体</strong></h3><p>安装方法如下：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">sudo mkdir /usr/share/fonts/winfonts<br>sudo cp (win-font-path)/* /usr/share/fonts/winfonts/<br><span class=\"hljs-built_in\">cd</span> /usr/share/fonts/winfonts/<br>fc-cache -fv<br></code></pre></td></tr></table></figure>\n<p>这样就可以安装微软雅黑、宋体、黑体等字体了</p>\n<p><strong>注意需要排除掉 MS Gothic、Yu Gothic 和 Malgun Gothic 字体，因它们只有部分日/韩文汉字字形（与中文汉字字形一样的会被排除，最后导致部分中文汉字显示为日/韩文字形）</strong></p>\n<h3 id=\"安装-Google-Noto-字体\"><a href=\"#安装-Google-Noto-字体\" class=\"headerlink\" title=\"安装 Google Noto 字体\"></a><strong>安装 Google Noto 字体</strong></h3><p>命令行安装：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">sudo pacman -S noto-fonts noto-fonts-cjk<br></code></pre></td></tr></table></figure>\n<p>所有语言字体的下载地址如下：</p>\n<p>Google Noto Fonts</p>\n<p><a href=\"https://www.google.com/get/noto/\">https://www.google.com/get/noto/</a></p>\n<p>中文（CJK）字体的下载地址如下：</p>\n<p><a href=\"https://www.google.com/get/noto/help/cjk/\">https://www.google.com/get/noto/help/cjk/</a></p>\n<h3 id=\"更改程序和终端默认中文字体\"><a href=\"#更改程序和终端默认中文字体\" class=\"headerlink\" title=\"更改程序和终端默认中文字体\"></a><strong>更改程序和终端默认中文字体</strong></h3><p>安装的 Noto Sans CJK 字体可能在某些情况下（框架未定义地区）汉字字形与标准形态不符，例如门、关、复等字字形与规范中文不符</p>\n<p>这是因为每个程序中可以设置不同的默认字体，而这些字体的属性由 fontconfig 控制，其使用顺序是据地区代码以 A-Z 字母表顺序成默认排序，由于 <code>ja</code> 在 <code>zh</code> 之前，故优先显示日文字形</p>\n<p>解决方法是手动修改字体设置文件：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">sudo vim /etc/fonts/conf.d/64-language-selector-prefer.conf<br></code></pre></td></tr></table></figure>\n<p>并加入以下内容：</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs xml\"><span class=\"hljs-meta\">&lt;?xml version=&quot;1.0&quot;?&gt;</span><br><span class=\"hljs-meta\">&lt;!DOCTYPE <span class=\"hljs-meta-keyword\">fontconfig</span> <span class=\"hljs-meta-keyword\">SYSTEM</span> <span class=\"hljs-meta-string\">&quot;fonts.dtd&quot;</span>&gt;</span><br><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">fontconfig</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">alias</span>&gt;</span><br>        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">family</span>&gt;</span>sans-serif<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">family</span>&gt;</span><br>        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">prefer</span>&gt;</span><br>            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">family</span>&gt;</span>Noto Sans CJK SC<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">family</span>&gt;</span><br>            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">family</span>&gt;</span>Noto Sans CJK TC<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">family</span>&gt;</span><br>            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">family</span>&gt;</span>Noto Sans CJK HK<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">family</span>&gt;</span><br>            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">family</span>&gt;</span>Noto Sans CJK JP<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">family</span>&gt;</span><br>            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">family</span>&gt;</span>Noto Sans CJK KR<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">family</span>&gt;</span><br>        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">prefer</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">alias</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">alias</span>&gt;</span><br>        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">family</span>&gt;</span>serif<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">family</span>&gt;</span><br>        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">prefer</span>&gt;</span><br>            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">family</span>&gt;</span>Noto Serif CJK SC<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">family</span>&gt;</span><br>            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">family</span>&gt;</span>Noto Serif CJK TC<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">family</span>&gt;</span><br>            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">family</span>&gt;</span>Noto Serif CJK HK<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">family</span>&gt;</span><br>            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">family</span>&gt;</span>Noto Serif CJK JP<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">family</span>&gt;</span><br>            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">family</span>&gt;</span>Noto Serif CJK KR<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">family</span>&gt;</span><br>        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">prefer</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">alias</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">alias</span>&gt;</span><br>        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">family</span>&gt;</span>monospace<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">family</span>&gt;</span><br>        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">prefer</span>&gt;</span><br>            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">family</span>&gt;</span>Noto Sans Mono CJK SC<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">family</span>&gt;</span><br>            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">family</span>&gt;</span>Noto Sans Mono CJK TC<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">family</span>&gt;</span><br>            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">family</span>&gt;</span>Noto Sans Mono CJK HK<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">family</span>&gt;</span><br>            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">family</span>&gt;</span>Noto Sans Mono CJK JP<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">family</span>&gt;</span><br>            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">family</span>&gt;</span>Noto Sans Mono CJK KR<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">family</span>&gt;</span><br>        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">prefer</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">alias</span>&gt;</span><br><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">fontconfig</span>&gt;</span><br></code></pre></td></tr></table></figure>\n<p>保存退出即可</p>\n<p><strong>另一种处理方法是只安装简体中文字体，比如 Noto Sans SC（注意没有 CJK）</strong></p>\n<h3 id=\"安装中文输入法\"><a href=\"#安装中文输入法\" class=\"headerlink\" title=\"安装中文输入法\"></a><strong>安装中文输入法</strong></h3><p>推荐使用 Fcitx5:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">sudo pacman -S fcitx5 fcitx5-chinese-addons manjaro-asian-input-support-fcitx5 fcitx5-gtk fcitx5-qt fcitx5-configtool<br></code></pre></td></tr></table></figure>\n<p>如果无法启动输入法，在系统设置 &gt;&gt; 区域设置 &gt;&gt; 输入法 &gt;&gt; 添加输入法中手动添加“拼音”</p>\n<p>对应的 git 版本为：（需要使用 Arch Linux CN 源）</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">sudo pacman -S fcitx5-git fcitx5-chinese-addons-git manjaro-asian-input-support-fcitx5 fcitx5-gtk-git fcitx5-qt5-git fcitx5-configtool-git<br></code></pre></td></tr></table></figure>\n<p>可以添加词库：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">sudo pacman -S fcitx5-pinyin-moegirl fcitx5-pinyin-zhwiki<br></code></pre></td></tr></table></figure>\n<p>一个稳定的替代版本是 Fcitx 4.2.9.8-1：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">sudo pacman -S fcitx-im fcitx-configtool fcitx-cloudpinyin manjaro-asian-input-support-fcitx<br></code></pre></td></tr></table></figure>\n<p>可以配合 googlepinyin 或 sunpinyin 使用，即执行：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">sudo pacman -S fcitx-googlepinyin<br></code></pre></td></tr></table></figure>\n<p>或者：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">sudo pacman -S fcitx-sunpinyin<br></code></pre></td></tr></table></figure>\n<p>也可以用 <code>sudo pacman -S sunpinyin</code> 安装 Sunpinyin</p>\n<p><strong>安装输入法之后需要重启电脑才能生效</strong></p>\n<h3 id=\"安装其它软件\"><a href=\"#安装其它软件\" class=\"headerlink\" title=\"安装其它软件\"></a><strong>安装其它软件</strong></h3><p>以下命令中的 <code>pamac install</code> 也可以在“添加/删除软件”（即 pamac）中搜索安装，如果不是 AUR 仓库中的软件，也可以用 <code>sudo pacman -S</code> 安装</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">pamac install geogebra stellarium typora v2ray qv2ray-dev-git vlc thunderbird qbittorrent baidunetdisk-bin<br></code></pre></td></tr></table></figure>\n<p><strong>这里的 qv2ray-dev-git 一定要选择 Archlinux CN 软件源的版本</strong></p>\n<h4 id=\"用-debtap-安装-deb-包（不推荐）\"><a href=\"#用-debtap-安装-deb-包（不推荐）\" class=\"headerlink\" title=\"用 debtap 安装 .deb 包（不推荐）\"></a><strong>用 debtap 安装 <code>.deb</code> 包（不推荐）</strong></h4><p>首先要下载并更新 debtap 包：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">pamac install debtap<br>sudo debtap -u<br></code></pre></td></tr></table></figure>\n<p><strong>运行 <code>sudo debtap -u</code> 时建议连接北京大学校园网</strong></p>\n<p>进入含有 <code>.deb</code> 安装包的文件夹，输入：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">sudo debtap (package_name).deb<br></code></pre></td></tr></table></figure>\n<p>系统会询问三个问题：文件名随便写，协议写 <code>GPL</code> 即可，编辑文件直接按 <code>Enter</code> 跳过</p>\n<p>此处会生成一个 <code>tar.zst</code> 包，双击打开（右键用“软件安装程序”打开）即可安装</p>\n<h3 id=\"安装-TeX-Live\"><a href=\"#安装-TeX-Live\" class=\"headerlink\" title=\"安装 TeX Live\"></a><strong>安装 TeX Live</strong></h3><p>推荐从 ISO 安装 TeX Live</p>\n<p>首先在<a href=\"https://mirrors.tuna.tsinghua.edu.cn/CTAN/systems/texlive/Images/\">清华大学镜像站</a>或者<a href=\"https://mirrors.sjtug.sjtu.edu.cn/ctan/systems/texlive/Images/\">上海交大镜像站</a>下载 TeX Live ISO，文件名为 <code>texlive.iso</code>（和 <code>texlive(year).iso</code>、<code>texlive(year)-(date).iso</code> 是一致的）</p>\n<p>打开终端，运行：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">sudo mount -t iso9660 -o ro,loop,noauto (texlive_path)/texlive.iso /mnt<br></code></pre></td></tr></table></figure>\n<h4 id=\"使用图形界面安装\"><a href=\"#使用图形界面安装\" class=\"headerlink\" title=\"使用图形界面安装\"></a><strong>使用图形界面安装</strong></h4><p>首先要检查是否安装 tcl 和 tk：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">pamac install tcl tk<br></code></pre></td></tr></table></figure>\n<p>进入镜像文件夹，运行：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">sudo perl install-tl -gui<br></code></pre></td></tr></table></figure>\n<p>即可在图形界面下载 TeX Live（如果不加 <code>sudo</code> 则只能将其安装到 <code>/home/(user_name)/</code> 下的文件夹且无法勾选 Create symlinks in standard directories: 一项），高级设置需要点击左下角的 Advanced 按钮</p>\n<p><strong>记住勾选 Create symlinks in standard directories 一项（自动添加到 PATH），Specify directories 选择默认文件夹即可，之后不需要自己添加 PATH</strong></p>\n<h4 id=\"使用命令行界面安装\"><a href=\"#使用命令行界面安装\" class=\"headerlink\" title=\"使用命令行界面安装\"></a><strong>使用命令行界面安装</strong></h4><p>进入镜像文件夹，运行：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">sudo perl install-tl -gui text<br></code></pre></td></tr></table></figure>\n<p>用大写字母命令控制安装：</p>\n<figure class=\"highlight mathematica\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs mathematica\"><span class=\"hljs-built_in\">D</span> <span class=\"hljs-operator\">&gt;&gt;</span> <span class=\"hljs-number\">1</span> <span class=\"hljs-operator\">&gt;&gt;</span> 输入要安装 <span class=\"hljs-variable\">TeX</span> <span class=\"hljs-variable\">Live</span> 的位置（<span class=\"hljs-variable\">TEXDIR</span>） <span class=\"hljs-operator\">&gt;&gt;</span> <span class=\"hljs-variable\">R</span><br><span class=\"hljs-built_in\">O</span> <span class=\"hljs-operator\">&gt;&gt;</span> <span class=\"hljs-variable\">L</span> <span class=\"hljs-operator\">&gt;&gt;</span> 都选择默认位置（按 <span class=\"hljs-built_in\">Enter</span>） <span class=\"hljs-operator\">&gt;&gt;</span> <span class=\"hljs-variable\">R</span><br><span class=\"hljs-built_in\">I</span><br></code></pre></td></tr></table></figure>\n<p>TEXDIR 建议选择 <code>/home/(user_name)/</code> 下的文件夹以方便查看和修改，TEXMFLOCAL 会随 TEXDIR 自动更改</p>\n<p>CTAN 镜像源可以使用 TeX Live 管理器 tlmgr 更改，更改到清华大学镜像需要在命令行中执行：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">sudo tlmgr option repository https://mirrors.tuna.tsinghua.edu.cn/CTAN/systems/texlive/tlnet<br>sudo tlmgr --repository http://www.texlive.info/tlgpg/ install tlgpg<br></code></pre></td></tr></table></figure>\n<p>可以运行 <code>tex --version</code> 检查是否安装成功，若成功应显示 TeX 的版本号、TeX Live 的版本号和版权信息</p>\n<p>还可以运行 <code>tlmgr --version</code> 和 <code>texdoc (package_name)</code> （选择常见的宏包名称如 <code>texdoc ctex</code>）检查是否安装成功</p>\n<h3 id=\"TeXstudio-安装与配置（可选）\"><a href=\"#TeXstudio-安装与配置（可选）\" class=\"headerlink\" title=\"TeXstudio 安装与配置（可选）\"></a><strong>TeXstudio 安装与配置（可选）</strong></h3><p>安装 TeXstudio：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">pamac install texstudio<br></code></pre></td></tr></table></figure>\n<p>帮助 &gt;&gt; 检查 LaTeX 安装信息</p>\n<p>如果能检测到 LaTeX，说明 TeX Live 安装成功，开始设置</p>\n<p>选项 &gt;&gt; 设置 TeXstudio</p>\n<p>首先在左下角勾选“显示高级选项”</p>\n<p>常规 &gt;&gt; 会话 &gt;&gt; 取消勾选“启动时恢复上一次会话”（可选）</p>\n<p>菜单 &gt;&gt; 数学 &gt;&gt; <code>\\frac&#123;&#125;&#123;&#125;</code> &gt;&gt; <code>\\frac&#123;%|&#125;&#123;&#125;</code></p>\n<p>菜单 &gt;&gt; 数学 &gt;&gt; <code>\\frac&#123;&#125;&#123;&#125;</code> &gt;&gt; <code>\\frac&#123;%|&#125;&#123;&#125;</code></p>\n<p>快捷键 &gt;&gt; 数学 &gt;&gt; 数学字体格式 &gt;&gt; 罗马字体 &gt;&gt; 当前快捷键 &gt;&gt; <code>Alt+Shift+R</code></p>\n<p>编辑器 &gt;&gt; 缩进模式 &gt;&gt; 自动增加或减少缩进</p>\n<p>编辑器 &gt;&gt; 缩进模式 &gt;&gt; 勾选“将缩进替换为空格”和“将文本中的制表符（Tab）替换为空格”</p>\n<p>编辑器 &gt;&gt; 显示行号 &gt;&gt; 所有行号</p>\n<p>编辑器 &gt;&gt; 取消勾选“行内检查”</p>\n<p>高级编辑器 &gt;&gt; 自动保存所有文件 &gt;&gt; 1 分钟</p>\n<p>高级编辑器 &gt;&gt; 破解/变通 &gt;&gt; 取消勾选“自动选择最佳显示选项”，并勾选“禁用字符宽度缓存”和“关闭固定位置模式”</p>\n<p>补全 &gt;&gt; 取消勾选“输入参数”</p>\n<h3 id=\"Thunderbird-配置\"><a href=\"#Thunderbird-配置\" class=\"headerlink\" title=\"Thunderbird 配置\"></a><strong>Thunderbird 配置</strong></h3><h4 id=\"Thunderbird-首选项配置\"><a href=\"#Thunderbird-首选项配置\" class=\"headerlink\" title=\"Thunderbird 首选项配置\"></a><strong>Thunderbird 首选项配置</strong></h4><p>进入首选项界面调整显示：</p>\n<p>首选项 &gt;&gt; 常规 &gt;&gt; Thunderbird 起始页 &gt;&gt; 清空并取消勾选</p>\n<p>首选项 &gt;&gt; 常规 &gt;&gt; 默认搜索引擎 &gt;&gt; 改为 Bing</p>\n<p>首选项 &gt;&gt; 隐私与安全 &gt;&gt; 邮件内容 &gt;&gt; 勾选“允许消息中的远程内容”</p>\n<p>右键点击上方邮件工具栏，选择“自定义”，自行配置即可</p>\n<h4 id=\"Thunderbird-帐号配置\"><a href=\"#Thunderbird-帐号配置\" class=\"headerlink\" title=\"Thunderbird 帐号配置\"></a><strong>Thunderbird 帐号配置</strong></h4><p>点击邮箱帐号，配置“账户设置”如下：</p>\n<p>服务器 &gt;&gt; 服务器设置 &gt;&gt; 每隔 1 分钟检查一次新消息</p>\n<p>服务器 &gt;&gt; 服务器设置 &gt;&gt; 在删除消息时 &gt;&gt; 立即删除</p>\n<h3 id=\"Python-安装与配置\"><a href=\"#Python-安装与配置\" class=\"headerlink\" title=\"Python 安装与配置\"></a><strong>Python 安装与配置</strong></h3><p>Manjaro 预装了 Python，但没有安装包管理器，可以使用 <code>pip</code> 或 <code>conda</code>（即安装 Miniconda）</p>\n<h4 id=\"pip-安装\"><a href=\"#pip-安装\" class=\"headerlink\" title=\"pip 安装\"></a><strong>pip 安装</strong></h4><p>在终端中输入：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">curl https://bootstrap.pypa.io/get-pip.py -o get-pip.py &amp;&amp; python get-pip.py<br></code></pre></td></tr></table></figure>\n<p>即可安装 pip，此时不建议安装 conda，pip 下载包的命令是：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">pip install (package_name)<br></code></pre></td></tr></table></figure>\n<p>这里不建议安装 spyder 和 jupyter notebook，安装最基本的包即可：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">pip install numpy scipy matplotlib astropy autopep8<br></code></pre></td></tr></table></figure>\n<h4 id=\"Miniconda-安装与配置\"><a href=\"#Miniconda-安装与配置\" class=\"headerlink\" title=\"Miniconda 安装与配置\"></a><strong>Miniconda 安装与配置</strong></h4><p>Miniconda 是 Anaconda 的精简版，推荐使用 Miniconda</p>\n<p>下载地址如下：</p>\n<p>Miniconda — Conda documentation</p>\n<p><a href=\"https://docs.conda.io/en/latest/miniconda.html\">https://docs.conda.io/en/latest/miniconda.html</a></p>\n<p>或者在<a href=\"https://mirrors.tuna.tsinghua.edu.cn/#\">清华大学镜像站</a>点击右侧的“获取下载链接”按钮，在“应用软件” &gt;&gt; Conda 里面选择</p>\n<p>安装过程参考以下网址：（Miniconda 和 Anaconda 的安装步骤相同）</p>\n<p>Anaconda Documentation — Installing on Linux</p>\n<p><a href=\"https://docs.anaconda.com/anaconda/install/linux/\">https://docs.anaconda.com/anaconda/install/linux/</a></p>\n<p>输入以下命令：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">vim ~/.condarc<br></code></pre></td></tr></table></figure>\n<p>修改 <code>.condarc</code> 以使用清华大学镜像源：</p>\n<figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs awk\">channels:<br>  - defaults<br>show_channel_urls: true<br>default_channels:<br>  - https:<span class=\"hljs-regexp\">//mi</span>rrors.tuna.tsinghua.edu.cn<span class=\"hljs-regexp\">/anaconda/</span>pkgs/main<br>  - https:<span class=\"hljs-regexp\">//mi</span>rrors.tuna.tsinghua.edu.cn<span class=\"hljs-regexp\">/anaconda/</span>pkgs/r<br>  - https:<span class=\"hljs-regexp\">//mi</span>rrors.tuna.tsinghua.edu.cn<span class=\"hljs-regexp\">/anaconda/</span>pkgs/msys2<br>custom_channels:<br>  conda-forge: https:<span class=\"hljs-regexp\">//mi</span>rrors.tuna.tsinghua.edu.cn<span class=\"hljs-regexp\">/anaconda/</span>cloud<br>  msys2: https:<span class=\"hljs-regexp\">//mi</span>rrors.tuna.tsinghua.edu.cn<span class=\"hljs-regexp\">/anaconda/</span>cloud<br>  bioconda: https:<span class=\"hljs-regexp\">//mi</span>rrors.tuna.tsinghua.edu.cn<span class=\"hljs-regexp\">/anaconda/</span>cloud<br>  menpo: https:<span class=\"hljs-regexp\">//mi</span>rrors.tuna.tsinghua.edu.cn<span class=\"hljs-regexp\">/anaconda/</span>cloud<br>  pytorch: https:<span class=\"hljs-regexp\">//mi</span>rrors.tuna.tsinghua.edu.cn<span class=\"hljs-regexp\">/anaconda/</span>cloud<br>  simpleitk: https:<span class=\"hljs-regexp\">//mi</span>rrors.tuna.tsinghua.edu.cn<span class=\"hljs-regexp\">/anaconda/</span>cloud<br></code></pre></td></tr></table></figure>\n<p>若不用特定的镜像源，改为：</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs yaml\"><span class=\"hljs-attr\">channels:</span><br>  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">defaults</span><br><span class=\"hljs-attr\">ssl_verify:</span> <span class=\"hljs-literal\">true</span><br></code></pre></td></tr></table></figure>\n<p>下载所需要的包：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">conda install numpy scipy matplotlib astropy spyder jupyter<br></code></pre></td></tr></table></figure>\n<p>各个操作系统平台上可下载的包可以在以下网站查询：</p>\n<p>Anaconda Documentation — Anaconda Package Lists</p>\n<p><a href=\"https://docs.anaconda.com/anaconda/packages/pkg-docs/\">https://docs.anaconda.com/anaconda/packages/pkg-docs/</a></p>\n<h4 id=\"Conda-常用命令\"><a href=\"#Conda-常用命令\" class=\"headerlink\" title=\"Conda 常用命令\"></a><strong>Conda 常用命令</strong></h4><p>下载包：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">conda install (package_name)<br></code></pre></td></tr></table></figure>\n<p>下载特定版本的包：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">conda install (package_name)=(version_number)<br></code></pre></td></tr></table></figure>\n<p>更新包：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">conda update (package_name)<br></code></pre></td></tr></table></figure>\n<p>更新所有包：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">conda update --all<br></code></pre></td></tr></table></figure>\n<p>恢复之前的版本：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">conda list --revisions<br>conda install --revision (revision_number)<br></code></pre></td></tr></table></figure>\n<p><strong>如果回滚到早期版本（<code>revision_number</code> 较小）之后又想回到某个高版本（<code>revision_number</code> 较大），必须要把两个版本中的版本都装一遍</strong></p>\n<p>删除所有旧版本的包：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">conda clean -p<br></code></pre></td></tr></table></figure>\n<p>列出所有下载的包：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">conda list<br></code></pre></td></tr></table></figure>\n<h4 id=\"Spyder-配置\"><a href=\"#Spyder-配置\" class=\"headerlink\" title=\"Spyder 配置\"></a><strong>Spyder 配置</strong></h4><p>通用 &gt;&gt; 显示器分辨率 &gt;&gt; 自定义高分辨率缩放 &gt;&gt; 1.0</p>\n<p>外观 &gt;&gt; 语法高亮主题 &gt;&gt; IDLE</p>\n<p>编辑选定的方案：</p>\n<p>文本：</p>\n<figure class=\"highlight less\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs less\">普通文本 <span class=\"hljs-selector-id\">#000000</span><br>注释：<span class=\"hljs-selector-id\">#999999</span>, <span class=\"hljs-selector-tag\">B</span><br>字符串：<span class=\"hljs-selector-id\">#00aa00</span><br>数值：<span class=\"hljs-selector-id\">#aa0000</span><br>关键字：<span class=\"hljs-selector-id\">#ff5500</span>, <span class=\"hljs-selector-tag\">B</span><br>内置：<span class=\"hljs-selector-id\">#990099</span><br>定义：<span class=\"hljs-selector-id\">#0000ff</span><br>实例：<span class=\"hljs-selector-id\">#ff55ff</span>, <span class=\"hljs-selector-tag\">B</span><br></code></pre></td></tr></table></figure>\n<p>高亮：</p>\n<figure class=\"highlight 1c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs 1c\">当前 Cell：<span class=\"hljs-meta\">#ffaaff</span><br>当前行：<span class=\"hljs-meta\">#aaffff</span><br>事件：<span class=\"hljs-meta\">#ffff00</span><br>匹配圆括号：<span class=\"hljs-meta\">#99ff99</span><br>不匹配圆括号：<span class=\"hljs-meta\">#ff9999</span><br>链接：<span class=\"hljs-meta\">#55ff00</span><br></code></pre></td></tr></table></figure>\n<p>编辑器 &gt;&gt; 勾选“显示标签栏”、“显示缩进指导”、“显示行号”、“高亮显示当前行”、“高亮显示当前 Cell”，并把“高亮延迟时间”设定为 100 毫秒</p>\n<p>用 Spyder 打开某个文件需要在终端中输入：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">spyder (file_path)/(file_name)<br></code></pre></td></tr></table></figure>\n<p><strong>目前 Spyder 还不支持 Fcitx/Fcitx5 输入中文字符</strong></p>\n<h3 id=\"Vim-安装插件\"><a href=\"#Vim-安装插件\" class=\"headerlink\" title=\"Vim 安装插件\"></a><strong>Vim 安装插件</strong></h3><p>执行：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">git <span class=\"hljs-built_in\">clone</span> (github_repository_URL) ~/.vim/pack/(plugin_name)/start/(plugin_name)<br>vim -u NONE -c <span class=\"hljs-string\">&quot;helptags ~/.vim/pack/(plugin_name)/start/(plugin_name)/doc&quot;</span> -c q<br></code></pre></td></tr></table></figure>\n<h3 id=\"Visual-Studio-Code-安装与配置\"><a href=\"#Visual-Studio-Code-安装与配置\" class=\"headerlink\" title=\"Visual Studio Code 安装与配置\"></a><strong>Visual Studio Code 安装与配置</strong></h3><h4 id=\"Visual-Studio-Code-安装\"><a href=\"#Visual-Studio-Code-安装\" class=\"headerlink\" title=\"Visual Studio Code 安装\"></a><strong>Visual Studio Code 安装</strong></h4><p>发行版维护者从开源代码构建的版本，可以用 <code>code</code> 命令打开（缺点是图标被重新设计过，且更新落后于微软官方版）：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">pamac install code<br></code></pre></td></tr></table></figure>\n<p>微软官方的二进制包（包含部分私有的组件），同样可以用 <code>code</code> 命令打开（如果不介意私有组件而且不习惯 Code - OSS 的图标，个人推荐首选此项）：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">pamac install visual-studio-code-bin<br></code></pre></td></tr></table></figure>\n<p>内测版本：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">pamac install visual-studio-code-insiders<br></code></pre></td></tr></table></figure>\n<p>第三方发布的从开源代码构建的二进制包：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">pamac install vscodium-bin<br></code></pre></td></tr></table></figure>\n<p>从最新的开源代码构建：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">pamac install code-git<br></code></pre></td></tr></table></figure>\n<p>下载扩展：Python（会自动下载 Pylance、Jupyter 等扩展），Markdown All in One，LaTeX Workshop，C/C++，Rainbow Brackets，Prettier - Code formatter</p>\n<p>扩展保存在 <code>~/.vscode/extensions/</code> 文件夹内</p>\n<h4 id=\"Visual-Studio-Code-图标更改（可选）\"><a href=\"#Visual-Studio-Code-图标更改（可选）\" class=\"headerlink\" title=\"Visual Studio Code 图标更改（可选）\"></a><strong>Visual Studio Code 图标更改（可选）</strong></h4><p>如果图标美化后 Visual Studio Code 图标变成圆形，想恢复原图标，更改路径如下：</p>\n<p>程序启动器 &gt;&gt; 编辑应用程序 &gt;&gt; Visual Studio Code &gt;&gt; 点击图标更改 &gt;&gt; 其他图标</p>\n<p>其图标位置在 <code>/usr/share/icons/visual-studio-code.png</code></p>\n<h4 id=\"Visual-Studio-Code-缩放比例\"><a href=\"#Visual-Studio-Code-缩放比例\" class=\"headerlink\" title=\"Visual Studio Code 缩放比例\"></a><strong>Visual Studio Code 缩放比例</strong></h4><p>放大比例：<code>Ctrl+=</code></p>\n<p>缩小比例：<code>Ctrl+-</code></p>\n<h4 id=\"Visual-Studio-Code-设置快捷键\"><a href=\"#Visual-Studio-Code-设置快捷键\" class=\"headerlink\" title=\"Visual Studio Code 设置快捷键\"></a><strong>Visual Studio Code 设置快捷键</strong></h4><p>若要更改全局快捷键，设置文件在 <code>~/.config/Code/User/keybinding.json</code>，可以在 Visual Studio Code 中按 <code>Ctrl+K Ctrl+S</code> 开启设置</p>\n<h4 id=\"Latex-Workshop-插件设置\"><a href=\"#Latex-Workshop-插件设置\" class=\"headerlink\" title=\"Latex Workshop 插件设置\"></a><strong>Latex Workshop 插件设置</strong></h4><p>若想在 LaTeX Workshop 里面添加 <code>\\frac&#123;&#125;&#123;&#125;</code> 命令的快捷键为 <code>Ctrl+M Ctrl+F</code>，则添加一段：</p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs json\">&#123;<br>    <span class=\"hljs-attr\">&quot;key&quot;</span>: <span class=\"hljs-string\">&quot;ctrl+m ctrl+f&quot;</span>,<br>    <span class=\"hljs-attr\">&quot;command&quot;</span>: <span class=\"hljs-string\">&quot;editor.action.insertSnippet&quot;</span>,<br>    <span class=\"hljs-attr\">&quot;args&quot;</span>: &#123; <span class=\"hljs-attr\">&quot;snippet&quot;</span>: <span class=\"hljs-string\">&quot;\\\\frac&#123;$1&#125;&#123;$2&#125;$0&quot;</span> &#125;,<br>    <span class=\"hljs-attr\">&quot;when&quot;</span>: <span class=\"hljs-string\">&quot;editorTextFocus &amp;&amp; !editorReadonly &amp;&amp; editorLangId =~ /latex|rsweave|jlweave/&quot;</span><br>&#125;<br></code></pre></td></tr></table></figure>\n<p>若要更改行间公式 <code>\\[\\]</code> 的自动补全（公式独占一行），在 <code>~/.vscode/extensions/james-yu.latex-workshop-(version_number)/data/commands.json</code> 中找到：</p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs json\"><span class=\"hljs-string\">&quot;[&quot;</span>: &#123;<br>    <span class=\"hljs-attr\">&quot;command&quot;</span>: <span class=\"hljs-string\">&quot;[&quot;</span>,<br>    <span class=\"hljs-attr\">&quot;snippet&quot;</span>: <span class=\"hljs-string\">&quot;[$&#123;1&#125;\\\\]&quot;</span>,<br>    <span class=\"hljs-attr\">&quot;detail&quot;</span>: <span class=\"hljs-string\">&quot;display math \\\\[ ... \\\\]&quot;</span><br>  &#125;,<br></code></pre></td></tr></table></figure>\n<p>改为：</p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs json\"><span class=\"hljs-string\">&quot;[&quot;</span>: &#123;<br>    <span class=\"hljs-attr\">&quot;command&quot;</span>: <span class=\"hljs-string\">&quot;[&quot;</span>,<br>    <span class=\"hljs-attr\">&quot;snippet&quot;</span>: <span class=\"hljs-string\">&quot;[\\n    $&#123;1&#125;\\n\\\\]&quot;</span>,<br>    <span class=\"hljs-attr\">&quot;detail&quot;</span>: <span class=\"hljs-string\">&quot;display math \\\\[ ... \\\\]&quot;</span><br>  &#125;,<br></code></pre></td></tr></table></figure>\n<p>重启 Visual Studio Code 即可生效</p>\n<h4 id=\"Rainbow-Brackets-插件设置\"><a href=\"#Rainbow-Brackets-插件设置\" class=\"headerlink\" title=\"Rainbow Brackets 插件设置\"></a><strong>Rainbow Brackets 插件设置</strong></h4><p>更改 Rainbow Brackets 的括号配色可以修改文件 <code>~/.vscode/extensions/2gua.rainbow-brackets-0.0.6/out/src/extension.js</code>：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs js\"><span class=\"hljs-keyword\">var</span> roundBracketsColor = [<span class=\"hljs-string\">&quot;#ff5500&quot;</span>, <span class=\"hljs-string\">&quot;#cc0066&quot;</span>, <span class=\"hljs-string\">&quot;#00aa66&quot;</span>, <span class=\"hljs-string\">&quot;#ff9999&quot;</span>];<br><span class=\"hljs-keyword\">var</span> squareBracketsColor = [<span class=\"hljs-string\">&quot;#33ccff&quot;</span>, <span class=\"hljs-string\">&quot;#8080ff&quot;</span>, <span class=\"hljs-string\">&quot;#0077aa&quot;</span>];<br><span class=\"hljs-keyword\">var</span> squigglyBracketsColor = [<span class=\"hljs-string\">&quot;#aa00aa&quot;</span>, <span class=\"hljs-string\">&quot;#009900&quot;</span>, <span class=\"hljs-string\">&quot;#996600&quot;</span>];<br></code></pre></td></tr></table></figure>\n<p>重启 Visual Studio Code 即可生效</p>\n<h3 id=\"Typora-美化\"><a href=\"#Typora-美化\" class=\"headerlink\" title=\"Typora 美化\"></a><strong>Typora 美化</strong></h3><h4 id=\"源代码模式\"><a href=\"#源代码模式\" class=\"headerlink\" title=\"源代码模式\"></a><strong>源代码模式</strong></h4><p>更改 <code>/usr/share/typora/resources/style/base-control.css</code>：（在 Windows 中则是 <code>C:\\Program Files\\Typora\\resources\\style\\base-control.css</code>）</p>\n<p>找到 <code>.CodeMirror.cm-s-typora-default div.CodeMirror-cursor</code> 一行，将光标宽度改为 <code>1px</code>，颜色改为 <code>#000000</code></p>\n<p>找到 <code>#typora-source .CodeMirror-lines</code> 一行，将 <code>max-width</code> 改为 <code>1200px</code></p>\n<p>更改 <code>/usr/share/typora/resources/style/base.css</code>：（在 Windows 中则是 <code>C:\\Program Files\\Typora\\resources\\style\\base.css</code>）</p>\n<p>找到 <code>:root</code> 一行，将 <code>font-family</code> 改成自己想要的字体</p>\n<h4 id=\"主题渲染模式\"><a href=\"#主题渲染模式\" class=\"headerlink\" title=\"主题渲染模式\"></a><strong>主题渲染模式</strong></h4><p>在 <code>/home/(user_name)/.config/Typora/themes/</code> 中自己写一个 CSS 文件（可以复制其中一个默认主题，重命名后更改）</p>\n<p>找到 <code>body</code> 一行，将 <code>font-family</code> 改成自己想要的字体</p>\n<p>找到 <code>tt</code> 一行，将 <code>font-family</code> 改成自己想要的等宽字体（<code>monospace</code>）</p>\n<h3 id=\"SAOImageDS9-安装\"><a href=\"#SAOImageDS9-安装\" class=\"headerlink\" title=\"SAOImageDS9 安装\"></a><strong>SAOImageDS9 安装</strong></h3><p>推荐选择二进制包 <code>ds9-bin</code>：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">pamac install ds9-bin<br></code></pre></td></tr></table></figure>\n<h3 id=\"Github-Desktop-安装（可选）\"><a href=\"#Github-Desktop-安装（可选）\" class=\"headerlink\" title=\"Github Desktop 安装（可选）\"></a><strong>Github Desktop 安装（可选）</strong></h3><p>推荐选择二进制包 <code>github-desktop-bin</code>：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">pamac install github-desktop-bin<br></code></pre></td></tr></table></figure>\n<p>登录时要创建一个密钥环，密钥设为 Github 密码即可</p>\n<h3 id=\"WPS-安装（可选）\"><a href=\"#WPS-安装（可选）\" class=\"headerlink\" title=\"WPS 安装（可选）\"></a><strong>WPS 安装（可选）</strong></h3><p>运行：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">pamac install wps-office-cn wps-office-mui-zh-cn ttf-wps-fonts<br></code></pre></td></tr></table></figure>\n<h3 id=\"微信安装\"><a href=\"#微信安装\" class=\"headerlink\" title=\"微信安装\"></a><strong>微信安装</strong></h3><p>极简版（原生适配高分辨率屏幕，不需要 wine/deepin-wine 即可运行；但是功能较少，不支持截屏和“订阅号消息”，且对大文件传输的支持不佳）：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">pamac install wechat-uos<br></code></pre></td></tr></table></figure>\n<p>功能较多，和最新的 Windows 电脑版同步更新，但依赖 deepin-wine，且暂不支持“截屏时隐藏当前窗口”的版本：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">pamac install deepin-wine-wechat<br></code></pre></td></tr></table></figure>\n<h4 id=\"deepin-wine-wechat-高分辨率适配调整\"><a href=\"#deepin-wine-wechat-高分辨率适配调整\" class=\"headerlink\" title=\"deepin-wine-wechat 高分辨率适配调整\"></a><strong>deepin-wine-wechat 高分辨率适配调整</strong></h4><p>用命令 <code>/opt/apps/com.qq.weixin.deepin/files/run.sh winecfg</code> 调出 Wine Configuration，对于 200% 的放大率：</p>\n<p>Graphics &gt;&gt; Screen Resolution &gt;&gt; 192 dpi</p>\n<p>其余基于 Deepin Wine 的软件（如腾讯会议）也是类似的处理方法，将 <code>com.qq.weixin.deepin</code> 换成对应的文件夹名称即可（都在 <code>/opt/apps/</code> 目录下）</p>\n<h3 id=\"会议软件安装\"><a href=\"#会议软件安装\" class=\"headerlink\" title=\"会议软件安装\"></a><strong>会议软件安装</strong></h3><p>腾讯会议：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">pamac install com.tencent.deepin.meeting<br></code></pre></td></tr></table></figure>\n<p>高分辨率适配调整：</p>\n<p>用命令 <code>/opt/apps/com.tencent.meeting.deepin/files/run.sh winecfg</code> 调出 Wine Configuration，对于 200% 的放大率：</p>\n<p>Graphics &gt;&gt; Screen Resolution &gt;&gt; 192 dpi</p>\n<h3 id=\"音乐软件安装\"><a href=\"#音乐软件安装\" class=\"headerlink\" title=\"音乐软件安装\"></a><strong>音乐软件安装</strong></h3><h4 id=\"网易云音乐\"><a href=\"#网易云音乐\" class=\"headerlink\" title=\"网易云音乐\"></a><strong>网易云音乐</strong></h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">pamac install netease-cloud-music<br></code></pre></td></tr></table></figure>\n<h4 id=\"QQ-音乐\"><a href=\"#QQ-音乐\" class=\"headerlink\" title=\"QQ 音乐\"></a><strong>QQ 音乐</strong></h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">pamac install qqmusic-bin<br></code></pre></td></tr></table></figure>\n<p>默认是暗色主题，右上角皮肤键（衣服图案）可以更改为亮色主题</p>\n<h3 id=\"Geant4-安装\"><a href=\"#Geant4-安装\" class=\"headerlink\" title=\"Geant4 安装\"></a><strong>Geant4 安装</strong></h3><h4 id=\"从源代码安装-Geant4\"><a href=\"#从源代码安装-Geant4\" class=\"headerlink\" title=\"从源代码安装 Geant4\"></a><strong>从源代码安装 Geant4</strong></h4><p>从官网上下载源代码压缩包：</p>\n<p>Geant4 — Download</p>\n<p><a href=\"https://geant4.web.cern.ch/support/download\">https://geant4.web.cern.ch/support/download</a></p>\n<p>进入解压后的文件夹，若要将 Geant4 安装在 <code>(Geant4_directory)</code>，例如 <code>~/Geant4</code>，执行：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">mkdir build<br><span class=\"hljs-built_in\">cd</span> ./build<br>cmake -DCMAKE_INSTALL_PREFIX=(Geant4_directory) -DGEANT4_USE_OPENGL_X11=ON -DGEANT4_USE_QT=ON -DGEANT4_INSTALL_DATA=ON -DGEANT4_BUILD_MULTITHREADED=ON ..<br>make -j8<br>make install -j8<br></code></pre></td></tr></table></figure>\n<p>之后在 <code>~/.bashrc</code> 中添加一行：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-built_in\">source</span> (Geant4_directory)/bin/geant4.sh<br></code></pre></td></tr></table></figure>\n<h4 id=\"检验是否安装成功\"><a href=\"#检验是否安装成功\" class=\"headerlink\" title=\"检验是否安装成功\"></a><strong>检验是否安装成功</strong></h4><p>打开 <code>(Geant4_directory)/share/Geant4-(version_number)/examples/basic/B1</code>，执行：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">mkdir build<br><span class=\"hljs-built_in\">cd</span> ./build<br>cmake ..<br>make -j8<br>./exampleB1<br></code></pre></td></tr></table></figure>\n<p>如果出现图形交互界面，说明安装成功</p>\n<h3 id=\"Surface：能用上触控笔的软件（可选）\"><a href=\"#Surface：能用上触控笔的软件（可选）\" class=\"headerlink\" title=\"Surface：能用上触控笔的软件（可选）\"></a><strong>Surface：能用上触控笔的软件（可选）</strong></h3><h4 id=\"绘画\"><a href=\"#绘画\" class=\"headerlink\" title=\"绘画\"></a><strong>绘画</strong></h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">pamac install krita<br></code></pre></td></tr></table></figure>\n<h4 id=\"手写笔记\"><a href=\"#手写笔记\" class=\"headerlink\" title=\"手写笔记\"></a><strong>手写笔记</strong></h4><p>可以选择 Xournal++ 或者 Write</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">pamac install xournalpp<br>pamac install write_stylus<br></code></pre></td></tr></table></figure>\n<h3 id=\"Surface：屏幕键盘（可选）\"><a href=\"#Surface：屏幕键盘（可选）\" class=\"headerlink\" title=\"Surface：屏幕键盘（可选）\"></a><strong>Surface：屏幕键盘（可选）</strong></h3><p>目前最受欢迎的屏幕键盘应该是 OnBoard</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">pamac install onboard<br></code></pre></td></tr></table></figure>\n<p>但 OnBoard 在 Wayland 上无法使用。如果需要在 Wayland 会话中使用屏幕键盘，推荐安装 CellWriter</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">pamac install cellwriter<br></code></pre></td></tr></table></figure>\n<h2 id=\"参考资料\"><a href=\"#参考资料\" class=\"headerlink\" title=\"参考资料\"></a><strong>参考资料</strong></h2><p>BitLocker 恢复密钥</p>\n<p><a href=\"https://account.microsoft.com/devices/recoverykey?refd=account.microsoft.com\">https://account.microsoft.com/devices/recoverykey?refd=account.microsoft.com</a></p>\n<p>Windows 10 如何关闭快速启动</p>\n<p><a href=\"https://jingyan.baidu.com/article/ca00d56c7a40e6e99febcf4f.html\">https://jingyan.baidu.com/article/ca00d56c7a40e6e99febcf4f.html</a></p>\n<p>创建和使用 Surface 的 USB 恢复驱动器</p>\n<p><a href=\"https://support.microsoft.com/zh-cn/help/4023512/surface-creating-and-using-a-usb-recovery-drive\">https://support.microsoft.com/zh-cn/help/4023512/surface-creating-and-using-a-usb-recovery-drive</a></p>\n<p>下载 Surface 的恢复映像</p>\n<p><a href=\"https://support.microsoft.com/zh-cn/surfacerecoveryimage\">https://support.microsoft.com/zh-cn/surfacerecoveryimage</a></p>\n<p>下载 Windows 10 光盘映像</p>\n<p><a href=\"https://www.microsoft.com/zh-cn/software-download/windows10ISO\">https://www.microsoft.com/zh-cn/software-download/windows10ISO</a></p>\n<p>如何使用 Surface UEFI</p>\n<p><a href=\"https://support.microsoft.com/zh-cn/help/4023531/surface-how-to-use-surface-uefi\">https://support.microsoft.com/zh-cn/help/4023531/surface-how-to-use-surface-uefi</a></p>\n<p>Win 10 环境下安装 Manjaro KDE（双系统）</p>\n<p><a href=\"https://www.cnblogs.com/Jaywhen-xiang/p/11561661.html\">https://www.cnblogs.com/Jaywhen-xiang/p/11561661.html</a></p>\n<p>Manjaro 20 KDE 配置心得</p>\n<p><a href=\"https://blog.csdn.net/weixin_40293491/article/details/107526553\">https://blog.csdn.net/weixin_40293491/article/details/107526553</a></p>\n<p>Manjaro 安装体验小结</p>\n<p><a href=\"https://zhuanlan.zhihu.com/p/76608451\">https://zhuanlan.zhihu.com/p/76608451</a></p>\n<p>Manjaro 安装后你需要这样做</p>\n<p><a href=\"https://www.cnblogs.com/haohao77/p/9034499.html#11-%E9%85%8D%E7%BD%AE%E5%AE%98%E6%96%B9%E6%BA%90\">https://www.cnblogs.com/haohao77/p/9034499.html#11-%E9%85%8D%E7%BD%AE%E5%AE%98%E6%96%B9%E6%BA%90</a></p>\n<p>Manjaro Wiki — Pacman Overview</p>\n<p><a href=\"https://wiki.manjaro.org/index.php/Pacman_Overview\">https://wiki.manjaro.org/index.php/Pacman_Overview</a></p>\n<p>ArchWiki — Pacman</p>\n<p><a href=\"https://wiki.archlinux.org/index.php/Pacman\">https://wiki.archlinux.org/index.php/Pacman</a></p>\n<p>Manjaro Wiki — Pamac</p>\n<p><a href=\"https://wiki.manjaro.org/index.php/Pamac\">https://wiki.manjaro.org/index.php/Pamac</a></p>\n<p>GitHub — sudo pacman</p>\n<p><a href=\"https://github.com/Jguer/sudo\">https://github.com/Jguer/sudo</a> pacman</p>\n<p>Manjaro Wiki — Manjaro Hardware Detection Overview</p>\n<p><a href=\"https://wiki.manjaro.org/index.php/Manjaro_Hardware_Detection_Overview\">https://wiki.manjaro.org/index.php/Manjaro_Hardware_Detection_Overview</a></p>\n<p>Manjaro Wiki — Configure Graphics Cards</p>\n<p><a href=\"https://wiki.manjaro.org/index.php/Configure_Graphics_Cards\">https://wiki.manjaro.org/index.php/Configure_Graphics_Cards</a></p>\n<p>Manjaro Wiki — Manjaro Kernels</p>\n<p><a href=\"https://wiki.manjaro.org/index.php/Manjaro_Kernels\">https://wiki.manjaro.org/index.php/Manjaro_Kernels</a></p>\n<p>ArchWiki — Sudo (简体中文)</p>\n<p><a href=\"https://wiki.archlinux.org/index.php/Sudo_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87\">https://wiki.archlinux.org/index.php/Sudo_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87</a>)</p>\n<p>Manjaro Wiki — Switching Branches</p>\n<p><a href=\"https://wiki.manjaro.org/index.php?title=Switching_Branches\">https://wiki.manjaro.org/index.php?title=Switching_Branches</a></p>\n<p>在 Mac 上用 Openconnect 连接 Pulse Secure VPN</p>\n<p><a href=\"https://blog.yangl1996.com/post/use-openconnect-to-connect-to-pulse-secure-on-mac/\">https://blog.yangl1996.com/post/use-openconnect-to-connect-to-pulse-secure-on-mac/</a></p>\n<p>双系统下 Ubuntu 读写/挂载 Windows 中的硬盘文件 + 解决文件系统突然变成只读</p>\n<p><a href=\"https://jakting.com/archives/ubuntu-rw-windows-files.html\">https://jakting.com/archives/ubuntu-rw-windows-files.html</a></p>\n<p>修改 hosts 解决 GitHub 访问失败</p>\n<p><a href=\"https://zhuanlan.zhihu.com/p/107334179\">https://zhuanlan.zhihu.com/p/107334179</a></p>\n<p>Manjaro Linux Forum — Connect to internet from command-line as a beginner</p>\n<p><a href=\"https://forum.manjaro.org/t/howto-connect-to-internet-from-command-line-as-a-beginner/\">https://forum.manjaro.org/t/howto-connect-to-internet-from-command-line-as-a-beginner/</a></p>\n<p>Arch Wiki — XDG user directories</p>\n<p><a href=\"https://wiki.archlinux.org/index.php/XDG_user_directories\">https://wiki.archlinux.org/index.php/XDG_user_directories</a></p>\n<p>Arch Wiki — Cinnamon</p>\n<p><a href=\"https://wiki.archlinux.org/index.php/Cinnamon#Installation\">https://wiki.archlinux.org/index.php/Cinnamon#Installation</a></p>\n<p>Arch Wiki — Intel Graphics</p>\n<p><a href=\"https://wiki.archlinux.org/index.php/Intel_graphics#Installation\">https://wiki.archlinux.org/index.php/Intel_graphics#Installation</a></p>\n<p>KDE Community — Plasma 5.9 Errata</p>\n<p><a href=\"https://community.kde.org/Plasma/5.9_Errata#Intel_GPUs\">https://community.kde.org/Plasma/5.9_Errata#Intel_GPUs</a></p>\n<p>ArchWiki — Baloo</p>\n<p><a href=\"https://wiki.archlinux.org/index.php/Baloo\">https://wiki.archlinux.org/index.php/Baloo</a></p>\n<p>Arch Wiki — 关于 Logitech BLE 鼠标的问题</p>\n<p><a href=\"https://wiki.archlinux.org/index.php/Bluetooth_mouse#Problems_with_the_Logitech_BLE_mouse_(M557,_M590,_anywhere_mouse_2,_etc\">https://wiki.archlinux.org/index.php/Bluetooth_mouse#Problems_with_the_Logitech_BLE_mouse_(M557,_M590,_anywhere_mouse_2,_etc</a>)</p>\n<p>Linux-Surface — Installation and Setup</p>\n<p><a href=\"https://github.com/linux-surface/linux-surface/wiki/Installation-and-Setup\">https://github.com/linux-surface/linux-surface/wiki/Installation-and-Setup</a></p>\n<p>Arch Wiki — System time（简体中文）</p>\n<p><a href=\"https://wiki.archlinux.org/index.php/System_time_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87\">https://wiki.archlinux.org/index.php/System_time_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87</a>)</p>\n<p>KDE 桌面的 Mac 化</p>\n<p><a href=\"https://www.cnblogs.com/luoshuitianyi/p/10587788.html\">https://www.cnblogs.com/luoshuitianyi/p/10587788.html</a></p>\n<p>KDE 桌面美化指南</p>\n<p><a href=\"https://acherstyx.github.io/2020/06/30/KDE%E6%A1%8C%E9%9D%A2%E7%BE%8E%E5%8C%96%E6%8C%87%E5%8D%97/\">https://acherstyx.github.io/2020/06/30/KDE%E6%A1%8C%E9%9D%A2%E7%BE%8E%E5%8C%96%E6%8C%87%E5%8D%97/</a></p>\n<p>Oh-My-Zsh 及主题、插件的安装与配置</p>\n<p><a href=\"https://www.cnblogs.com/misfit/p/10694397.html\">https://www.cnblogs.com/misfit/p/10694397.html</a></p>\n<p>Linux GRUB 删除多余启动条目</p>\n<p><a href=\"https://blog.csdn.net/JackLiu16/article/details/80383969\">https://blog.csdn.net/JackLiu16/article/details/80383969</a></p>\n<p>AUR 镜像使用帮助</p>\n<p><a href=\"https://mirrors.tuna.tsinghua.edu.cn/help/AUR/\">https://mirrors.tuna.tsinghua.edu.cn/help/AUR/</a></p>\n<p>TUNA NTP (网络授时) 服务使用说明</p>\n<p><a href=\"https://tuna.moe/help/ntp/\">https://tuna.moe/help/ntp/</a></p>\n<p>SJTUG 软件源镜像服务</p>\n<p><a href=\"https://mirrors.sjtug.sjtu.edu.cn/#/\">https://mirrors.sjtug.sjtu.edu.cn/#/</a></p>\n<p>Manjaro 为包管理器 pacman 和 yaourt/sudo pacman 添加多线程下载</p>\n<p><a href=\"https://blog.csdn.net/dc90000/article/details/101752743?utm_medium=distribute.wap_relevant.none-task-blog-OPENSEARCH-6.nonecase&amp;depth_1-utm_source=distribute.wap_relevant.none-task-blog-OPENSEARCH-6.nonecase\">https://blog.csdn.net/dc90000/article/details/101752743?utm_medium=distribute.wap_relevant.none-task-blog-OPENSEARCH-6.nonecase&amp;depth_1-utm_source=distribute.wap_relevant.none-task-blog-OPENSEARCH-6.nonecase</a></p>\n<p>ArchWiki — Microsoft fonts（简体中文）</p>\n<p><a href=\"https://wiki.archlinux.org/index.php/Microsoft_fonts_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87\">https://wiki.archlinux.org/index.php/Microsoft_fonts_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87</a>)</p>\n<p>Archlinux 使用 Windows 字体及相关配置</p>\n<p><a href=\"https://blog.csdn.net/sinat_33528967/article/details/93380729\">https://blog.csdn.net/sinat_33528967/article/details/93380729</a></p>\n<p>ArchWiki — Fcitx5 (简体中文)</p>\n<p><a href=\"https://wiki.archlinux.org/index.php/Fcitx5_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87\">https://wiki.archlinux.org/index.php/Fcitx5_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87</a>)</p>\n<p>Archived Manjaro Forum — 比较几种中文输入法后，我最终选择了 sunpinyin + cloudpinyin 组合</p>\n<p><a href=\"https://archived.forum.manjaro.org/t/sunpinyin-cloudpinyin/114282\">https://archived.forum.manjaro.org/t/sunpinyin-cloudpinyin/114282</a></p>\n<p>Acquiring TeX Live as an ISO image</p>\n<p><a href=\"https://www.tug.org/texlive/acquire-iso.html\">https://www.tug.org/texlive/acquire-iso.html</a></p>\n<p>TeX Live - Quick install</p>\n<p><a href=\"https://www.tug.org/texlive/quickinstall.html\">https://www.tug.org/texlive/quickinstall.html</a></p>\n<p>TeX Live Documentation — TeXLive Installation</p>\n<p><a href=\"https://www.tug.org/texlive/doc/texlive-en/texlive-en.html#installation\">https://www.tug.org/texlive/doc/texlive-en/texlive-en.html#installation</a></p>\n<p>Font size of mailbox is too small</p>\n<p><a href=\"https://support.mozilla.org/zh-CN/questions/1297871\">https://support.mozilla.org/zh-CN/questions/1297871</a></p>\n<p>Anaconda Documentation — Installing on Linux</p>\n<p><a href=\"https://docs.anaconda.com/anaconda/install/linux/\">https://docs.anaconda.com/anaconda/install/linux/</a></p>\n<p>恢复 Anaconda 环境, 卸载 Anaconda, 重装 Anaconda</p>\n<p><a href=\"https://blog.csdn.net/wangweiwells/article/details/88374361\">https://blog.csdn.net/wangweiwells/article/details/88374361</a></p>\n<p>Geant4 — Building and Installing from Source</p>\n<p><a href=\"https://geant4-userdoc.web.cern.ch/UsersGuides/InstallationGuide/html/installguide.html\">https://geant4-userdoc.web.cern.ch/UsersGuides/InstallationGuide/html/installguide.html</a></p>\n<p>Geant4 — Postinstall Setup</p>\n<p><a href=\"https://geant4-userdoc.web.cern.ch/UsersGuides/InstallationGuide/html/postinstall.html\">https://geant4-userdoc.web.cern.ch/UsersGuides/InstallationGuide/html/postinstall.html</a></p>\n<p>Geant4 基础 — 准备与安装</p>\n<p><a href=\"https://zhuanlan.zhihu.com/p/135917392\">https://zhuanlan.zhihu.com/p/135917392</a></p>\n<p>Linux ate my RAM!</p>\n<p><a href=\"https://www.linuxatemyram.com/\">https://www.linuxatemyram.com/</a></p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"在-ThinkPad-X13-2021-Intel-Surface-Pro-6-上安装-Manjaro-21-KDE-Plasma-Windows-11-双系统的指南\"><a href=\"#在-ThinkPad-X13-2021-Intel-Surface-Pro-6-上安装-Manjaro-21-KDE-Plasma-Windows-11-双系统的指南\" class=\"headerlink\" title=\"在 ThinkPad X13 2021 Intel/Surface Pro 6 上安装 Manjaro 21 KDE Plasma + Windows 11 双系统的指南\"></a><strong>在 ThinkPad X13 2021 Intel/Surface Pro 6 上安装 Manjaro 21 KDE Plasma + Windows 11 双系统的指南</strong></h1><p>ThinkPad 系统信息：</p>\n<figure class=\"highlight apache\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs apache\"><span class=\"hljs-attribute\">OS</span>: Manjaro <span class=\"hljs-number\">21</span>.<span class=\"hljs-number\">2</span>.<span class=\"hljs-number\">0</span> Qonos<br><span class=\"hljs-attribute\">Kernel</span>: x<span class=\"hljs-number\">86</span>_<span class=\"hljs-number\">64</span> Linux <span class=\"hljs-number\">5</span>.<span class=\"hljs-number\">14</span>.<span class=\"hljs-number\">13</span>-<span class=\"hljs-number\">1</span>-MANJARO<br><span class=\"hljs-attribute\">Shell</span>: bash <span class=\"hljs-number\">5</span>.<span class=\"hljs-number\">1</span>.<span class=\"hljs-number\">8</span><br><span class=\"hljs-attribute\">Resolution</span>: <span class=\"hljs-number\">2560</span>x<span class=\"hljs-number\">1600</span><br><span class=\"hljs-attribute\">DE</span>: KDE <span class=\"hljs-number\">5</span>.<span class=\"hljs-number\">87</span>.<span class=\"hljs-number\">0</span> / Plasma <span class=\"hljs-number\">5</span>.<span class=\"hljs-number\">23</span>.<span class=\"hljs-number\">1</span><br><span class=\"hljs-attribute\">WM</span>: KWin<br><span class=\"hljs-attribute\">GTK</span> Theme: Breeze<span class=\"hljs-meta\"> [GTK2/3]</span><br><span class=\"hljs-attribute\">Icon</span> Theme: breath<span class=\"hljs-number\">2</span><br><span class=\"hljs-attribute\">CPU</span>: <span class=\"hljs-number\">11</span>th Gen Intel Core i<span class=\"hljs-number\">7</span>-<span class=\"hljs-number\">1165</span>G<span class=\"hljs-number\">7</span> @ <span class=\"hljs-number\">8</span>x <span class=\"hljs-number\">4</span>.<span class=\"hljs-number\">7</span>GHz<br><span class=\"hljs-attribute\">GPU</span>: Mesa Intel(R) Xe Graphics (TGL GT<span class=\"hljs-number\">2</span>)<br></code></pre></td></tr></table></figure>\n<p>Surface 系统信息：</p>\n<figure class=\"highlight apache\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs apache\"><span class=\"hljs-attribute\">OS</span>: Manjaro <span class=\"hljs-number\">21</span>.<span class=\"hljs-number\">1</span>.<span class=\"hljs-number\">1</span> Pahvo<br><span class=\"hljs-attribute\">Kernel</span>: x<span class=\"hljs-number\">86</span>_<span class=\"hljs-number\">64</span> Linux <span class=\"hljs-number\">5</span>.<span class=\"hljs-number\">14</span>.<span class=\"hljs-number\">0</span>-<span class=\"hljs-number\">0</span>-MANJARO/x<span class=\"hljs-number\">86</span>_<span class=\"hljs-number\">64</span> Linux <span class=\"hljs-number\">5</span>.<span class=\"hljs-number\">13</span>.<span class=\"hljs-number\">13</span>-arch<span class=\"hljs-number\">1</span>-<span class=\"hljs-number\">3</span>-surface<br><span class=\"hljs-attribute\">Shell</span>: bash <span class=\"hljs-number\">5</span>.<span class=\"hljs-number\">1</span>.<span class=\"hljs-number\">8</span><br><span class=\"hljs-attribute\">Resolution</span>: <span class=\"hljs-number\">2736</span>x<span class=\"hljs-number\">1824</span><br><span class=\"hljs-attribute\">DE</span>: KDE <span class=\"hljs-number\">5</span>.<span class=\"hljs-number\">85</span>.<span class=\"hljs-number\">0</span> / Plasma <span class=\"hljs-number\">5</span>.<span class=\"hljs-number\">22</span>.<span class=\"hljs-number\">5</span><br><span class=\"hljs-attribute\">WM</span>: KWin<br><span class=\"hljs-attribute\">GTK</span> Theme: Breath<span class=\"hljs-meta\"> [GTK2/3]</span><br><span class=\"hljs-attribute\">Icon</span> Theme: breath<span class=\"hljs-number\">2</span><br><span class=\"hljs-attribute\">CPU</span>: Intel Core i<span class=\"hljs-number\">5</span>-<span class=\"hljs-number\">8250</span>U @ <span class=\"hljs-number\">8</span>x <span class=\"hljs-number\">3</span>.<span class=\"hljs-number\">4</span>GHz<br><span class=\"hljs-attribute\">GPU</span>: Mesa Intel(R) UHD Graphics <span class=\"hljs-number\">620</span> (KBL GT<span class=\"hljs-number\">2</span>)<br></code></pre></td></tr></table></figure>\n<p><strong>说明：Surface 专有部分自 2021.9.5 起不再更新，内核终止于 x86_64 Linux 5.14.0-0-MANJARO/x86_64 Linux 5.13.13-arch1-3-surface</strong></p>\n<h2 id=\"Windows-的准备工作\"><a href=\"#Windows-的准备工作\" class=\"headerlink\" title=\"Windows 的准备工作\"></a><strong>Windows 的准备工作</strong></h2><h3 id=\"为-Manjaro-系统分区\"><a href=\"#为-Manjaro-系统分区\" class=\"headerlink\" title=\"为 Manjaro 系统分区\"></a><strong>为 Manjaro 系统分区</strong></h3><p>右键点击开始菜单，选择”磁盘管理”，分出一块空分区，建议不小于 64GB</p>\n<h3 id=\"关闭快速启动\"><a href=\"#关闭快速启动\" class=\"headerlink\" title=\"关闭快速启动\"></a><strong>关闭快速启动</strong></h3><p>Windows 工具 &gt;&gt; 控制面板 &gt;&gt; 电源选项 &gt;&gt; 选择电源按钮的功能 &gt;&gt; 更改当前不可用的设置 &gt;&gt; 关闭快速启动 &gt;&gt; 保存修改</p>\n<h3 id=\"ThinkPad-UEFI-设置\"><a href=\"#ThinkPad-UEFI-设置\" class=\"headerlink\" title=\"ThinkPad: UEFI 设置\"></a><strong>ThinkPad: UEFI 设置</strong></h3><p>启动 ThinkPad 时按 <code>Enter</code> 打断正常开机，然后按下 <code>Fn+Esc</code> 解锁 <code>Fn</code> 按钮，再按 <code>F1</code> 进入 UEFI 设置</p>\n<p>Security &gt;&gt; Secure Boot &gt;&gt; Off</p>\n<h3 id=\"Surface-UEFI-设置\"><a href=\"#Surface-UEFI-设置\" class=\"headerlink\" title=\"Surface: UEFI 设置\"></a><strong>Surface: UEFI 设置</strong></h3><p>关闭 Surface，然后等待大约 10 秒钟以确保其处于关闭状态</p>\n<p>长按 Surface 上的调高音量按钮，同时按下再松开电源按钮</p>\n<p>屏幕上会显示 Microsoft 或 Surface 徽标，继续按住调高音量按钮，显示 UEFI 屏幕后，松开此按钮</p>\n<p>Security &gt;&gt; Secure Boot &gt;&gt; Disabled（第三个选项）</p>\n<p>Boot Configuration &gt;&gt; Configure boot device order 中可以调整和删除启动顺序</p>\n<p>具体参考下列网址：</p>\n<p>如何使用 Surface UEFI</p>\n<p><a href=\"https://support.microsoft.com/zh-cn/surface/%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8-surface-uefi-df2c8942-dfa0-859d-4394-95f45eb1c3f9\">https://support.microsoft.com/zh-cn/surface/%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8-surface-uefi-df2c8942-dfa0-859d-4394-95f45eb1c3f9</a></p>\n<h3 id=\"删除多余的-Windows-启动项\"><a href=\"#删除多余的-Windows-启动项\" class=\"headerlink\" title=\"删除多余的 Windows 启动项\"></a>删除多余的 Windows 启动项</h3><p>如果在电脑上装有多个 Windows，则系统只会选择其中一个在 Windows Boot Manager 中启动，若要删除多余的启动项，在 Windows 的“系统配置”（搜索框中输入 <code>msconfig</code> 或在“Windows 工具”中选择）的“引导”页面即可删除</p>\n<h3 id=\"制作启动盘\"><a href=\"#制作启动盘\" class=\"headerlink\" title=\"制作启动盘\"></a><strong>制作启动盘</strong></h3><h4 id=\"下载系统-ISO-镜像\"><a href=\"#下载系统-ISO-镜像\" class=\"headerlink\" title=\"下载系统 ISO 镜像\"></a><strong>下载系统 ISO 镜像</strong></h4><p>从 Manjaro 官网上下载：</p>\n<p><a href=\"https://manjaro.org/downloads/official/kde/\">https://manjaro.org/downloads/official/kde/</a> （KDE Plasma 版本）</p>\n<p><a href=\"https://manjaro.org/get-manjaro/\">https://manjaro.org/get-manjaro/</a> （所有官方版本）</p>\n<p>或者在 Github 上下载：</p>\n<p><a href=\"https://github.com/manjaro-plasma/download/releases\">https://github.com/manjaro-plasma/download/releases</a> （KDE Plasma 版本）</p>\n<p><a href=\"https://github.com/manjaro/release-review/releases\">https://github.com/manjaro/release-review/releases</a> （所有官方版本）</p>\n<h4 id=\"刻录-USB-启动盘\"><a href=\"#刻录-USB-启动盘\" class=\"headerlink\" title=\"刻录 USB 启动盘\"></a><strong>刻录 USB 启动盘</strong></h4><p>推荐使用 <a href=\"https://www.ventoy.net/cn/index.html\">Ventoy</a>，可以在 Windows/Linux 上使用，方法是下载安装包后解压、安装到 USB 上，之后直接将 ISO 镜像拷贝到 USB 中即可选择镜像文件进行登录系统，支持多个系统镜像登录</p>\n<p>Linux 上也可以使用 <a href=\"https://www.balena.io/etcher/\">Etcher</a>，在 Linux（下载 Appimage 或从 AUR 上用包管理器下载 <code>balena-etcher</code>）和 Windows（下载 EXE 可执行文件）上均能使用（但无法刻录 Windows 系统镜像），Github 项目地址在 <a href=\"https://github.com/balena-io/etcher\">https://github.com/balena-io/etcher</a></p>\n<p>Windows 上还可以用 <a href=\"https://rufus.ie/zh/\">Rufus</a>，速度与 Etcher 相当且支持 Windows 和 Linux 系统镜像，但无法在 Linux 上使用（只提供 Windows 版 EXE 可执行文件），Github 项目地址在 <a href=\"https://github.com/pbatard/rufus\">https://github.com/pbatard/rufus</a></p>\n<h3 id=\"ThinkPad：安装-Manjaro\"><a href=\"#ThinkPad：安装-Manjaro\" class=\"headerlink\" title=\"ThinkPad：安装 Manjaro\"></a><strong>ThinkPad：安装 Manjaro</strong></h3><p>设置 &gt;&gt; 恢复 &gt;&gt; 立即重新启动 &gt;&gt; USB HDD</p>\n<p>或按照以下步骤直接从 USB 启动:</p>\n<p>启动 ThinkPad 时按 <code>Enter</code> 打断正常开机，然后按下 <code>Fn+Esc</code> 解锁 <code>Fn</code> 按钮，再按 <code>F12</code> 选择启动位置为 USB HDD</p>\n<h3 id=\"Surface：安装-Manjaro\"><a href=\"#Surface：安装-Manjaro\" class=\"headerlink\" title=\"Surface：安装 Manjaro\"></a><strong>Surface：安装 Manjaro</strong></h3><p>设置 &gt;&gt; 恢复 &gt;&gt; 立即重新启动 &gt;&gt; USB Storage</p>\n<p>或按照以下步骤直接从 USB 启动:</p>\n<p>关闭 Surface</p>\n<p>将可启动 U 盘插入 Surface 上的 USB 端口</p>\n<p>长按 Surface 上的调低音量按钮，同时按下并释放电源按钮，屏幕上会显示 Microsoft 或 Surface 徽标</p>\n<p>继续按住调低音量按钮，释放按钮后，徽标下方将显示旋转圆点，进入 UEFI 界面</p>\n<p>在 UEFI 界面内从 USB 启动</p>\n<h4 id=\"进入-Manjaro-Hello-窗口开始安装\"><a href=\"#进入-Manjaro-Hello-窗口开始安装\" class=\"headerlink\" title=\"进入 Manjaro Hello 窗口开始安装\"></a><strong>进入 Manjaro Hello 窗口开始安装</strong></h4><p>语言选择“简体中文”</p>\n<p>时区选择“Asia — Shanghai”</p>\n<p>键盘设置选择“Chinese — Default”</p>\n<p>安装时选择“替代一个分区”，并点击之前空出来的空分区</p>\n<p>或者手动挂载空分区，挂载点设为 <code>/</code>，标记为 <code>root</code>，手动挂载 UEFI 分区（即第一个分区<code>dev/nvme0n1p1</code>，格式为 FAT32），不要格式化，挂载点设为 <code>/boot/efi</code>，标记为 <code>boot</code></p>\n<p>用户名建议全部用小写字母并与登录时的用户名一致</p>\n<p>设置密码，并勾选“为管理员使用相同的密码”</p>\n<h2 id=\"初始配置\"><a href=\"#初始配置\" class=\"headerlink\" title=\"初始配置\"></a><strong>初始配置</strong></h2><h3 id=\"电源与开机设置\"><a href=\"#电源与开机设置\" class=\"headerlink\" title=\"电源与开机设置\"></a><strong>电源与开机设置</strong></h3><p>系统设置 &gt;&gt; 电源管理 &gt;&gt; 节能 &gt;&gt; 勾选“按键事件处理” &gt;&gt; 合上笔记本盖时 &gt;&gt; 选择“关闭屏幕” &gt;&gt; 勾选“即使已连接外部显示器”</p>\n<p>系统设置 &gt;&gt; 开机与关机 &gt;&gt; 桌面会话 &gt;&gt; 登入时 &gt;&gt; 选择“以空会话启动”</p>\n<h4 id=\"与电源管理相关的常见英文名词\"><a href=\"#与电源管理相关的常见英文名词\" class=\"headerlink\" title=\"与电源管理相关的常见英文名词\"></a><strong>与电源管理相关的常见英文名词</strong></h4><p>Sleep：睡眠，Suspend：挂起，Reboot：重启，Shutdown：关机，Logout：注销</p>\n<h3 id=\"高分辨率设置\"><a href=\"#高分辨率设置\" class=\"headerlink\" title=\"高分辨率设置\"></a><strong>高分辨率设置</strong></h3><p>ThinkPad 的屏幕分辨率是 2560×1600，而 Surface 的屏幕分辨率是 2736×1824，需要配置高分屏优化：</p>\n<p>系统设置 &gt;&gt; 显示和监控 &gt;&gt; 显示配置 &gt;&gt; 分辨率 &gt;&gt; 全局缩放 &gt;&gt; 200%</p>\n<p>系统设置 &gt;&gt; 光标 &gt;&gt; 大小 &gt;&gt; 36</p>\n<p>然后重启电脑</p>\n<h3 id=\"快捷键配置\"><a href=\"#快捷键配置\" class=\"headerlink\" title=\"快捷键配置\"></a><strong>快捷键配置</strong></h3><h4 id=\"全局快捷键\"><a href=\"#全局快捷键\" class=\"headerlink\" title=\"全局快捷键\"></a><strong>全局快捷键</strong></h4><p>为打开方便，可以采用 i3wm 的默认快捷键打开 Konsole：</p>\n<p>系统设置 &gt;&gt; 快捷键 &gt;&gt; 添加应用程序 &gt;&gt; Konsole &gt;&gt; Konsole 的快捷键设为 <code>Meta+Return</code>（即“Windows 徽标键 + Enter 键”）</p>\n<h4 id=\"Konsole-Yakuake-快捷键\"><a href=\"#Konsole-Yakuake-快捷键\" class=\"headerlink\" title=\"Konsole/Yakuake 快捷键\"></a><strong>Konsole/Yakuake 快捷键</strong></h4><p>设置 &gt;&gt; 配置键盘快捷键 &gt;&gt; 复制改为 <code>Ctrl+C</code> ，粘贴改为 <code>Ctrl+V</code></p>\n<h3 id=\"选择镜像并更改更新分支\"><a href=\"#选择镜像并更改更新分支\" class=\"headerlink\" title=\"选择镜像并更改更新分支\"></a><strong>选择镜像并更改更新分支</strong></h3><p>选择镜像：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">sudo pacman-mirrors -i -c China<br></code></pre></td></tr></table></figure>\n<p>更新分支 <code>(branch)</code> 可以选择 stable/testing/unstable，更改更新分支的命令为：（不要漏掉 <code>-a</code>）</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">sudo pacman-mirrors -aS (branch)<br>sudo pacman -Syyu<br></code></pre></td></tr></table></figure>\n<p>获取更新分支的命令为：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">sudo pacman-mirrors -G<br></code></pre></td></tr></table></figure>\n<p>选择镜像并更改更新分支的命令则为：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">sudo pacman-mirrors -aS (branch) -ic China<br></code></pre></td></tr></table></figure>\n<p><strong>一般建议选择上海交大的镜像，其更新频率最高且支持全部三个更新分支，如果在北京大学访问上海交大镜像源较慢可以考虑用更快的清华大学镜像源</strong></p>\n<h3 id=\"包管理器\"><a href=\"#包管理器\" class=\"headerlink\" title=\"包管理器\"></a>包管理器</h3><p>Manjaro 常用的包管理器有 pacman 和 pamac，其使用教程参考以下网址：</p>\n<p>Manjaro Wiki — Pacman Overview</p>\n<p><a href=\"https://wiki.manjaro.org/index.php/Pacman_Overview\">https://wiki.manjaro.org/index.php/Pacman_Overview</a></p>\n<p>Manjaro Wiki — Pacman-mirrors</p>\n<p><a href=\"https://wiki.manjaro.org/index.php/Pacman-mirrors\">https://wiki.manjaro.org/index.php/Pacman-mirrors</a></p>\n<p>ArchWiki — Pacman</p>\n<p><a href=\"https://wiki.archlinux.org/index.php/Pacman\">https://wiki.archlinux.org/index.php/Pacman</a></p>\n<p>Manjaro Wiki — Pamac</p>\n<p><a href=\"https://wiki.manjaro.org/index.php/Pamac\">https://wiki.manjaro.org/index.php/Pamac</a></p>\n<p>其中 pacman 和 pamac 是预装的，“添加/删除软件”就是 pamac 的 GUI 版本</p>\n<p>硬件管理的包管理器是 mhwd 和 mhwd-kernel，其使用教程参考以下网址：</p>\n<p>Manjaro Wiki — Manjaro Hardware Detection Overview</p>\n<p><a href=\"https://wiki.manjaro.org/index.php/Manjaro_Hardware_Detection_Overview\">https://wiki.manjaro.org/index.php/Manjaro_Hardware_Detection_Overview</a></p>\n<p>Manjaro Wiki — Configure Graphics Cards</p>\n<p><a href=\"https://wiki.manjaro.org/index.php/Configure_Graphics_Cards\">https://wiki.manjaro.org/index.php/Configure_Graphics_Cards</a></p>\n<p>Manjaro Wiki — Manjaro Kernels</p>\n<p><a href=\"https://wiki.manjaro.org/index.php/Manjaro_Kernels\">https://wiki.manjaro.org/index.php/Manjaro_Kernels</a></p>\n<p>这两个也可以在 Manjaro Settings Manager （GUI 版本）中使用</p>\n<h3 id=\"AUR\"><a href=\"#AUR\" class=\"headerlink\" title=\"AUR\"></a><strong>AUR</strong></h3><h4 id=\"安装-base-devel\"><a href=\"#安装-base-devel\" class=\"headerlink\" title=\"安装 base-devel\"></a><strong>安装 base-devel</strong></h4><p>AUR 上的某些 PKGBUILD 会默认你已经安装 <code>base-devel</code> 组的所有软件包而不将它们写入构建依赖。为了避免在构建过程中出现一些奇怪的错误，建议先安装 <code>base-devel</code>：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">sudo pacman -S base-devel<br></code></pre></td></tr></table></figure>\n<h4 id=\"启用-pamac-的-AUR-支持\"><a href=\"#启用-pamac-的-AUR-支持\" class=\"headerlink\" title=\"启用 pamac 的 AUR 支持\"></a><strong>启用 pamac 的 AUR 支持</strong></h4><p>添加/删除软件 &gt;&gt; 右上角 ··· &gt;&gt; 首选项 &gt;&gt; AUR &gt;&gt; 启用 AUR 支持</p>\n<p>然后就可以用 pamac 的图形界面获取 AUR 软件包，或者用命令 <code>pamac build</code> 及 <code>pamac install</code> 获取 AUR 的软件包</p>\n<p><strong>注意 pacman 不支持 AUR</strong></p>\n<h3 id=\"Arch-Linux-CN-软件源\"><a href=\"#Arch-Linux-CN-软件源\" class=\"headerlink\" title=\"Arch Linux CN 软件源\"></a><strong>Arch Linux CN 软件源</strong></h3><p>在 <code>/etc/pacman.conf</code> 文件末尾添加以下两行以启用上海交大镜像（注意一定要写第一行的 <code>[archlinuxcn]</code>）：</p>\n<figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs awk\">[archlinuxcn]<br>Server = https:<span class=\"hljs-regexp\">//mi</span>rrors.sjtug.sjtu.edu.cn<span class=\"hljs-regexp\">/archlinux-cn/</span><span class=\"hljs-variable\">$arch</span><br></code></pre></td></tr></table></figure>\n<p>之后执行下面的命令安装 archlinuxcn-keyring 包导入 GPG key</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">sudo pacman -Sy archlinuxcn-keyring<br>sudo pacman -Syyu<br></code></pre></td></tr></table></figure>\n<p>这样就开启了 pacman 和 pamac 对 Arch Linux CN 的支持</p>\n<p>由于 Manjaro 的更新滞后于 Arch，使用 Arch Linux CN 仓库可能会出现“部分更新”的情况，导致某些软件包损坏</p>\n<p>建议切换到 testing 或 unstable 分支以尽量跟进 Arch 的更新</p>\n<h4 id=\"搜索软件包\"><a href=\"#搜索软件包\" class=\"headerlink\" title=\"搜索软件包\"></a><strong>搜索软件包</strong></h4><p>在 <code>pamac</code> 上可以执行：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">pamac search (package_name)<br></code></pre></td></tr></table></figure>\n<h4 id=\"检查依赖关系\"><a href=\"#检查依赖关系\" class=\"headerlink\" title=\"检查依赖关系\"></a><strong>检查依赖关系</strong></h4><p>以树状图的形式展示某软件包的依赖关系：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">pactree (package_name)<br></code></pre></td></tr></table></figure>\n<h4 id=\"降级软件包\"><a href=\"#降级软件包\" class=\"headerlink\" title=\"降级软件包\"></a><strong>降级软件包</strong></h4><p>在 <code>/var/cache/pacman/pkg/</code> 中找到旧软件包，双击打开安装实现手动降级，参考以下网址：</p>\n<p>Downgrading Packages — ArchWiki</p>\n<p><a href=\"https://wiki.archlinux.org/title/Downgrading_packages_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87\">https://wiki.archlinux.org/title/Downgrading_packages_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87</a>)</p>\n<h4 id=\"清理缓存\"><a href=\"#清理缓存\" class=\"headerlink\" title=\"清理缓存\"></a><strong>清理缓存</strong></h4><p>清理全部软件安装包：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">pamac clean<br></code></pre></td></tr></table></figure>\n<p>删除软件包时清理设置文件：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">sudo pacman -Rn (package_name)<br></code></pre></td></tr></table></figure>\n<p>清理无用的孤立软件包：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">sudo pacman -Rsn $(pacman -Qdtq)<br></code></pre></td></tr></table></figure>\n<p>若显示 <code>error: no targets specified (use -h for help)</code> 则说明没有孤立软件包需要清理</p>\n<p>或者：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">pamac remove -o<br></code></pre></td></tr></table></figure>\n<p>若不小心终止了 <code>pacman</code> 进程，则需要先删除 <code>/var/lib/pacman/db.lck</code> 才能再次启动 <code>pacman</code></p>\n<h4 id=\"从本地安装包安装软件\"><a href=\"#从本地安装包安装软件\" class=\"headerlink\" title=\"从本地安装包安装软件\"></a><strong>从本地安装包安装软件</strong></h4><p>pacman 有从本地安装包安装软件的功能，只需输入：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">sudo pacman -U (package_path)/(package_name)<br></code></pre></td></tr></table></figure>\n<h3 id=\"切换到-video-modesetting（可选）\"><a href=\"#切换到-video-modesetting（可选）\" class=\"headerlink\" title=\"切换到 video-modesetting（可选）\"></a><strong>切换到 video-modesetting（可选）</strong></h3><p>有时候打字时桌面卡死，只有鼠标能移动，但是无法点击</p>\n<p>可能是默认的 video-linux 显卡驱动的问题，已经有此类问题的报告和建议，参考以下网址：</p>\n<p>Arch Wiki — Cinnamon</p>\n<p><a href=\"https://wiki.archlinux.org/index.php/Cinnamon#Installation\">https://wiki.archlinux.org/index.php/Cinnamon#Installation</a></p>\n<p>Arch Wiki — Intel Graphics</p>\n<p><a href=\"https://wiki.archlinux.org/index.php/Intel_graphics#Installation\">https://wiki.archlinux.org/index.php/Intel_graphics#Installation</a></p>\n<p>KDE Community — Plasma 5.9 Errata</p>\n<p><a href=\"https://community.kde.org/Plasma/5.9_Errata#Intel_GPUs\">https://community.kde.org/Plasma/5.9_Errata#Intel_GPUs</a></p>\n<p>解决办法：</p>\n<p>卸载 video-linux：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">sudo mhwd -r pci video-linux<br></code></pre></td></tr></table></figure>\n<p>下载 video-modesetting：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">sudo mhwd -i pci video-modesetting<br></code></pre></td></tr></table></figure>\n<p><strong>重启后会发现许多窗口和图标变小，建议先调整全局缩放为 100%，重新启动，再调至 200%，再重启</strong></p>\n<h3 id=\"Surface：Linux-Surface-内核安装（可选）\"><a href=\"#Surface：Linux-Surface-内核安装（可选）\" class=\"headerlink\" title=\"Surface：Linux-Surface 内核安装（可选）\"></a><strong>Surface：Linux-Surface 内核安装（可选）</strong></h3><p><strong>Manjaro 官方支持的最新的内核是 x86_64 Linux 5.14.0-0-MANJARO，从 Linux 5.13-MANJARO 开始已经支持 Surface 的电池组件（旧版内核不支持，无法显示电池电量状态），但不支持触屏</strong></p>\n<p>在终端中输入：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">curl -s https://raw.githubusercontent.com/linux-surface/linux-surface/master/pkg/keys/surface.asc \\| sudo pacman-key --add -<br></code></pre></td></tr></table></figure>\n<p>如果出现错误或没有响应，一般是网络问题，可能要等待几分钟，建议先配置好 VPN 再装内核</p>\n<p>接着输入：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">sudo pacman-key --finger 56C464BAAC421453<br>sudo pacman-key --lsign-key 56C464BAAC421453<br></code></pre></td></tr></table></figure>\n<p>在 <code>/etc/pacman.conf</code> 里面添加：</p>\n<figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs awk\">[linux-surface]<br>Server = https:<span class=\"hljs-regexp\">//</span>pkg.surfacelinux.com<span class=\"hljs-regexp\">/arch/</span><br></code></pre></td></tr></table></figure>\n<p>然后更新软件库并下载：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">sudo pacman -Syyu<br>sudo pacman -S linux-surface linux-surface-headers iptsd-git<br></code></pre></td></tr></table></figure>\n<p>启动触屏：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">sudo systemctl <span class=\"hljs-built_in\">enable</span> iptsd<br></code></pre></td></tr></table></figure>\n<p>启动相机参考以下网址：（相机功能仍在开发中，可能出现配置失败的情况）</p>\n<p>Linux-Surface — Camera Support</p>\n<p><a href=\"https://github.com/linux-surface/linux-surface/wiki/Camera-Support\">https://github.com/linux-surface/linux-surface/wiki/Camera-Support</a></p>\n<p>KDE 上原生的相机应用是 Kamoso，也可以使用 GNOME 上的相机应用 Cheese</p>\n<p><strong>Firefox 启用触屏需要在 <code>/etc/environment</code> 中写入 <code>MOZ_USE_XINPUT2=1</code>，然后重新启动，并在 about:config 中设置 <code>apz.allow_zooming</code> 和 <code>apz.allow_zooming_out</code> 为 <code>true</code>；Visual Studio Code 启用触屏需要更改 <code>/usr/share/applications/visual-studio-code.desktop</code>，在 <code>Exec</code> 一行中加入命令 <code>--touch-events</code>，这一般对以 Electron 为基础的软件有效</strong></p>\n<h3 id=\"vim-安装与配置\"><a href=\"#vim-安装与配置\" class=\"headerlink\" title=\"vim 安装与配置\"></a><strong>vim 安装与配置</strong></h3><p>建议先安装 vim，方便之后编辑各种文件：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">sudo pacman -S vim<br></code></pre></td></tr></table></figure>\n<p>vim 的配置文件主要有 <code>/usr/share/vim/vimfiles/archlinux.vim</code>，<code>/etc/vimrc</code> 和 <code>/home/(user_name)/.vimrc</code>，建议直接修改 <code>/etc/vimrc</code>，这样不会覆盖 <code>/usr/share/vim/vimfiles/archlinux.vim</code> 上定义的默认配置（语法高亮等）</p>\n<h3 id=\"GNU-nano-配置\"><a href=\"#GNU-nano-配置\" class=\"headerlink\" title=\"GNU nano 配置\"></a><strong>GNU nano 配置</strong></h3><p>nano 的配置文件在 <code>/etc/nanorc</code>，可以通过取消注释设置选项配置文件，如：</p>\n<p>取消注释 <code>set linenumbers</code> 可以显示行号</p>\n<p>取消注释 <code>set tabsize 8</code> 可以更改 Tab 键的长度，例如 <code>set tabsize 4</code></p>\n<p>取消注释 <code>set tabstospaces</code> 可以将 Tab 转换为空格</p>\n<p>取消注释 <code>set matchbrackets &quot;(&lt;[&#123;)&gt;]&#125;&quot;</code> 可以匹配括号</p>\n<p>取消注释 <code>include &quot;/usr/share/nano/*.nanorc&quot;</code> 一行和所有的颜色设置可以启用代码高亮</p>\n<p>取消注释所有的 <code>Key bindings</code> 选项可以启用更常用的快捷键设定</p>\n<p><strong>用 nano 编辑后保存的步骤是 <code>Ctrl+W</code> （Write Out） &gt;&gt; <code>Enter</code> &gt;&gt; <code>Ctrl+Q</code> （Exit），如果用默认的快捷键设置，则为 <code>Ctrl+O</code> （Write Out） &gt;&gt; <code>Enter</code> &gt;&gt; <code>Ctrl+X</code> （Exit）</strong></p>\n<h3 id=\"更改-visudo-默认编辑器为-vim\"><a href=\"#更改-visudo-默认编辑器为-vim\" class=\"headerlink\" title=\"更改 visudo 默认编辑器为 vim\"></a><strong>更改 visudo 默认编辑器为 vim</strong></h3><p>Manjaro 中 visudo 的默认编辑器是 vi，若要改为 vim，则首先在终端中输入：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">sudo visudo<br></code></pre></td></tr></table></figure>\n<p>在开头的一个空行键入：</p>\n<figure class=\"highlight arcade\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs arcade\">Defaults editor=<span class=\"hljs-regexp\">/usr/</span>bin/vim<br></code></pre></td></tr></table></figure>\n<p>按 <code>Esc</code> 进入命令模式，再按 <code>:x</code> 保存，按 <code>Enter</code> 退出</p>\n<p>如果想临时使用 vim 作为编辑器，则输入：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">sudo EDITOR=vim visudo<br></code></pre></td></tr></table></figure>\n<h3 id=\"sudo-免密码\"><a href=\"#sudo-免密码\" class=\"headerlink\" title=\"sudo 免密码\"></a><strong>sudo 免密码</strong></h3><p>在最后一行（空行）按 <code>i</code> 进入输入模式，加上这一行：</p>\n<figure class=\"highlight avrasm\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs avrasm\"><span class=\"hljs-symbol\">Defaults:</span>(user_name) !authenticate<br></code></pre></td></tr></table></figure>\n<p>进入命令模式，保存退出即可</p>\n<p><strong>注：如果想保留输入密码的步骤但是想在输入密码时显示星号，则加上一行 <code>Defaults env_reset,pwfeedback</code> 即可</strong></p>\n<h3 id=\"命令行界面输出语言为英语\"><a href=\"#命令行界面输出语言为英语\" class=\"headerlink\" title=\"命令行界面输出语言为英语\"></a><strong>命令行界面输出语言为英语</strong></h3><p>在 <code>~/.bashrc</code> 的最后添加一行：</p>\n<figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs routeros\"><span class=\"hljs-builtin-name\">export</span> <span class=\"hljs-attribute\">LANG</span>=en_US.UTF-8<br></code></pre></td></tr></table></figure>\n<p>如果使用 zsh，则去掉 <code>~/.zshrc</code> 中这一行的注释即可</p>\n<h3 id=\"时间设置\"><a href=\"#时间设置\" class=\"headerlink\" title=\"时间设置\"></a><strong>时间设置</strong></h3><h4 id=\"双系统时间不同步\"><a href=\"#双系统时间不同步\" class=\"headerlink\" title=\"双系统时间不同步\"></a><strong>双系统时间不同步</strong></h4><p>系统设置 &gt;&gt; 时间和日期 &gt;&gt; 自动设置时间和日期</p>\n<p>在 Manjaro 上设置硬件时间为 UTC：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">sudo timedatectl set-local-rtc 0<br></code></pre></td></tr></table></figure>\n<p>并在 Windows 上设置硬件时间为 UTC，与 Manjaro 同步：</p>\n<figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs powershell\">reg add <span class=\"hljs-string\">&quot;HKEY_LOCAL_MACHINE\\System\\CurrentControlSet\\Control\\TimeZoneInformation&quot;</span> /v RealTimeIsUniversal /d <span class=\"hljs-number\">1</span> /t REG_QWORD /f<br></code></pre></td></tr></table></figure>\n<p>这一步需要在 Powershell（管理员）中执行</p>\n<h4 id=\"Manjaro-数字时钟设置-24-小时制\"><a href=\"#Manjaro-数字时钟设置-24-小时制\" class=\"headerlink\" title=\"Manjaro 数字时钟设置 24 小时制\"></a><strong>Manjaro 数字时钟设置 24 小时制</strong></h4><p>右键点击“数字时钟” &gt;&gt; 配置数字时钟 &gt;&gt; 时间显示 &gt;&gt; 24 小时制</p>\n<h4 id=\"添加-TUNA-网络授时服务\"><a href=\"#添加-TUNA-网络授时服务\" class=\"headerlink\" title=\"添加 TUNA 网络授时服务\"></a><strong>添加 TUNA 网络授时服务</strong></h4><p>参考以下网址：</p>\n<p>TUNA NTP (网络授时) 服务使用说明</p>\n<p><a href=\"https://tuna.moe/help/ntp/\">https://tuna.moe/help/ntp/</a></p>\n<h3 id=\"关闭启动时的系统信息\"><a href=\"#关闭启动时的系统信息\" class=\"headerlink\" title=\"关闭启动时的系统信息\"></a><strong>关闭启动时的系统信息</strong></h3><p>参考以下网址：</p>\n<p>Silent Boot — ArchWiki</p>\n<p><a href=\"https://wiki.archlinux.org/title/Silent_boot\">https://wiki.archlinux.org/title/Silent_boot</a></p>\n<p>主要是 <a href=\"https://wiki.archlinux.org/title/Silent_boot#Kernel_parameters\">Kernel parameters</a> 和 <a href=\"https://wiki.archlinux.org/title/Silent_boot#fsck\">fsck</a> 两段</p>\n<p>编辑 Kernel parameters：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">sudo vim /etc/default/grub<br></code></pre></td></tr></table></figure>\n<p>将 <code>GRUB_CMDLINE_LINUX_DEFAULT</code> 的值改为 <code>&quot;quiet loglevel=3 udev.log_priority=3&quot;</code></p>\n<p>编辑 fsck:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">sudo vim /etc/mkinitcpio.conf<br></code></pre></td></tr></table></figure>\n<p>在 <code>HOOKS</code> 一行中将 <code>udev</code> 改为 <code>systemd</code>，保存后执行：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">sudo mkinitcpio -P<br></code></pre></td></tr></table></figure>\n<p>再编辑 <code>systemd-fsck-root.service</code> 和 <code>systemd-fsck@.service</code>：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">sudo systemctl edit --full systemd-fsck-root.service<br>sudo systemctl edit --full systemd-fsck@.service<br></code></pre></td></tr></table></figure>\n<p>分别在 <code>Service</code> 一段中编辑 <code>StandardOutput</code> 和 <code>StandardError</code> 如下：</p>\n<figure class=\"highlight ini\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs ini\"><span class=\"hljs-attr\">StandardOutput</span>=null<br><span class=\"hljs-attr\">StandardError</span>=journal+console<br></code></pre></td></tr></table></figure>\n<p>最后执行</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">sudo update-grub<br></code></pre></td></tr></table></figure>\n<h3 id=\"关闭重启时的-watchdog-提示\"><a href=\"#关闭重启时的-watchdog-提示\" class=\"headerlink\" title=\"关闭重启时的 watchdog 提示\"></a><strong>关闭重启时的 watchdog 提示</strong></h3><p>创建文件 <code>/etc/modprobe.d/watchdog.conf</code>，并写入：</p>\n<figure class=\"highlight elm\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs elm\"><span class=\"hljs-title\">blacklist</span> iTCO_wdtblacklist iTCO_vendor_sup<span class=\"hljs-keyword\">port</span><br></code></pre></td></tr></table></figure>\n<p>这样可以屏蔽掉不需要的驱动，保存后执行：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">sudo update-grub<br></code></pre></td></tr></table></figure>\n<p>再重启即可</p>\n<h3 id=\"hosts-文件设置（可选）\"><a href=\"#hosts-文件设置（可选）\" class=\"headerlink\" title=\"hosts 文件设置（可选）\"></a><strong>hosts 文件设置（可选）</strong></h3><p>参考以下网址：</p>\n<p>修改 hosts 解决 GitHub 访问失败</p>\n<p><a href=\"https://zhuanlan.zhihu.com/p/107334179\">https://zhuanlan.zhihu.com/p/107334179</a></p>\n<p>需要修改的文件是 <code>/etc/hosts</code>，Windows 下对应的文件位置为： <code>C:\\Windows\\System32\\drivers\\etc\\hosts</code> （注意这里是反斜杠）</p>\n<h3 id=\"动态-Swap-文件设置\"><a href=\"#动态-Swap-文件设置\" class=\"headerlink\" title=\"动态 Swap 文件设置\"></a><strong>动态 Swap 文件设置</strong></h3><p><strong>使用 swap 分区可能会缩短 SSD 的寿命，如果需要 swap 的话建议用 swap 文件，详见 <a href=\"https://wiki.archlinux.org/index.php/Swap_(简体中文\">Swap（简体中文）- Arch Wiki</a>#交换文件&gt;)</strong></p>\n<p>先下载 <code>systemd-swap</code> 软件包：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">sudo pacman -S systemd-swap<br></code></pre></td></tr></table></figure>\n<p>编辑 <code>/etc/systemd/swap.conf</code>:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">sudo vim /etc/systemd/swap.conf<br></code></pre></td></tr></table></figure>\n<p>去掉 <code>swapfc_enabled</code> 前的注释并设置为 <code>swapfc_enabled=1</code> ，保存并关闭</p>\n<p>在终端输入</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">sudo systemctl <span class=\"hljs-built_in\">enable</span> --now systemd-swap<br></code></pre></td></tr></table></figure>\n<p>以启动 <code>systemd-swap</code> 服务</p>\n<h3 id=\"Linux-挂载-Windows-磁盘\"><a href=\"#Linux-挂载-Windows-磁盘\" class=\"headerlink\" title=\"Linux 挂载 Windows 磁盘\"></a><strong>Linux 挂载 Windows 磁盘</strong></h3><p><strong>首先要确保设备加密和快速启动已经关闭</strong></p>\n<p>参考以下网址：</p>\n<p>Archwiki — fstab</p>\n<p><a href=\"https://wiki.archlinux.org/title/Fstab_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87\">https://wiki.archlinux.org/title/Fstab_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87</a>)</p>\n<h4 id=\"使用-UUID\"><a href=\"#使用-UUID\" class=\"headerlink\" title=\"使用 UUID\"></a><strong>使用 UUID</strong></h4><p>官方推荐的方法是使用 UUID，以分别挂载 C 盘和 D 盘到 <code>/home/(user_name)/C</code> 和 <code>/home/(user_name)/D</code> 为例，在终端中输入：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">lsblk -f<br></code></pre></td></tr></table></figure>\n<p>在输出结果中可以发现 Windows 的硬盘分区：</p>\n<figure class=\"highlight less\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs less\"><span class=\"hljs-selector-tag\">NAME</span>       <span class=\"hljs-selector-tag\">FSTYPE</span>       <span class=\"hljs-selector-tag\">LABEL</span>   <span class=\"hljs-selector-tag\">UUID</span><br>├─(name_C) <span class=\"hljs-selector-tag\">ntfs</span>         <span class=\"hljs-selector-tag\">C</span>       (UUID_C)<br>├─(name_D) <span class=\"hljs-selector-tag\">ntfs</span>         <span class=\"hljs-selector-tag\">D</span>       (UUID_D)<br></code></pre></td></tr></table></figure>\n<p>接着就来修改系统文件：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">sudo vim /etc/fstab<br></code></pre></td></tr></table></figure>\n<p>在最后加入这两行：</p>\n<figure class=\"highlight gradle\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs gradle\">UUID=(UUID_C)                     <span class=\"hljs-regexp\">/home/</span>(user_name)/C    ntfs <span class=\"hljs-keyword\">default</span> <span class=\"hljs-number\">0</span> <span class=\"hljs-number\">0</span><br>UUID=(UUID_D)                     <span class=\"hljs-regexp\">/home/</span>(user_name)/D    ntfs <span class=\"hljs-keyword\">default</span> <span class=\"hljs-number\">0</span> <span class=\"hljs-number\">0</span><br></code></pre></td></tr></table></figure>\n<p>重启电脑后，即可自动挂载</p>\n<p><strong>如果需要格式化 C 盘或 D 盘，先从 <code>/etc/fstab</code> 中删去这两行，再操作，之后磁盘的 <code>UUID</code> 会被更改，再编辑 <code>/etc/fstab</code> ，重启挂载即可</strong></p>\n<h4 id=\"使用图形化界面\"><a href=\"#使用图形化界面\" class=\"headerlink\" title=\"使用图形化界面\"></a><strong>使用图形化界面</strong></h4><p>在系统应用“KDE 分区管理器”中卸载 C 盘、D 盘，右键选择编辑挂载点，编辑为 <code>/home/(user_name)/C</code> 和 <code>/home/(user_name)/D</code>，执行即可</p>\n<p>这相当于直接编辑 <code>/etc/fstab</code>，加入：</p>\n<figure class=\"highlight gradle\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs gradle\"><span class=\"hljs-regexp\">/dev/</span>(name_C)                     <span class=\"hljs-regexp\">/home/</span>(user_name)/C    ntfs <span class=\"hljs-keyword\">default</span> <span class=\"hljs-number\">0</span> <span class=\"hljs-number\">0</span><br><span class=\"hljs-regexp\">/dev/</span>(name_D)                     <span class=\"hljs-regexp\">/home/</span>(user_name)/D    ntfs <span class=\"hljs-keyword\">default</span> <span class=\"hljs-number\">0</span> <span class=\"hljs-number\">0</span><br></code></pre></td></tr></table></figure>\n<p>好处是格式化磁盘后内核名称不变，依然可以挂载</p>\n<h4 id=\"如果-Windows-磁盘突然变成只读\"><a href=\"#如果-Windows-磁盘突然变成只读\" class=\"headerlink\" title=\"如果 Windows 磁盘突然变成只读\"></a><strong>如果 Windows 磁盘突然变成只读</strong></h4><p><strong>首先检查 Windows 中是否关闭了快速启动</strong></p>\n<p>关闭快速启动（Windows 工具 –&gt; 控制面板 &gt;&gt; 电源选项 &gt;&gt; 选择电源按钮的功能 &gt;&gt; 更改当前不可用的设置 &gt;&gt; 关闭快速启动 &gt;&gt; 保存修改）并重启电脑</p>\n<p>一般来讲是 Windows 开启了快速启动，或者进行了优化磁盘等操作导致的，若关闭快速启动不能解决问题，使用下面的方法：</p>\n<p>检查占用进程：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">sudo fuser -m -u /dev/(partition_name)<br></code></pre></td></tr></table></figure>\n<p>可以看到数字，就是占用目录的进程 PID，终止进程：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">sudo <span class=\"hljs-built_in\">kill</span> (PID_number)<br></code></pre></td></tr></table></figure>\n<p>卸载磁盘分区：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">sudo umount /dev/(partition_name)<br></code></pre></td></tr></table></figure>\n<p>执行硬盘 NTFS 分区修复：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">sudo ntfsfix /dev/(partition_name)<br></code></pre></td></tr></table></figure>\n<p>再重新挂载即可：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">sudo mount /dev/(partition_name) (mount_path)/(mount_folder)<br></code></pre></td></tr></table></figure>\n<p>如果在 Dolphin 中已经成功卸载分区，则直接执行：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">sudo ntfsfix /dev/(partition_name) &amp;&amp; sudo mount /dev/(partition_name)(mount_path)/(mount_folder)<br></code></pre></td></tr></table></figure>\n<h3 id=\"系统分区改变导致时进入-GRUB-Rescue-模式\"><a href=\"#系统分区改变导致时进入-GRUB-Rescue-模式\" class=\"headerlink\" title=\"系统分区改变导致时进入 GRUB Rescue 模式\"></a><strong>系统分区改变导致时进入 GRUB Rescue 模式</strong></h3><p>此时会在开机时显示如下内容而无法进入选择系统的界面：</p>\n<figure class=\"highlight subunit\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs subunit\"><span class=\"hljs-keyword\">error: </span>no such partition.<br>Entering rescue mode...<br>grub rescue&gt;<br></code></pre></td></tr></table></figure>\n<p>此时执行 <code>ls</code>，显示如下：</p>\n<figure class=\"highlight clojure\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs clojure\">((<span class=\"hljs-name\">hd_number</span>)) ((<span class=\"hljs-name\">hd_number</span>),(<span class=\"hljs-name\">gpt_number</span>))<br></code></pre></td></tr></table></figure>\n<p>其中硬盘编号 <code>(hd_number)</code> 从小到大排列（最小值为 0），分区编号 <code>(gpt_number)</code> 从大到小排列（最小值为 1）</p>\n<p>找到安装 Manjaro 的分区<code>((hd_number),(gpt_number))</code>，此时执行 <code>ls((hd_number),(gpt_number))</code>应该能看到 Manjaro 根目录下的所有文件和文件夹</p>\n<p>手动修改启动分区所在的位置：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-built_in\">set</span> prefix=((hd_number),(gpt_number))/boot/grub<br></code></pre></td></tr></table></figure>\n<p>执行：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">insmod normal<br>normal<br></code></pre></td></tr></table></figure>\n<p>即可进入 GRUB 界面，从这里登录 Manjaro 系统，登录后执行：</p>\n<figure class=\"highlight ebnf\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs ebnf\"><span class=\"hljs-attribute\">sudo update-grub</span><br></code></pre></td></tr></table></figure>\n<p>以修复启动项</p>\n<h3 id=\"调整文件夹名称为英文\"><a href=\"#调整文件夹名称为英文\" class=\"headerlink\" title=\"调整文件夹名称为英文\"></a><strong>调整文件夹名称为英文</strong></h3><p>修改 <code>~/.config/user-dirs.dirs</code>，改为：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">XDG_DESKTOP_DIR=<span class=\"hljs-string\">&quot;<span class=\"hljs-variable\">$HOME</span>/Desktop&quot;</span><br>XDG_DOCUMENTS_DIR=<span class=\"hljs-string\">&quot;<span class=\"hljs-variable\">$HOME</span>/Documents&quot;</span><br>XDG_DOWNLOAD_DIR=<span class=\"hljs-string\">&quot;<span class=\"hljs-variable\">$HOME</span>/Downloads&quot;</span><br>XDG_MUSIC_DIR=<span class=\"hljs-string\">&quot;<span class=\"hljs-variable\">$HOME</span>/Music&quot;</span><br>XDG_PICTURES_DIR=<span class=\"hljs-string\">&quot;<span class=\"hljs-variable\">$HOME</span>/Pictures&quot;</span><br>XDG_PUBLICSHARE_DIR=<span class=\"hljs-string\">&quot;<span class=\"hljs-variable\">$HOME</span>/Public&quot;</span><br>XDG_TEMPLATES_DIR=<span class=\"hljs-string\">&quot;<span class=\"hljs-variable\">$HOME</span>/Templates&quot;</span><br>XDG_VIDEOS_DIR=<span class=\"hljs-string\">&quot;<span class=\"hljs-variable\">$HOME</span>/Videos&quot;</span><br></code></pre></td></tr></table></figure>\n<p>并在 Dolphin 中按照上面的说明更改文件名</p>\n<h3 id=\"Dolphin-在更新后删除文件-文件夹报错\"><a href=\"#Dolphin-在更新后删除文件-文件夹报错\" class=\"headerlink\" title=\"Dolphin 在更新后删除文件/文件夹报错\"></a><strong>Dolphin 在更新后删除文件/文件夹报错</strong></h3><p>如果出现以下错误：</p>\n<figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs awk\">无法创建输入输出后端。klauncher 回应：装入“<span class=\"hljs-regexp\">/usr/</span>lib<span class=\"hljs-regexp\">/qt/</span>plugins<span class=\"hljs-regexp\">/kf5/</span>kio/trash.so”时出错<br></code></pre></td></tr></table></figure>\n<p>说明 Qt 还在内存中保留着旧版 Dolphin，此时可以重启/重新登录，或执行：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">dbus-launch dolphin<br></code></pre></td></tr></table></figure>\n<h3 id=\"SONY-WH-1000XM3-耳机的蓝牙连接\"><a href=\"#SONY-WH-1000XM3-耳机的蓝牙连接\" class=\"headerlink\" title=\"SONY WH-1000XM3 耳机的蓝牙连接\"></a><strong>SONY WH-1000XM3 耳机的蓝牙连接</strong></h3><p>长按耳机电源键约 7 秒即可进入配对模式，可以在蓝牙中配对</p>\n<h3 id=\"Logitech-M590-鼠标的蓝牙连接\"><a href=\"#Logitech-M590-鼠标的蓝牙连接\" class=\"headerlink\" title=\"Logitech M590 鼠标的蓝牙连接\"></a><strong>Logitech M590 鼠标的蓝牙连接</strong></h3><p>同一台电脑的 Windows 系统和 Manjaro 系统在鼠标上会被识别为两个设备</p>\n<p>如果 Windows 系统被识别为设备 1，需要按滚轮后的圆形按钮切换至设备 2</p>\n<p>长按圆形按钮直到灯 2 快速闪烁进入配对模式，可以在蓝牙中配对</p>\n<h4 id=\"如果鼠标配对后屏幕光标无法移动\"><a href=\"#如果鼠标配对后屏幕光标无法移动\" class=\"headerlink\" title=\"如果鼠标配对后屏幕光标无法移动\"></a><strong>如果鼠标配对后屏幕光标无法移动</strong></h4><p>一般可以直接删除设备重新配对，如果失败则按照下面步骤操作：</p>\n<p>首先要安装 <code>bluez-utils</code>：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">sudo pacman -S bluez-utils<br></code></pre></td></tr></table></figure>\n<p>在终端中输入：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">bluetoothctl<br></code></pre></td></tr></table></figure>\n<p>然后参考以下网站：</p>\n<p>Arch Wiki — 关于 Logitech BLE 鼠标的问题</p>\n<p><a href=\"https://wiki.archlinux.org/index.php/Bluetooth_mouse#Problems_with_the_Logitech_BLE_mouse_(M557,_M590,_anywhere_mouse_2,_etc\">https://wiki.archlinux.org/index.php/Bluetooth_mouse#Problems_with_the_Logitech_BLE_mouse_(M557,_M590,_anywhere_mouse_2,_etc</a>)</p>\n<h3 id=\"解决用-root-登录没有声音的问题\"><a href=\"#解决用-root-登录没有声音的问题\" class=\"headerlink\" title=\"解决用 root 登录没有声音的问题\"></a><strong>解决用 root 登录没有声音的问题</strong></h3><p>在 <code>/root/.config/autostart/</code> 下创建一个 <code>pulseaudio.desktop</code> 文件：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">sudo vim /root/.config/autostart/pulseaudio.desktop<br></code></pre></td></tr></table></figure>\n<p>写入：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">[Desktop Entry]<br>Encoding=UTF-8<br>Type=Application<br>Name=pulseaudio<br>Exec=pulseaudio --start --log-target=syslog<br>StartupNotify=<span class=\"hljs-literal\">false</span><br>Terminal=<span class=\"hljs-literal\">true</span><br>Hidden=<span class=\"hljs-literal\">false</span><br></code></pre></td></tr></table></figure>\n<p>保存退出即可</p>\n<h3 id=\"切换图形化界面和命令行界面\"><a href=\"#切换图形化界面和命令行界面\" class=\"headerlink\" title=\"切换图形化界面和命令行界面\"></a><strong>切换图形化界面和命令行界面</strong></h3><p>登录时默认进入的是图形化界面，有时候开机后黑屏是图形化界面显示不出来所致，此时可以按快捷键 <code>Ctrl+Alt+Fn+(F2~F6)</code>进入<code>tty2 ~ tty6</code> 的任何一个命令行界面</p>\n<p>注意此时需要手动输入用户名和密码</p>\n<p>在命令行界面解决问题后，按快捷键 <code>Ctrl+Alt+Fn+F1</code> 可以转换回图形化界面</p>\n<h3 id=\"网络设置\"><a href=\"#网络设置\" class=\"headerlink\" title=\"网络设置\"></a><strong>网络设置</strong></h3><h4 id=\"ping-命令\"><a href=\"#ping-命令\" class=\"headerlink\" title=\"ping 命令\"></a><strong>ping 命令</strong></h4><p>IP 地址和连接情况可以通过对域名 <code>ping</code> 得到，例如：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">ping -c (count_number) (website_destination)<br></code></pre></td></tr></table></figure>\n<p>表示对网站域名 <code>(website_destination)</code> 发送 <code>(count_number)</code> 次 <code>ping</code> 连通请求</p>\n<h4 id=\"命令行连接-PKU-Wi-Fi\"><a href=\"#命令行连接-PKU-Wi-Fi\" class=\"headerlink\" title=\"命令行连接 PKU Wi-Fi\"></a><strong>命令行连接 PKU Wi-Fi</strong></h4><p>方法一：命令行输入 <code>nmtui</code> 并按照终端上的图形界面一步一步操作</p>\n<p>方法二：使用 <code>nmcli</code>，输入：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">nmcli device wifi connect PKU<br></code></pre></td></tr></table></figure>\n<p>通用的操作是：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">nmcli device wifi connect (SSID) password (student_passowrd)<br></code></pre></td></tr></table></figure>\n<p>注意这里的 SSID 是 Wi-Fi 的名称（如 PKU 或 TP-LINK_XXX），不是 IP 地址或 MAC 地址</p>\n<h4 id=\"命令行连接-PKU-VPN\"><a href=\"#命令行连接-PKU-VPN\" class=\"headerlink\" title=\"命令行连接 PKU VPN\"></a><strong>命令行连接 PKU VPN</strong></h4><p>此处需要一直打开终端，故推荐使用 Yakuake</p>\n<p>按 <code>Fn+F12</code> 打开 Yakuake，输入：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">sudo openconnect --protocol=nc --user (student_ID) https://vpn.pku.edu.cn<br></code></pre></td></tr></table></figure>\n<p>输入密码即可连接</p>\n<p>之后可以按 <code>Fn+F12</code> 让它收起，不要关闭窗口（关闭窗口则 VPN 断开）</p>\n<h4 id=\"图形化界面连接-PKU-Secure\"><a href=\"#图形化界面连接-PKU-Secure\" class=\"headerlink\" title=\"图形化界面连接 PKU Secure\"></a><strong>图形化界面连接 PKU Secure</strong></h4><p>Wi-Fi 安全 &gt;&gt; 安全 &gt;&gt; 企业 WPA/WPA2</p>\n<p>Wi-Fi 安全 &gt;&gt; 认证 &gt;&gt; 受保护的 EAP（PEAP）</p>\n<p>PEAP 版本 &gt;&gt; 自动</p>\n<p>内部认证 &gt;&gt; MSCHAPv2</p>\n<p>输入用户名、密码即可连接</p>\n<h4 id=\"命令行连接-PKU-Secure\"><a href=\"#命令行连接-PKU-Secure\" class=\"headerlink\" title=\"命令行连接 PKU Secure\"></a><strong>命令行连接 PKU Secure</strong></h4><p>首先进入 <code>nmcli</code> 配置：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">nmcli connection edit PKU\\ Secure<br></code></pre></td></tr></table></figure>\n<p>在 <code>nmcli</code> 界面内输入：</p>\n<figure class=\"highlight gams\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs gams\"><span class=\"hljs-keyword\">set</span> wifi-sec.key-mgmt <span class=\"hljs-comment\">wpa-eap</span><br><span class=\"hljs-keyword\">set</span> <span class=\"hljs-comment\">ipv4.method auto</span><br><span class=\"hljs-keyword\">set</span> <span class=\"hljs-comment\">802-1x.eap peap</span><br><span class=\"hljs-keyword\">set</span> <span class=\"hljs-comment\">802-1x.phase2-auth mschapv2</span><br><span class=\"hljs-keyword\">set</span> <span class=\"hljs-comment\">802-1x.identity (student_ID)</span><br><span class=\"hljs-keyword\">set</span> <span class=\"hljs-comment\">802-1x.password (student_password)</span><br>save<br>activate<br></code></pre></td></tr></table></figure>\n<h3 id=\"调整-CPU-频率（可选）\"><a href=\"#调整-CPU-频率（可选）\" class=\"headerlink\" title=\"调整 CPU 频率（可选）\"></a><strong>调整 CPU 频率（可选）</strong></h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">sudo vim /etc/tlp.conf<br></code></pre></td></tr></table></figure>\n<p>若更改 CPU 频率，修改以下位置：</p>\n<figure class=\"highlight ini\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs ini\"><span class=\"hljs-attr\">CPU_MIN_PERF_ON_AC</span>=<span class=\"hljs-number\">0</span><br><span class=\"hljs-attr\">CPU_MAX_PERF_ON_AC</span>=<span class=\"hljs-number\">100</span><br><span class=\"hljs-attr\">CPU_MIN_PERF_ON_BAT</span>=<span class=\"hljs-number\">0</span><br><span class=\"hljs-attr\">CPU_MAX_PERF_ON_BAT</span>=<span class=\"hljs-number\">30</span><br></code></pre></td></tr></table></figure>\n<p>若更改 CPU 睿频设置，修改以下位置：</p>\n<figure class=\"highlight ini\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs ini\"><span class=\"hljs-attr\">CPU_BOOST_ON_AC</span>=<span class=\"hljs-number\">1</span><br><span class=\"hljs-attr\">CPU_BOOST_ON_BAT</span>=<span class=\"hljs-number\">0</span><br></code></pre></td></tr></table></figure>\n<p><strong>不需要高性能的时候可以关闭睿频，这样 CPU 的频率就会限制在 1.9 GHz 以下，大幅增加续航、减少发热</strong></p>\n<p>保存、关闭，在终端中输入：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">sudo tlp start<br></code></pre></td></tr></table></figure>\n<h4 id=\"显示-CPU-频率（可选）\"><a href=\"#显示-CPU-频率（可选）\" class=\"headerlink\" title=\"显示 CPU 频率（可选）\"></a><strong>显示 CPU 频率（可选）</strong></h4><p>安装 KDE 小部件：<a href=\"https://github.com/jsalatas/plasma-pstate\">Intel P-state and CPU-Freq Manager</a></p>\n<p>右键点击顶栏，选择“添加部件”，找到 Intel P-state and CPU-Freq Manager 并添加在顶栏即可</p>\n<h3 id=\"禁用-baloo（可选）\"><a href=\"#禁用-baloo（可选）\" class=\"headerlink\" title=\"禁用 baloo（可选）\"></a><strong>禁用 baloo（可选）</strong></h3><p><code>baloo</code> 是 KDE 的文件索引服务，能加快文件搜索的速度，但可能会时不时产生大量硬盘读写而导致图形界面卡顿。可以用下面的命令禁用之：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">balooctl <span class=\"hljs-built_in\">disable</span><br></code></pre></td></tr></table></figure>\n<h3 id=\"为-pacman-启用多线程下载（可选）\"><a href=\"#为-pacman-启用多线程下载（可选）\" class=\"headerlink\" title=\"为 pacman 启用多线程下载（可选）\"></a><strong>为 pacman 启用多线程下载（可选）</strong></h3><p>执行下面的命令下载 axel</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">sudo pacman -S axel<br></code></pre></td></tr></table></figure>\n<p>编辑 <code>/etc/pacman.conf</code> 文件（在第 21 行）:</p>\n<figure class=\"highlight perl\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs perl\">XferCommand = <span class=\"hljs-regexp\">/usr/</span>bin/axel -n <span class=\"hljs-number\">10</span> -o %o %u<br></code></pre></td></tr></table></figure>\n<p>编辑 <code>/etc/makepkg.conf</code> 文件（在第 11-16 行）:</p>\n<figure class=\"highlight lisp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs lisp\">DLAGENTS=(&#x27;file:<span class=\"hljs-symbol\">:/usr/bin/curl</span> -gqC - -o %o %u&#x27;<br>&#x27;ftp:<span class=\"hljs-symbol\">:/usr/bin/axel</span> -n <span class=\"hljs-number\">10</span> -o %o %u&#x27;<br>&#x27;http:<span class=\"hljs-symbol\">:/usr/bin/axel</span> -n <span class=\"hljs-number\">10</span> -o %o %u&#x27;<br>&#x27;https:<span class=\"hljs-symbol\">:/usr/bin/axel</span> -n <span class=\"hljs-number\">10</span> -o %o %u&#x27;<br>&#x27;rsync:<span class=\"hljs-symbol\">:/usr/bin/rsync</span> --no-motd -z %u %o&#x27;<br>&#x27;scp:<span class=\"hljs-symbol\">:/usr/bin/scp</span> -C %u %o&#x27;)<br></code></pre></td></tr></table></figure>\n<p><strong>注意某些软件包如 <code>rider</code> 和 <code>qqmusic-bin</code> 等下载源不支持 axel，启用多线程下载后可能会导致构建失败</strong></p>\n<h3 id=\"重新开启-Secure-Boot（未测试）\"><a href=\"#重新开启-Secure-Boot（未测试）\" class=\"headerlink\" title=\"重新开启 Secure Boot（未测试）\"></a><strong>重新开启 Secure Boot（未测试）</strong></h3><p>如果想在开启 Secure Boot 的情况下登录进 Manjaro Linux，可以使用经过微软签名的 PreLoader 或者 shim，然后在 UEFI 设置中将 Secure Boot 级别设置为 Microsoft &amp; 3rd Party CA</p>\n<p>具体教程参考以下网址：</p>\n<p>Secure Boot — ArchWiki</p>\n<p><a href=\"https://wiki.archlinux.org/index.php/Unified_Extensible_Firmware_Interface/Secure_Boot#Microsoft_Windows\">https://wiki.archlinux.org/index.php/Unified_Extensible_Firmware_Interface/Secure_Boot#Microsoft_Windows</a></p>\n<h3 id=\"Git-配置用户名、邮箱\"><a href=\"#Git-配置用户名、邮箱\" class=\"headerlink\" title=\"Git 配置用户名、邮箱\"></a><strong>Git 配置用户名、邮箱</strong></h3><p>配置用户名、邮箱：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">git config --global user.name <span class=\"hljs-string\">&quot;(user_name)&quot;</span><br>git config --global user.email <span class=\"hljs-string\">&quot;(user_email)&quot;</span><br></code></pre></td></tr></table></figure>\n<p>Git 使用教程参考以下网址：</p>\n<p>菜鸟教程 — Git 教程</p>\n<p><a href=\"https://www.runoob.com/git/git-tutorial.html\">https://www.runoob.com/git/git-tutorial.html</a></p>\n<h3 id=\"使用-SSH-连接到-Github\"><a href=\"#使用-SSH-连接到-Github\" class=\"headerlink\" title=\"使用 SSH 连接到 Github\"></a><strong>使用 SSH 连接到 Github</strong></h3><p>推荐使用 SSH 连接到 Github，其安全性更高，访问速度较快且更加稳定</p>\n<p>配置参考以下网址：</p>\n<p>Github Docs — 使用 SSH 连接到 Github</p>\n<p><a href=\"https://docs.github.com/cn/github/authenticating-to-github/connecting-to-github-with-ssh\">https://docs.github.com/cn/github/authenticating-to-github/connecting-to-github-with-ssh</a></p>\n<p>在 Linux 上主要是以下内容：</p>\n<h4 id=\"生成新-SSH-密钥并添加到-ssh-agent\"><a href=\"#生成新-SSH-密钥并添加到-ssh-agent\" class=\"headerlink\" title=\"生成新 SSH 密钥并添加到 ssh-agent\"></a><strong>生成新 SSH 密钥并添加到 ssh-agent</strong></h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">ssh-keygen -t ed25519 -C <span class=\"hljs-string\">&quot;(user_email)&quot;</span><br><span class=\"hljs-built_in\">eval</span> <span class=\"hljs-string\">&quot;<span class=\"hljs-subst\">$(ssh-agent -s)</span>&quot;</span><br>ssh-add ~/.ssh/id_ed25519<br></code></pre></td></tr></table></figure>\n<p>第一步会提示输入安全密码，可以按 <code>Enter</code> 跳过，不影响后续操作和使用</p>\n<h4 id=\"新增-SSH-密钥到-GitHub-帐户\"><a href=\"#新增-SSH-密钥到-GitHub-帐户\" class=\"headerlink\" title=\"新增 SSH 密钥到 GitHub 帐户\"></a><strong>新增 SSH 密钥到 GitHub 帐户</strong></h4><p>通过 <code>cat ~/.ssh/id_ed25519.pub</code> 查看公钥并复制到 Github 账户下的“设置 &gt;&gt; SSH and GPG keys”中</p>\n<h4 id=\"测试-SSH-连接\"><a href=\"#测试-SSH-连接\" class=\"headerlink\" title=\"测试 SSH 连接\"></a><strong>测试 SSH 连接</strong></h4><p>在终端中输入：</p>\n<figure class=\"highlight angelscript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs angelscript\">ssh -T <span class=\"hljs-symbol\">git@</span>github.com<br></code></pre></td></tr></table></figure>\n<p>这一步要输入 <code>yes</code> 确定</p>\n<p><strong>注意 Linux 上和 Windows 上用的是不同的密钥</strong></p>\n<h2 id=\"一些有用的命令总结\"><a href=\"#一些有用的命令总结\" class=\"headerlink\" title=\"一些有用的命令总结\"></a><strong>一些有用的命令总结</strong></h2><h3 id=\"获取设备信息\"><a href=\"#获取设备信息\" class=\"headerlink\" title=\"获取设备信息\"></a><strong>获取设备信息</strong></h3><h4 id=\"简要信息\"><a href=\"#简要信息\" class=\"headerlink\" title=\"简要信息\"></a><strong>简要信息</strong></h4><p>在终端中输入：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">screenfetch<br></code></pre></td></tr></table></figure>\n<p>或者：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">sudo inxi -b<br></code></pre></td></tr></table></figure>\n<h4 id=\"详细信息\"><a href=\"#详细信息\" class=\"headerlink\" title=\"详细信息\"></a><strong>详细信息</strong></h4><p>在终端中输入：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">sudo inxi -Fa<br></code></pre></td></tr></table></figure>\n<h4 id=\"命令行进程查看器\"><a href=\"#命令行进程查看器\" class=\"headerlink\" title=\"命令行进程查看器\"></a><strong>命令行进程查看器</strong></h4><p>在终端中输入：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">htop<br></code></pre></td></tr></table></figure>\n<h4 id=\"命令行音量调节器\"><a href=\"#命令行音量调节器\" class=\"headerlink\" title=\"命令行音量调节器\"></a><strong>命令行音量调节器</strong></h4><p>在终端中输入：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">alsamixer<br></code></pre></td></tr></table></figure>\n<h4 id=\"内存大小\"><a href=\"#内存大小\" class=\"headerlink\" title=\"内存大小\"></a><strong>内存大小</strong></h4><p>在终端中输入：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">free<br></code></pre></td></tr></table></figure>\n<h4 id=\"上一次关机的系统日志\"><a href=\"#上一次关机的系统日志\" class=\"headerlink\" title=\"上一次关机的系统日志\"></a><strong>上一次关机的系统日志</strong></h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">journalctl -rb -1<br></code></pre></td></tr></table></figure>\n<h3 id=\"查看并转换编码\"><a href=\"#查看并转换编码\" class=\"headerlink\" title=\"查看并转换编码\"></a><strong>查看并转换编码</strong></h3><p>查看编码的命令为：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">file -i (file_name)<br></code></pre></td></tr></table></figure>\n<p>其中 <code>charset</code> 一栏的输出即为文件编码</p>\n<p>转换编码可以使用系统预装的 <code>iconv</code>，方法为：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">iconv -f (from_encoding) -t (to_encoding) (from_file_name) -o (to_file_name)<br></code></pre></td></tr></table></figure>\n<p>该方法适合对文本文件转换编码，对 ZIP 压缩包和 PDF 文件等二进制文件则无法使用</p>\n<p><code>iconv</code> 支持的编码格式可以用 <code>iconv -l</code> 查看</p>\n<h3 id=\"转换图片格式\"><a href=\"#转换图片格式\" class=\"headerlink\" title=\"转换图片格式\"></a><strong>转换图片格式</strong></h3><p>批量将图片从 PNG 格式转换为 JPG 格式：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">ls -1 *.png | xargs -n 1 bash -c <span class=\"hljs-string\">&#x27;convert &quot;$0&quot; &quot;$&#123;0%.png&#125;.jpg&quot;&#x27;</span><br></code></pre></td></tr></table></figure>\n<h3 id=\"批量更改文件名\"><a href=\"#批量更改文件名\" class=\"headerlink\" title=\"批量更改文件名\"></a><strong>批量更改文件名</strong></h3><p>批量将文件名中的空格改成下划线：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-keyword\">for</span> file <span class=\"hljs-keyword\">in</span> *; <span class=\"hljs-keyword\">do</span> mv -n <span class=\"hljs-string\">&quot;<span class=\"hljs-variable\">$file</span>&quot;</span> `<span class=\"hljs-built_in\">echo</span> <span class=\"hljs-variable\">$file</span> | tr <span class=\"hljs-string\">&#x27; &#x27;</span> <span class=\"hljs-string\">&#x27;_&#x27;</span>`; <span class=\"hljs-keyword\">done</span><br></code></pre></td></tr></table></figure>\n<p><strong>Linux 的内存策略可以参考这个网站：<a href=\"https://www.linuxatemyram.com/\">https://www.linuxatemyram.com/</a></strong></p>\n<h3 id=\"命令行解压-ZIP-压缩包\"><a href=\"#命令行解压-ZIP-压缩包\" class=\"headerlink\" title=\"命令行解压 ZIP 压缩包\"></a><strong>命令行解压 ZIP 压缩包</strong></h3><p>建议使用系统预装的 <code>unar</code>，因为它可以自动检测文件编码（系统右键菜单默认的 Ark 不具备这个功能，可能导致乱码）：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">unar (file_name).zip<br></code></pre></td></tr></table></figure>\n<h3 id=\"设置命令别名\"><a href=\"#设置命令别名\" class=\"headerlink\" title=\"设置命令别名\"></a><strong>设置命令别名</strong></h3><p>在 <code>~/.bashrc</code> 中添加一句 <code>alias (new_command)=(old-command)</code>，这样直接输入 <code>new_command</code> 即等效于输入 <code>old_command</code></p>\n<h2 id=\"美化\"><a href=\"#美化\" class=\"headerlink\" title=\"美化\"></a><strong>美化</strong></h2><h3 id=\"自定义壁纸\"><a href=\"#自定义壁纸\" class=\"headerlink\" title=\"自定义壁纸\"></a><strong>自定义壁纸</strong></h3><p>桌面壁纸可以在 <a href=\"https://www.pling.com/\">pling.com</a> 下载，专门为 Manjaro 定制的壁纸可以在这里找到：</p>\n<p>Wallpapers Manjaro — pling.com</p>\n<p><a href=\"https://www.pling.com/browse/cat/309/order/latest/\">https://www.pling.com/browse/cat/309/order/latest/</a></p>\n<p>默认的壁纸保存位置为 <code>/usr/share/wallpapers/</code></p>\n<p>还可以使用包管理器（pacman/sudo pacman/pamac）下载壁纸，用“添加/删除软件”或 <code>pamac search wallpaper</code> 查找</p>\n<p>右键点击桌面得到桌面菜单，点击“配置桌面和壁纸”即可选择想要的壁纸，位置建议选择“缩放并裁剪”</p>\n<h3 id=\"添加用户图标\"><a href=\"#添加用户图标\" class=\"headerlink\" title=\"添加用户图标\"></a><strong>添加用户图标</strong></h3><p>系统设置 &gt;&gt; 用户账户 &gt;&gt; 图像</p>\n<h3 id=\"开机登录美化\"><a href=\"#开机登录美化\" class=\"headerlink\" title=\"开机登录美化\"></a><strong>开机登录美化</strong></h3><p>开机与关机 &gt;&gt; 登录屏幕（SDDM） &gt;&gt; Breeze 或者 Fluent</p>\n<p>外观 &gt;&gt; 欢迎屏幕 &gt;&gt; Snowy Night Miku、Manjaro Linux Reflection Splashscreen、ManjaroLogo Black、Plasma 5 Manjaro Splashscreen White Blur</p>\n<p><strong>现在新设计的登录屏幕（SDDM）和欢迎屏幕已经非常美观且改进了翻译问题，最方便的方法就是登录屏幕（SDDM）选择 Breath 2，欢迎屏幕选择 Breath2 2021</strong></p>\n<h4 id=\"SDDM-时间显示调整为-24-小时制\"><a href=\"#SDDM-时间显示调整为-24-小时制\" class=\"headerlink\" title=\"SDDM 时间显示调整为 24 小时制\"></a><strong>SDDM 时间显示调整为 24 小时制</strong></h4><p>更改 <code>/usr/share/sddm/themes/(theme_name)/components/Clock.qml</code> 或 <code>/usr/share/sddm/themes/(theme_name)/Clock.qml</code> 中的 <code>Qt.formatTime</code> 一行：</p>\n<figure class=\"highlight reasonml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs reasonml\">text: <span class=\"hljs-module-access\"><span class=\"hljs-module\"><span class=\"hljs-identifier\">Qt</span>.</span></span>format<span class=\"hljs-constructor\">Time(<span class=\"hljs-params\">timeSource</span>.<span class=\"hljs-params\">data</span>[<span class=\"hljs-string\">&quot;Local&quot;</span>][<span class=\"hljs-string\">&quot;DateTime&quot;</span>])</span><br></code></pre></td></tr></table></figure>\n<p>将其改为：</p>\n<figure class=\"highlight reasonml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs reasonml\">text: <span class=\"hljs-module-access\"><span class=\"hljs-module\"><span class=\"hljs-identifier\">Qt</span>.</span></span>format<span class=\"hljs-constructor\">Time(<span class=\"hljs-params\">timeSource</span>.<span class=\"hljs-params\">data</span>[<span class=\"hljs-string\">&quot;Local&quot;</span>][<span class=\"hljs-string\">&quot;DateTime&quot;</span>], <span class=\"hljs-string\">&quot;hh:mm:ss&quot;</span>)</span><br></code></pre></td></tr></table></figure>\n<p>保存重启即可</p>\n<h3 id=\"主题-Mac-风格美化（可选）\"><a href=\"#主题-Mac-风格美化（可选）\" class=\"headerlink\" title=\"主题 Mac 风格美化（可选）\"></a><strong>主题 Mac 风格美化（可选）</strong></h3><p>参考以下网址：</p>\n<p>KDE 桌面的 Mac 化</p>\n<p><a href=\"https://www.cnblogs.com/luoshuitianyi/p/10587788.html\">https://www.cnblogs.com/luoshuitianyi/p/10587788.html</a></p>\n<p>其中 Plasma 主题、GTK 主题和图标主题分别选择：<br>Plasma Theme: Mojave-CT<br>GTK Theme: Mojave-light-alt [GTK2/3]<br>Icon Theme: La Capitaine</p>\n<p>KDE 桌面美化指南</p>\n<p><a href=\"https://acherstyx.github.io/2020/06/30/KDE%E6%A1%8C%E9%9D%A2%E7%BE%8E%E5%8C%96%E6%8C%87%E5%8D%97/\">https://acherstyx.github.io/2020/06/30/KDE%E6%A1%8C%E9%9D%A2%E7%BE%8E%E5%8C%96%E6%8C%87%E5%8D%97/</a></p>\n<p>Latte-Dock 的推荐设置：</p>\n<p>行为：位置 &gt;&gt; 底部，可见性 &gt;&gt; 自动隐藏，延迟 &gt;&gt; 显示 &gt;&gt; none</p>\n<p>外观：绝对大小 &gt;&gt; 96，背景大小 &gt;&gt; 10%</p>\n<p><strong>不想使用 Mac 风格主题但又想使用浅色主题时，建议使用 Manjaro 新官方主题 Breath2 2021（也有深浅搭配和深色主题可选）或 KDE 官方主题 Breeze，并将终端（Konsole 和 Yakuake）主题改为“白底黑字”，背景透明度选择 20%</strong></p>\n<h4 id=\"配置桌面小部件\"><a href=\"#配置桌面小部件\" class=\"headerlink\" title=\"配置桌面小部件\"></a><strong>配置桌面小部件</strong></h4><p>右键点击桌面 &gt;&gt; 添加部件 &gt;&gt; 获取新部件 &gt;&gt; 下载新 Plasma 部件</p>\n<p>在这里可以下载桌面小部件，并在“添加部件”处添加，例如 Simple System Monitor</p>\n<h4 id=\"zsh-与-Oh-My-Zsh-配置（可选）\"><a href=\"#zsh-与-Oh-My-Zsh-配置（可选）\" class=\"headerlink\" title=\"zsh 与 Oh-My-Zsh 配置（可选）\"></a><strong>zsh 与 Oh-My-Zsh 配置（可选）</strong></h4><p>Konsole &gt;&gt; 设置 &gt;&gt; 编辑当前方案 &gt;&gt; 常规 &gt;&gt; 命令 &gt;&gt; <code>usr/bin/zsh</code></p>\n<p>安装 Oh-My-Zsh，执行：（不推荐用包管理器安装）</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">bash -c <span class=\"hljs-string\">&quot;<span class=\"hljs-subst\">$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)</span>&quot;</span><br></code></pre></td></tr></table></figure>\n<p>安装插件，执行：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">git <span class=\"hljs-built_in\">clone</span> https://github.com/zsh-users/zsh-syntax-highlighting.git <span class=\"hljs-variable\">$ZSH_CUSTOM</span>/plugins/zsh-syntax-highlightinggit <span class=\"hljs-built_in\">clone</span> https://github.com/zsh-users/zsh-autosuggestions <span class=\"hljs-variable\">$ZSH_CUSTOM</span>/plugins/zsh-autosuggestions<br></code></pre></td></tr></table></figure>\n<p>编辑设置文件：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">vim ~/.zshrc<br></code></pre></td></tr></table></figure>\n<p>选择 Oh-My-Zsh 主题：</p>\n<figure class=\"highlight ini\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs ini\"><span class=\"hljs-attr\">ZSH_THEME</span>=<span class=\"hljs-string\">&quot;geoffgarside&quot;</span><br></code></pre></td></tr></table></figure>\n<p>选择 Oh-My-Zsh 插件：</p>\n<figure class=\"highlight ini\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs ini\"><span class=\"hljs-attr\">plugins</span>=(git zsh-autosuggestions zsh-syntax-highlighting)<br></code></pre></td></tr></table></figure>\n<p>更新 Oh-My-Zsh，执行：</p>\n<figure class=\"highlight ebnf\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs ebnf\"><span class=\"hljs-attribute\">omz update</span><br></code></pre></td></tr></table></figure>\n<p>卸载 Oh-My-Zsh，执行:</p>\n<figure class=\"highlight ebnf\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs ebnf\"><span class=\"hljs-attribute\">uninstall_oh_my_zsh</span><br></code></pre></td></tr></table></figure>\n<p><strong>如果遇到开关机的时候报错：<code>\\[FAILED] failed to start pkgfile database update</code>，卸载 <code>manjaro-zsh-config</code>，这会卸载 <code>zsh</code> 及其所有依赖，然后重新安装 <code>zsh</code></strong></p>\n<h3 id=\"GRUB-美化\"><a href=\"#GRUB-美化\" class=\"headerlink\" title=\"GRUB 美化\"></a><strong>GRUB 美化</strong></h3><p>选择主题 grub2-themes ，下载地址如下：</p>\n<p><a href=\"https://github.com/vinceliuice/grub2-themes\">https://github.com/vinceliuice/grub2-themes</a></p>\n<p>以 Vimix grub theme （2K，黑白图标） 为例，解压后在文件夹内执行：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">sudo ./install.sh -b -t vimix -i white -s 2k<br></code></pre></td></tr></table></figure>\n<p>删除多余启动条目，需要修改<code>/boot/grub/grub.cfg</code></p>\n<p>删除整一段 <code>submenu &#39;Manjaro Linux 的高级选项&#39;</code>，删除整一段 <code>UEFI Firmware Settings</code>，并将 <code>Windows Boot Manager (on /dev/nvme0n1p1)</code> 改为 <code>Windows</code></p>\n<p>恢复默认的<code>/boot/grub/grub.cfg</code>需要输入：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-built_in\">echo</span> GRUB_DISABLE_OS_PROBER=<span class=\"hljs-literal\">false</span> | sudo tee -a /etc/default/grub &amp;&amp; sudo update-grub<br></code></pre></td></tr></table></figure>\n<h3 id=\"pacman-添加吃豆人彩蛋\"><a href=\"#pacman-添加吃豆人彩蛋\" class=\"headerlink\" title=\"pacman 添加吃豆人彩蛋\"></a><strong>pacman 添加吃豆人彩蛋</strong></h3><p>编辑 <code>/etc/pacman.conf</code></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">sudo vim /etc/pacman.conf<br></code></pre></td></tr></table></figure>\n<p>去掉 <code>Color</code> 前面的注释，并在下一行加入：</p>\n<figure class=\"highlight ebnf\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs ebnf\"><span class=\"hljs-attribute\">ILoveCandy</span><br></code></pre></td></tr></table></figure>\n<p>即可添加吃豆人彩蛋</p>\n<h3 id=\"安装-KDE-的-Wayland-支持（不推荐）\"><a href=\"#安装-KDE-的-Wayland-支持（不推荐）\" class=\"headerlink\" title=\"安装 KDE 的 Wayland 支持（不推荐）\"></a><strong>安装 KDE 的 Wayland 支持（不推荐）</strong></h3><p>与 Xorg 相比，Wayland 对触屏的支持更佳，但某些应用在 Wayland 上会有兼容性问题，目前 KDE 对 Wayland 的支持处于能用但还不太完善的状态</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">sudo pacman -S plasma-wayland-session<br></code></pre></td></tr></table></figure>\n<p>安装后即可在登录界面选择 Wayland 会话</p>\n<h2 id=\"下载软件\"><a href=\"#下载软件\" class=\"headerlink\" title=\"下载软件\"></a><strong>下载软件</strong></h2><p><strong>能用包管理器的尽量用包管理器安装！</strong></p>\n<h3 id=\"PGP-密钥无法导入\"><a href=\"#PGP-密钥无法导入\" class=\"headerlink\" title=\"PGP 密钥无法导入\"></a><strong>PGP 密钥无法导入</strong></h3><p>如果安装软件时需要导入 PGP 密钥而发生 <code>gpg: 从公钥服务器接收失败：一般错误</code> 的问题，将 PGP 密钥复制下来并运行：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">gpg --keyserver p80.pool.sks-keyservers.net --recv-keys (pgp_key)<br></code></pre></td></tr></table></figure>\n<p>再重新安装软件即可</p>\n<h3 id=\"安装软件后在开始菜单中找不到图标\"><a href=\"#安装软件后在开始菜单中找不到图标\" class=\"headerlink\" title=\"安装软件后在开始菜单中找不到图标\"></a><strong>安装软件后在开始菜单中找不到图标</strong></h3><p>执行命令：</p>\n<figure class=\"highlight n1ql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs n1ql\">sudo <span class=\"hljs-keyword\">update</span>-desktop-<span class=\"hljs-keyword\">database</span><br></code></pre></td></tr></table></figure>\n<h3 id=\"语言包\"><a href=\"#语言包\" class=\"headerlink\" title=\"语言包\"></a><strong>语言包</strong></h3><p>系统设置 &gt;&gt; 语言包 &gt;&gt; 右上角点击“已安装的软件包”安装语言包</p>\n<h3 id=\"Kate-插件下载\"><a href=\"#Kate-插件下载\" class=\"headerlink\" title=\"Kate 插件下载\"></a><strong>Kate 插件下载</strong></h3><p>下载 Kate 插件：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">sudo pacman -S aspell hspell libvoikko<br></code></pre></td></tr></table></figure>\n<h3 id=\"字体安装\"><a href=\"#字体安装\" class=\"headerlink\" title=\"字体安装\"></a><strong>字体安装</strong></h3><p>Manjaro KDE 支持直接在 Dolphin 的右键菜单中安装 TTF 和 OTF 字体，但不支持 TTC 字体集，TTC 字体集可以在系统字体安装的默认文件夹 <code>/usr/share/fonts</code> 中用命令 <code>fc-cache -fv</code> 安装</p>\n<p><strong>注意不管是 Windows 还是 Manjaro Linux 都要将字体“为所有用户安装”，尤其是 Windows 11 右键直接安装是安装到个人用户目录 <code>C:\\Users\\user_name\\AppData\\Local\\Microsoft\\Windows\\Fonts</code> 而非系统目录 <code>C:\\Windows\\Fonts</code></strong></p>\n<h3 id=\"安装微软字体\"><a href=\"#安装微软字体\" class=\"headerlink\" title=\"安装微软字体\"></a><strong>安装微软字体</strong></h3><p>安装方法如下：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">sudo mkdir /usr/share/fonts/winfonts<br>sudo cp (win-font-path)/* /usr/share/fonts/winfonts/<br><span class=\"hljs-built_in\">cd</span> /usr/share/fonts/winfonts/<br>fc-cache -fv<br></code></pre></td></tr></table></figure>\n<p>这样就可以安装微软雅黑、宋体、黑体等字体了</p>\n<p><strong>注意需要排除掉 MS Gothic、Yu Gothic 和 Malgun Gothic 字体，因它们只有部分日/韩文汉字字形（与中文汉字字形一样的会被排除，最后导致部分中文汉字显示为日/韩文字形）</strong></p>\n<h3 id=\"安装-Google-Noto-字体\"><a href=\"#安装-Google-Noto-字体\" class=\"headerlink\" title=\"安装 Google Noto 字体\"></a><strong>安装 Google Noto 字体</strong></h3><p>命令行安装：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">sudo pacman -S noto-fonts noto-fonts-cjk<br></code></pre></td></tr></table></figure>\n<p>所有语言字体的下载地址如下：</p>\n<p>Google Noto Fonts</p>\n<p><a href=\"https://www.google.com/get/noto/\">https://www.google.com/get/noto/</a></p>\n<p>中文（CJK）字体的下载地址如下：</p>\n<p><a href=\"https://www.google.com/get/noto/help/cjk/\">https://www.google.com/get/noto/help/cjk/</a></p>\n<h3 id=\"更改程序和终端默认中文字体\"><a href=\"#更改程序和终端默认中文字体\" class=\"headerlink\" title=\"更改程序和终端默认中文字体\"></a><strong>更改程序和终端默认中文字体</strong></h3><p>安装的 Noto Sans CJK 字体可能在某些情况下（框架未定义地区）汉字字形与标准形态不符，例如门、关、复等字字形与规范中文不符</p>\n<p>这是因为每个程序中可以设置不同的默认字体，而这些字体的属性由 fontconfig 控制，其使用顺序是据地区代码以 A-Z 字母表顺序成默认排序，由于 <code>ja</code> 在 <code>zh</code> 之前，故优先显示日文字形</p>\n<p>解决方法是手动修改字体设置文件：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">sudo vim /etc/fonts/conf.d/64-language-selector-prefer.conf<br></code></pre></td></tr></table></figure>\n<p>并加入以下内容：</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs xml\"><span class=\"hljs-meta\">&lt;?xml version=&quot;1.0&quot;?&gt;</span><br><span class=\"hljs-meta\">&lt;!DOCTYPE <span class=\"hljs-meta-keyword\">fontconfig</span> <span class=\"hljs-meta-keyword\">SYSTEM</span> <span class=\"hljs-meta-string\">&quot;fonts.dtd&quot;</span>&gt;</span><br><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">fontconfig</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">alias</span>&gt;</span><br>        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">family</span>&gt;</span>sans-serif<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">family</span>&gt;</span><br>        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">prefer</span>&gt;</span><br>            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">family</span>&gt;</span>Noto Sans CJK SC<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">family</span>&gt;</span><br>            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">family</span>&gt;</span>Noto Sans CJK TC<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">family</span>&gt;</span><br>            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">family</span>&gt;</span>Noto Sans CJK HK<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">family</span>&gt;</span><br>            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">family</span>&gt;</span>Noto Sans CJK JP<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">family</span>&gt;</span><br>            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">family</span>&gt;</span>Noto Sans CJK KR<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">family</span>&gt;</span><br>        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">prefer</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">alias</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">alias</span>&gt;</span><br>        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">family</span>&gt;</span>serif<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">family</span>&gt;</span><br>        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">prefer</span>&gt;</span><br>            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">family</span>&gt;</span>Noto Serif CJK SC<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">family</span>&gt;</span><br>            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">family</span>&gt;</span>Noto Serif CJK TC<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">family</span>&gt;</span><br>            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">family</span>&gt;</span>Noto Serif CJK HK<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">family</span>&gt;</span><br>            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">family</span>&gt;</span>Noto Serif CJK JP<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">family</span>&gt;</span><br>            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">family</span>&gt;</span>Noto Serif CJK KR<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">family</span>&gt;</span><br>        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">prefer</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">alias</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">alias</span>&gt;</span><br>        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">family</span>&gt;</span>monospace<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">family</span>&gt;</span><br>        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">prefer</span>&gt;</span><br>            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">family</span>&gt;</span>Noto Sans Mono CJK SC<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">family</span>&gt;</span><br>            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">family</span>&gt;</span>Noto Sans Mono CJK TC<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">family</span>&gt;</span><br>            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">family</span>&gt;</span>Noto Sans Mono CJK HK<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">family</span>&gt;</span><br>            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">family</span>&gt;</span>Noto Sans Mono CJK JP<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">family</span>&gt;</span><br>            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">family</span>&gt;</span>Noto Sans Mono CJK KR<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">family</span>&gt;</span><br>        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">prefer</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">alias</span>&gt;</span><br><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">fontconfig</span>&gt;</span><br></code></pre></td></tr></table></figure>\n<p>保存退出即可</p>\n<p><strong>另一种处理方法是只安装简体中文字体，比如 Noto Sans SC（注意没有 CJK）</strong></p>\n<h3 id=\"安装中文输入法\"><a href=\"#安装中文输入法\" class=\"headerlink\" title=\"安装中文输入法\"></a><strong>安装中文输入法</strong></h3><p>推荐使用 Fcitx5:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">sudo pacman -S fcitx5 fcitx5-chinese-addons manjaro-asian-input-support-fcitx5 fcitx5-gtk fcitx5-qt fcitx5-configtool<br></code></pre></td></tr></table></figure>\n<p>如果无法启动输入法，在系统设置 &gt;&gt; 区域设置 &gt;&gt; 输入法 &gt;&gt; 添加输入法中手动添加“拼音”</p>\n<p>对应的 git 版本为：（需要使用 Arch Linux CN 源）</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">sudo pacman -S fcitx5-git fcitx5-chinese-addons-git manjaro-asian-input-support-fcitx5 fcitx5-gtk-git fcitx5-qt5-git fcitx5-configtool-git<br></code></pre></td></tr></table></figure>\n<p>可以添加词库：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">sudo pacman -S fcitx5-pinyin-moegirl fcitx5-pinyin-zhwiki<br></code></pre></td></tr></table></figure>\n<p>一个稳定的替代版本是 Fcitx 4.2.9.8-1：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">sudo pacman -S fcitx-im fcitx-configtool fcitx-cloudpinyin manjaro-asian-input-support-fcitx<br></code></pre></td></tr></table></figure>\n<p>可以配合 googlepinyin 或 sunpinyin 使用，即执行：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">sudo pacman -S fcitx-googlepinyin<br></code></pre></td></tr></table></figure>\n<p>或者：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">sudo pacman -S fcitx-sunpinyin<br></code></pre></td></tr></table></figure>\n<p>也可以用 <code>sudo pacman -S sunpinyin</code> 安装 Sunpinyin</p>\n<p><strong>安装输入法之后需要重启电脑才能生效</strong></p>\n<h3 id=\"安装其它软件\"><a href=\"#安装其它软件\" class=\"headerlink\" title=\"安装其它软件\"></a><strong>安装其它软件</strong></h3><p>以下命令中的 <code>pamac install</code> 也可以在“添加/删除软件”（即 pamac）中搜索安装，如果不是 AUR 仓库中的软件，也可以用 <code>sudo pacman -S</code> 安装</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">pamac install geogebra stellarium typora v2ray qv2ray-dev-git vlc thunderbird qbittorrent baidunetdisk-bin<br></code></pre></td></tr></table></figure>\n<p><strong>这里的 qv2ray-dev-git 一定要选择 Archlinux CN 软件源的版本</strong></p>\n<h4 id=\"用-debtap-安装-deb-包（不推荐）\"><a href=\"#用-debtap-安装-deb-包（不推荐）\" class=\"headerlink\" title=\"用 debtap 安装 .deb 包（不推荐）\"></a><strong>用 debtap 安装 <code>.deb</code> 包（不推荐）</strong></h4><p>首先要下载并更新 debtap 包：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">pamac install debtap<br>sudo debtap -u<br></code></pre></td></tr></table></figure>\n<p><strong>运行 <code>sudo debtap -u</code> 时建议连接北京大学校园网</strong></p>\n<p>进入含有 <code>.deb</code> 安装包的文件夹，输入：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">sudo debtap (package_name).deb<br></code></pre></td></tr></table></figure>\n<p>系统会询问三个问题：文件名随便写，协议写 <code>GPL</code> 即可，编辑文件直接按 <code>Enter</code> 跳过</p>\n<p>此处会生成一个 <code>tar.zst</code> 包，双击打开（右键用“软件安装程序”打开）即可安装</p>\n<h3 id=\"安装-TeX-Live\"><a href=\"#安装-TeX-Live\" class=\"headerlink\" title=\"安装 TeX Live\"></a><strong>安装 TeX Live</strong></h3><p>推荐从 ISO 安装 TeX Live</p>\n<p>首先在<a href=\"https://mirrors.tuna.tsinghua.edu.cn/CTAN/systems/texlive/Images/\">清华大学镜像站</a>或者<a href=\"https://mirrors.sjtug.sjtu.edu.cn/ctan/systems/texlive/Images/\">上海交大镜像站</a>下载 TeX Live ISO，文件名为 <code>texlive.iso</code>（和 <code>texlive(year).iso</code>、<code>texlive(year)-(date).iso</code> 是一致的）</p>\n<p>打开终端，运行：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">sudo mount -t iso9660 -o ro,loop,noauto (texlive_path)/texlive.iso /mnt<br></code></pre></td></tr></table></figure>\n<h4 id=\"使用图形界面安装\"><a href=\"#使用图形界面安装\" class=\"headerlink\" title=\"使用图形界面安装\"></a><strong>使用图形界面安装</strong></h4><p>首先要检查是否安装 tcl 和 tk：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">pamac install tcl tk<br></code></pre></td></tr></table></figure>\n<p>进入镜像文件夹，运行：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">sudo perl install-tl -gui<br></code></pre></td></tr></table></figure>\n<p>即可在图形界面下载 TeX Live（如果不加 <code>sudo</code> 则只能将其安装到 <code>/home/(user_name)/</code> 下的文件夹且无法勾选 Create symlinks in standard directories: 一项），高级设置需要点击左下角的 Advanced 按钮</p>\n<p><strong>记住勾选 Create symlinks in standard directories 一项（自动添加到 PATH），Specify directories 选择默认文件夹即可，之后不需要自己添加 PATH</strong></p>\n<h4 id=\"使用命令行界面安装\"><a href=\"#使用命令行界面安装\" class=\"headerlink\" title=\"使用命令行界面安装\"></a><strong>使用命令行界面安装</strong></h4><p>进入镜像文件夹，运行：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">sudo perl install-tl -gui text<br></code></pre></td></tr></table></figure>\n<p>用大写字母命令控制安装：</p>\n<figure class=\"highlight mathematica\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs mathematica\"><span class=\"hljs-built_in\">D</span> <span class=\"hljs-operator\">&gt;&gt;</span> <span class=\"hljs-number\">1</span> <span class=\"hljs-operator\">&gt;&gt;</span> 输入要安装 <span class=\"hljs-variable\">TeX</span> <span class=\"hljs-variable\">Live</span> 的位置（<span class=\"hljs-variable\">TEXDIR</span>） <span class=\"hljs-operator\">&gt;&gt;</span> <span class=\"hljs-variable\">R</span><br><span class=\"hljs-built_in\">O</span> <span class=\"hljs-operator\">&gt;&gt;</span> <span class=\"hljs-variable\">L</span> <span class=\"hljs-operator\">&gt;&gt;</span> 都选择默认位置（按 <span class=\"hljs-built_in\">Enter</span>） <span class=\"hljs-operator\">&gt;&gt;</span> <span class=\"hljs-variable\">R</span><br><span class=\"hljs-built_in\">I</span><br></code></pre></td></tr></table></figure>\n<p>TEXDIR 建议选择 <code>/home/(user_name)/</code> 下的文件夹以方便查看和修改，TEXMFLOCAL 会随 TEXDIR 自动更改</p>\n<p>CTAN 镜像源可以使用 TeX Live 管理器 tlmgr 更改，更改到清华大学镜像需要在命令行中执行：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">sudo tlmgr option repository https://mirrors.tuna.tsinghua.edu.cn/CTAN/systems/texlive/tlnet<br>sudo tlmgr --repository http://www.texlive.info/tlgpg/ install tlgpg<br></code></pre></td></tr></table></figure>\n<p>可以运行 <code>tex --version</code> 检查是否安装成功，若成功应显示 TeX 的版本号、TeX Live 的版本号和版权信息</p>\n<p>还可以运行 <code>tlmgr --version</code> 和 <code>texdoc (package_name)</code> （选择常见的宏包名称如 <code>texdoc ctex</code>）检查是否安装成功</p>\n<h3 id=\"TeXstudio-安装与配置（可选）\"><a href=\"#TeXstudio-安装与配置（可选）\" class=\"headerlink\" title=\"TeXstudio 安装与配置（可选）\"></a><strong>TeXstudio 安装与配置（可选）</strong></h3><p>安装 TeXstudio：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">pamac install texstudio<br></code></pre></td></tr></table></figure>\n<p>帮助 &gt;&gt; 检查 LaTeX 安装信息</p>\n<p>如果能检测到 LaTeX，说明 TeX Live 安装成功，开始设置</p>\n<p>选项 &gt;&gt; 设置 TeXstudio</p>\n<p>首先在左下角勾选“显示高级选项”</p>\n<p>常规 &gt;&gt; 会话 &gt;&gt; 取消勾选“启动时恢复上一次会话”（可选）</p>\n<p>菜单 &gt;&gt; 数学 &gt;&gt; <code>\\frac&#123;&#125;&#123;&#125;</code> &gt;&gt; <code>\\frac&#123;%|&#125;&#123;&#125;</code></p>\n<p>菜单 &gt;&gt; 数学 &gt;&gt; <code>\\frac&#123;&#125;&#123;&#125;</code> &gt;&gt; <code>\\frac&#123;%|&#125;&#123;&#125;</code></p>\n<p>快捷键 &gt;&gt; 数学 &gt;&gt; 数学字体格式 &gt;&gt; 罗马字体 &gt;&gt; 当前快捷键 &gt;&gt; <code>Alt+Shift+R</code></p>\n<p>编辑器 &gt;&gt; 缩进模式 &gt;&gt; 自动增加或减少缩进</p>\n<p>编辑器 &gt;&gt; 缩进模式 &gt;&gt; 勾选“将缩进替换为空格”和“将文本中的制表符（Tab）替换为空格”</p>\n<p>编辑器 &gt;&gt; 显示行号 &gt;&gt; 所有行号</p>\n<p>编辑器 &gt;&gt; 取消勾选“行内检查”</p>\n<p>高级编辑器 &gt;&gt; 自动保存所有文件 &gt;&gt; 1 分钟</p>\n<p>高级编辑器 &gt;&gt; 破解/变通 &gt;&gt; 取消勾选“自动选择最佳显示选项”，并勾选“禁用字符宽度缓存”和“关闭固定位置模式”</p>\n<p>补全 &gt;&gt; 取消勾选“输入参数”</p>\n<h3 id=\"Thunderbird-配置\"><a href=\"#Thunderbird-配置\" class=\"headerlink\" title=\"Thunderbird 配置\"></a><strong>Thunderbird 配置</strong></h3><h4 id=\"Thunderbird-首选项配置\"><a href=\"#Thunderbird-首选项配置\" class=\"headerlink\" title=\"Thunderbird 首选项配置\"></a><strong>Thunderbird 首选项配置</strong></h4><p>进入首选项界面调整显示：</p>\n<p>首选项 &gt;&gt; 常规 &gt;&gt; Thunderbird 起始页 &gt;&gt; 清空并取消勾选</p>\n<p>首选项 &gt;&gt; 常规 &gt;&gt; 默认搜索引擎 &gt;&gt; 改为 Bing</p>\n<p>首选项 &gt;&gt; 隐私与安全 &gt;&gt; 邮件内容 &gt;&gt; 勾选“允许消息中的远程内容”</p>\n<p>右键点击上方邮件工具栏，选择“自定义”，自行配置即可</p>\n<h4 id=\"Thunderbird-帐号配置\"><a href=\"#Thunderbird-帐号配置\" class=\"headerlink\" title=\"Thunderbird 帐号配置\"></a><strong>Thunderbird 帐号配置</strong></h4><p>点击邮箱帐号，配置“账户设置”如下：</p>\n<p>服务器 &gt;&gt; 服务器设置 &gt;&gt; 每隔 1 分钟检查一次新消息</p>\n<p>服务器 &gt;&gt; 服务器设置 &gt;&gt; 在删除消息时 &gt;&gt; 立即删除</p>\n<h3 id=\"Python-安装与配置\"><a href=\"#Python-安装与配置\" class=\"headerlink\" title=\"Python 安装与配置\"></a><strong>Python 安装与配置</strong></h3><p>Manjaro 预装了 Python，但没有安装包管理器，可以使用 <code>pip</code> 或 <code>conda</code>（即安装 Miniconda）</p>\n<h4 id=\"pip-安装\"><a href=\"#pip-安装\" class=\"headerlink\" title=\"pip 安装\"></a><strong>pip 安装</strong></h4><p>在终端中输入：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">curl https://bootstrap.pypa.io/get-pip.py -o get-pip.py &amp;&amp; python get-pip.py<br></code></pre></td></tr></table></figure>\n<p>即可安装 pip，此时不建议安装 conda，pip 下载包的命令是：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">pip install (package_name)<br></code></pre></td></tr></table></figure>\n<p>这里不建议安装 spyder 和 jupyter notebook，安装最基本的包即可：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">pip install numpy scipy matplotlib astropy autopep8<br></code></pre></td></tr></table></figure>\n<h4 id=\"Miniconda-安装与配置\"><a href=\"#Miniconda-安装与配置\" class=\"headerlink\" title=\"Miniconda 安装与配置\"></a><strong>Miniconda 安装与配置</strong></h4><p>Miniconda 是 Anaconda 的精简版，推荐使用 Miniconda</p>\n<p>下载地址如下：</p>\n<p>Miniconda — Conda documentation</p>\n<p><a href=\"https://docs.conda.io/en/latest/miniconda.html\">https://docs.conda.io/en/latest/miniconda.html</a></p>\n<p>或者在<a href=\"https://mirrors.tuna.tsinghua.edu.cn/#\">清华大学镜像站</a>点击右侧的“获取下载链接”按钮，在“应用软件” &gt;&gt; Conda 里面选择</p>\n<p>安装过程参考以下网址：（Miniconda 和 Anaconda 的安装步骤相同）</p>\n<p>Anaconda Documentation — Installing on Linux</p>\n<p><a href=\"https://docs.anaconda.com/anaconda/install/linux/\">https://docs.anaconda.com/anaconda/install/linux/</a></p>\n<p>输入以下命令：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">vim ~/.condarc<br></code></pre></td></tr></table></figure>\n<p>修改 <code>.condarc</code> 以使用清华大学镜像源：</p>\n<figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs awk\">channels:<br>  - defaults<br>show_channel_urls: true<br>default_channels:<br>  - https:<span class=\"hljs-regexp\">//mi</span>rrors.tuna.tsinghua.edu.cn<span class=\"hljs-regexp\">/anaconda/</span>pkgs/main<br>  - https:<span class=\"hljs-regexp\">//mi</span>rrors.tuna.tsinghua.edu.cn<span class=\"hljs-regexp\">/anaconda/</span>pkgs/r<br>  - https:<span class=\"hljs-regexp\">//mi</span>rrors.tuna.tsinghua.edu.cn<span class=\"hljs-regexp\">/anaconda/</span>pkgs/msys2<br>custom_channels:<br>  conda-forge: https:<span class=\"hljs-regexp\">//mi</span>rrors.tuna.tsinghua.edu.cn<span class=\"hljs-regexp\">/anaconda/</span>cloud<br>  msys2: https:<span class=\"hljs-regexp\">//mi</span>rrors.tuna.tsinghua.edu.cn<span class=\"hljs-regexp\">/anaconda/</span>cloud<br>  bioconda: https:<span class=\"hljs-regexp\">//mi</span>rrors.tuna.tsinghua.edu.cn<span class=\"hljs-regexp\">/anaconda/</span>cloud<br>  menpo: https:<span class=\"hljs-regexp\">//mi</span>rrors.tuna.tsinghua.edu.cn<span class=\"hljs-regexp\">/anaconda/</span>cloud<br>  pytorch: https:<span class=\"hljs-regexp\">//mi</span>rrors.tuna.tsinghua.edu.cn<span class=\"hljs-regexp\">/anaconda/</span>cloud<br>  simpleitk: https:<span class=\"hljs-regexp\">//mi</span>rrors.tuna.tsinghua.edu.cn<span class=\"hljs-regexp\">/anaconda/</span>cloud<br></code></pre></td></tr></table></figure>\n<p>若不用特定的镜像源，改为：</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs yaml\"><span class=\"hljs-attr\">channels:</span><br>  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">defaults</span><br><span class=\"hljs-attr\">ssl_verify:</span> <span class=\"hljs-literal\">true</span><br></code></pre></td></tr></table></figure>\n<p>下载所需要的包：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">conda install numpy scipy matplotlib astropy spyder jupyter<br></code></pre></td></tr></table></figure>\n<p>各个操作系统平台上可下载的包可以在以下网站查询：</p>\n<p>Anaconda Documentation — Anaconda Package Lists</p>\n<p><a href=\"https://docs.anaconda.com/anaconda/packages/pkg-docs/\">https://docs.anaconda.com/anaconda/packages/pkg-docs/</a></p>\n<h4 id=\"Conda-常用命令\"><a href=\"#Conda-常用命令\" class=\"headerlink\" title=\"Conda 常用命令\"></a><strong>Conda 常用命令</strong></h4><p>下载包：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">conda install (package_name)<br></code></pre></td></tr></table></figure>\n<p>下载特定版本的包：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">conda install (package_name)=(version_number)<br></code></pre></td></tr></table></figure>\n<p>更新包：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">conda update (package_name)<br></code></pre></td></tr></table></figure>\n<p>更新所有包：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">conda update --all<br></code></pre></td></tr></table></figure>\n<p>恢复之前的版本：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">conda list --revisions<br>conda install --revision (revision_number)<br></code></pre></td></tr></table></figure>\n<p><strong>如果回滚到早期版本（<code>revision_number</code> 较小）之后又想回到某个高版本（<code>revision_number</code> 较大），必须要把两个版本中的版本都装一遍</strong></p>\n<p>删除所有旧版本的包：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">conda clean -p<br></code></pre></td></tr></table></figure>\n<p>列出所有下载的包：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">conda list<br></code></pre></td></tr></table></figure>\n<h4 id=\"Spyder-配置\"><a href=\"#Spyder-配置\" class=\"headerlink\" title=\"Spyder 配置\"></a><strong>Spyder 配置</strong></h4><p>通用 &gt;&gt; 显示器分辨率 &gt;&gt; 自定义高分辨率缩放 &gt;&gt; 1.0</p>\n<p>外观 &gt;&gt; 语法高亮主题 &gt;&gt; IDLE</p>\n<p>编辑选定的方案：</p>\n<p>文本：</p>\n<figure class=\"highlight less\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs less\">普通文本 <span class=\"hljs-selector-id\">#000000</span><br>注释：<span class=\"hljs-selector-id\">#999999</span>, <span class=\"hljs-selector-tag\">B</span><br>字符串：<span class=\"hljs-selector-id\">#00aa00</span><br>数值：<span class=\"hljs-selector-id\">#aa0000</span><br>关键字：<span class=\"hljs-selector-id\">#ff5500</span>, <span class=\"hljs-selector-tag\">B</span><br>内置：<span class=\"hljs-selector-id\">#990099</span><br>定义：<span class=\"hljs-selector-id\">#0000ff</span><br>实例：<span class=\"hljs-selector-id\">#ff55ff</span>, <span class=\"hljs-selector-tag\">B</span><br></code></pre></td></tr></table></figure>\n<p>高亮：</p>\n<figure class=\"highlight 1c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs 1c\">当前 Cell：<span class=\"hljs-meta\">#ffaaff</span><br>当前行：<span class=\"hljs-meta\">#aaffff</span><br>事件：<span class=\"hljs-meta\">#ffff00</span><br>匹配圆括号：<span class=\"hljs-meta\">#99ff99</span><br>不匹配圆括号：<span class=\"hljs-meta\">#ff9999</span><br>链接：<span class=\"hljs-meta\">#55ff00</span><br></code></pre></td></tr></table></figure>\n<p>编辑器 &gt;&gt; 勾选“显示标签栏”、“显示缩进指导”、“显示行号”、“高亮显示当前行”、“高亮显示当前 Cell”，并把“高亮延迟时间”设定为 100 毫秒</p>\n<p>用 Spyder 打开某个文件需要在终端中输入：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">spyder (file_path)/(file_name)<br></code></pre></td></tr></table></figure>\n<p><strong>目前 Spyder 还不支持 Fcitx/Fcitx5 输入中文字符</strong></p>\n<h3 id=\"Vim-安装插件\"><a href=\"#Vim-安装插件\" class=\"headerlink\" title=\"Vim 安装插件\"></a><strong>Vim 安装插件</strong></h3><p>执行：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">git <span class=\"hljs-built_in\">clone</span> (github_repository_URL) ~/.vim/pack/(plugin_name)/start/(plugin_name)<br>vim -u NONE -c <span class=\"hljs-string\">&quot;helptags ~/.vim/pack/(plugin_name)/start/(plugin_name)/doc&quot;</span> -c q<br></code></pre></td></tr></table></figure>\n<h3 id=\"Visual-Studio-Code-安装与配置\"><a href=\"#Visual-Studio-Code-安装与配置\" class=\"headerlink\" title=\"Visual Studio Code 安装与配置\"></a><strong>Visual Studio Code 安装与配置</strong></h3><h4 id=\"Visual-Studio-Code-安装\"><a href=\"#Visual-Studio-Code-安装\" class=\"headerlink\" title=\"Visual Studio Code 安装\"></a><strong>Visual Studio Code 安装</strong></h4><p>发行版维护者从开源代码构建的版本，可以用 <code>code</code> 命令打开（缺点是图标被重新设计过，且更新落后于微软官方版）：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">pamac install code<br></code></pre></td></tr></table></figure>\n<p>微软官方的二进制包（包含部分私有的组件），同样可以用 <code>code</code> 命令打开（如果不介意私有组件而且不习惯 Code - OSS 的图标，个人推荐首选此项）：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">pamac install visual-studio-code-bin<br></code></pre></td></tr></table></figure>\n<p>内测版本：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">pamac install visual-studio-code-insiders<br></code></pre></td></tr></table></figure>\n<p>第三方发布的从开源代码构建的二进制包：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">pamac install vscodium-bin<br></code></pre></td></tr></table></figure>\n<p>从最新的开源代码构建：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">pamac install code-git<br></code></pre></td></tr></table></figure>\n<p>下载扩展：Python（会自动下载 Pylance、Jupyter 等扩展），Markdown All in One，LaTeX Workshop，C/C++，Rainbow Brackets，Prettier - Code formatter</p>\n<p>扩展保存在 <code>~/.vscode/extensions/</code> 文件夹内</p>\n<h4 id=\"Visual-Studio-Code-图标更改（可选）\"><a href=\"#Visual-Studio-Code-图标更改（可选）\" class=\"headerlink\" title=\"Visual Studio Code 图标更改（可选）\"></a><strong>Visual Studio Code 图标更改（可选）</strong></h4><p>如果图标美化后 Visual Studio Code 图标变成圆形，想恢复原图标，更改路径如下：</p>\n<p>程序启动器 &gt;&gt; 编辑应用程序 &gt;&gt; Visual Studio Code &gt;&gt; 点击图标更改 &gt;&gt; 其他图标</p>\n<p>其图标位置在 <code>/usr/share/icons/visual-studio-code.png</code></p>\n<h4 id=\"Visual-Studio-Code-缩放比例\"><a href=\"#Visual-Studio-Code-缩放比例\" class=\"headerlink\" title=\"Visual Studio Code 缩放比例\"></a><strong>Visual Studio Code 缩放比例</strong></h4><p>放大比例：<code>Ctrl+=</code></p>\n<p>缩小比例：<code>Ctrl+-</code></p>\n<h4 id=\"Visual-Studio-Code-设置快捷键\"><a href=\"#Visual-Studio-Code-设置快捷键\" class=\"headerlink\" title=\"Visual Studio Code 设置快捷键\"></a><strong>Visual Studio Code 设置快捷键</strong></h4><p>若要更改全局快捷键，设置文件在 <code>~/.config/Code/User/keybinding.json</code>，可以在 Visual Studio Code 中按 <code>Ctrl+K Ctrl+S</code> 开启设置</p>\n<h4 id=\"Latex-Workshop-插件设置\"><a href=\"#Latex-Workshop-插件设置\" class=\"headerlink\" title=\"Latex Workshop 插件设置\"></a><strong>Latex Workshop 插件设置</strong></h4><p>若想在 LaTeX Workshop 里面添加 <code>\\frac&#123;&#125;&#123;&#125;</code> 命令的快捷键为 <code>Ctrl+M Ctrl+F</code>，则添加一段：</p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs json\">&#123;<br>    <span class=\"hljs-attr\">&quot;key&quot;</span>: <span class=\"hljs-string\">&quot;ctrl+m ctrl+f&quot;</span>,<br>    <span class=\"hljs-attr\">&quot;command&quot;</span>: <span class=\"hljs-string\">&quot;editor.action.insertSnippet&quot;</span>,<br>    <span class=\"hljs-attr\">&quot;args&quot;</span>: &#123; <span class=\"hljs-attr\">&quot;snippet&quot;</span>: <span class=\"hljs-string\">&quot;\\\\frac&#123;$1&#125;&#123;$2&#125;$0&quot;</span> &#125;,<br>    <span class=\"hljs-attr\">&quot;when&quot;</span>: <span class=\"hljs-string\">&quot;editorTextFocus &amp;&amp; !editorReadonly &amp;&amp; editorLangId =~ /latex|rsweave|jlweave/&quot;</span><br>&#125;<br></code></pre></td></tr></table></figure>\n<p>若要更改行间公式 <code>\\[\\]</code> 的自动补全（公式独占一行），在 <code>~/.vscode/extensions/james-yu.latex-workshop-(version_number)/data/commands.json</code> 中找到：</p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs json\"><span class=\"hljs-string\">&quot;[&quot;</span>: &#123;<br>    <span class=\"hljs-attr\">&quot;command&quot;</span>: <span class=\"hljs-string\">&quot;[&quot;</span>,<br>    <span class=\"hljs-attr\">&quot;snippet&quot;</span>: <span class=\"hljs-string\">&quot;[$&#123;1&#125;\\\\]&quot;</span>,<br>    <span class=\"hljs-attr\">&quot;detail&quot;</span>: <span class=\"hljs-string\">&quot;display math \\\\[ ... \\\\]&quot;</span><br>  &#125;,<br></code></pre></td></tr></table></figure>\n<p>改为：</p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs json\"><span class=\"hljs-string\">&quot;[&quot;</span>: &#123;<br>    <span class=\"hljs-attr\">&quot;command&quot;</span>: <span class=\"hljs-string\">&quot;[&quot;</span>,<br>    <span class=\"hljs-attr\">&quot;snippet&quot;</span>: <span class=\"hljs-string\">&quot;[\\n    $&#123;1&#125;\\n\\\\]&quot;</span>,<br>    <span class=\"hljs-attr\">&quot;detail&quot;</span>: <span class=\"hljs-string\">&quot;display math \\\\[ ... \\\\]&quot;</span><br>  &#125;,<br></code></pre></td></tr></table></figure>\n<p>重启 Visual Studio Code 即可生效</p>\n<h4 id=\"Rainbow-Brackets-插件设置\"><a href=\"#Rainbow-Brackets-插件设置\" class=\"headerlink\" title=\"Rainbow Brackets 插件设置\"></a><strong>Rainbow Brackets 插件设置</strong></h4><p>更改 Rainbow Brackets 的括号配色可以修改文件 <code>~/.vscode/extensions/2gua.rainbow-brackets-0.0.6/out/src/extension.js</code>：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs js\"><span class=\"hljs-keyword\">var</span> roundBracketsColor = [<span class=\"hljs-string\">&quot;#ff5500&quot;</span>, <span class=\"hljs-string\">&quot;#cc0066&quot;</span>, <span class=\"hljs-string\">&quot;#00aa66&quot;</span>, <span class=\"hljs-string\">&quot;#ff9999&quot;</span>];<br><span class=\"hljs-keyword\">var</span> squareBracketsColor = [<span class=\"hljs-string\">&quot;#33ccff&quot;</span>, <span class=\"hljs-string\">&quot;#8080ff&quot;</span>, <span class=\"hljs-string\">&quot;#0077aa&quot;</span>];<br><span class=\"hljs-keyword\">var</span> squigglyBracketsColor = [<span class=\"hljs-string\">&quot;#aa00aa&quot;</span>, <span class=\"hljs-string\">&quot;#009900&quot;</span>, <span class=\"hljs-string\">&quot;#996600&quot;</span>];<br></code></pre></td></tr></table></figure>\n<p>重启 Visual Studio Code 即可生效</p>\n<h3 id=\"Typora-美化\"><a href=\"#Typora-美化\" class=\"headerlink\" title=\"Typora 美化\"></a><strong>Typora 美化</strong></h3><h4 id=\"源代码模式\"><a href=\"#源代码模式\" class=\"headerlink\" title=\"源代码模式\"></a><strong>源代码模式</strong></h4><p>更改 <code>/usr/share/typora/resources/style/base-control.css</code>：（在 Windows 中则是 <code>C:\\Program Files\\Typora\\resources\\style\\base-control.css</code>）</p>\n<p>找到 <code>.CodeMirror.cm-s-typora-default div.CodeMirror-cursor</code> 一行，将光标宽度改为 <code>1px</code>，颜色改为 <code>#000000</code></p>\n<p>找到 <code>#typora-source .CodeMirror-lines</code> 一行，将 <code>max-width</code> 改为 <code>1200px</code></p>\n<p>更改 <code>/usr/share/typora/resources/style/base.css</code>：（在 Windows 中则是 <code>C:\\Program Files\\Typora\\resources\\style\\base.css</code>）</p>\n<p>找到 <code>:root</code> 一行，将 <code>font-family</code> 改成自己想要的字体</p>\n<h4 id=\"主题渲染模式\"><a href=\"#主题渲染模式\" class=\"headerlink\" title=\"主题渲染模式\"></a><strong>主题渲染模式</strong></h4><p>在 <code>/home/(user_name)/.config/Typora/themes/</code> 中自己写一个 CSS 文件（可以复制其中一个默认主题，重命名后更改）</p>\n<p>找到 <code>body</code> 一行，将 <code>font-family</code> 改成自己想要的字体</p>\n<p>找到 <code>tt</code> 一行，将 <code>font-family</code> 改成自己想要的等宽字体（<code>monospace</code>）</p>\n<h3 id=\"SAOImageDS9-安装\"><a href=\"#SAOImageDS9-安装\" class=\"headerlink\" title=\"SAOImageDS9 安装\"></a><strong>SAOImageDS9 安装</strong></h3><p>推荐选择二进制包 <code>ds9-bin</code>：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">pamac install ds9-bin<br></code></pre></td></tr></table></figure>\n<h3 id=\"Github-Desktop-安装（可选）\"><a href=\"#Github-Desktop-安装（可选）\" class=\"headerlink\" title=\"Github Desktop 安装（可选）\"></a><strong>Github Desktop 安装（可选）</strong></h3><p>推荐选择二进制包 <code>github-desktop-bin</code>：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">pamac install github-desktop-bin<br></code></pre></td></tr></table></figure>\n<p>登录时要创建一个密钥环，密钥设为 Github 密码即可</p>\n<h3 id=\"WPS-安装（可选）\"><a href=\"#WPS-安装（可选）\" class=\"headerlink\" title=\"WPS 安装（可选）\"></a><strong>WPS 安装（可选）</strong></h3><p>运行：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">pamac install wps-office-cn wps-office-mui-zh-cn ttf-wps-fonts<br></code></pre></td></tr></table></figure>\n<h3 id=\"微信安装\"><a href=\"#微信安装\" class=\"headerlink\" title=\"微信安装\"></a><strong>微信安装</strong></h3><p>极简版（原生适配高分辨率屏幕，不需要 wine/deepin-wine 即可运行；但是功能较少，不支持截屏和“订阅号消息”，且对大文件传输的支持不佳）：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">pamac install wechat-uos<br></code></pre></td></tr></table></figure>\n<p>功能较多，和最新的 Windows 电脑版同步更新，但依赖 deepin-wine，且暂不支持“截屏时隐藏当前窗口”的版本：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">pamac install deepin-wine-wechat<br></code></pre></td></tr></table></figure>\n<h4 id=\"deepin-wine-wechat-高分辨率适配调整\"><a href=\"#deepin-wine-wechat-高分辨率适配调整\" class=\"headerlink\" title=\"deepin-wine-wechat 高分辨率适配调整\"></a><strong>deepin-wine-wechat 高分辨率适配调整</strong></h4><p>用命令 <code>/opt/apps/com.qq.weixin.deepin/files/run.sh winecfg</code> 调出 Wine Configuration，对于 200% 的放大率：</p>\n<p>Graphics &gt;&gt; Screen Resolution &gt;&gt; 192 dpi</p>\n<p>其余基于 Deepin Wine 的软件（如腾讯会议）也是类似的处理方法，将 <code>com.qq.weixin.deepin</code> 换成对应的文件夹名称即可（都在 <code>/opt/apps/</code> 目录下）</p>\n<h3 id=\"会议软件安装\"><a href=\"#会议软件安装\" class=\"headerlink\" title=\"会议软件安装\"></a><strong>会议软件安装</strong></h3><p>腾讯会议：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">pamac install com.tencent.deepin.meeting<br></code></pre></td></tr></table></figure>\n<p>高分辨率适配调整：</p>\n<p>用命令 <code>/opt/apps/com.tencent.meeting.deepin/files/run.sh winecfg</code> 调出 Wine Configuration，对于 200% 的放大率：</p>\n<p>Graphics &gt;&gt; Screen Resolution &gt;&gt; 192 dpi</p>\n<h3 id=\"音乐软件安装\"><a href=\"#音乐软件安装\" class=\"headerlink\" title=\"音乐软件安装\"></a><strong>音乐软件安装</strong></h3><h4 id=\"网易云音乐\"><a href=\"#网易云音乐\" class=\"headerlink\" title=\"网易云音乐\"></a><strong>网易云音乐</strong></h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">pamac install netease-cloud-music<br></code></pre></td></tr></table></figure>\n<h4 id=\"QQ-音乐\"><a href=\"#QQ-音乐\" class=\"headerlink\" title=\"QQ 音乐\"></a><strong>QQ 音乐</strong></h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">pamac install qqmusic-bin<br></code></pre></td></tr></table></figure>\n<p>默认是暗色主题，右上角皮肤键（衣服图案）可以更改为亮色主题</p>\n<h3 id=\"Geant4-安装\"><a href=\"#Geant4-安装\" class=\"headerlink\" title=\"Geant4 安装\"></a><strong>Geant4 安装</strong></h3><h4 id=\"从源代码安装-Geant4\"><a href=\"#从源代码安装-Geant4\" class=\"headerlink\" title=\"从源代码安装 Geant4\"></a><strong>从源代码安装 Geant4</strong></h4><p>从官网上下载源代码压缩包：</p>\n<p>Geant4 — Download</p>\n<p><a href=\"https://geant4.web.cern.ch/support/download\">https://geant4.web.cern.ch/support/download</a></p>\n<p>进入解压后的文件夹，若要将 Geant4 安装在 <code>(Geant4_directory)</code>，例如 <code>~/Geant4</code>，执行：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">mkdir build<br><span class=\"hljs-built_in\">cd</span> ./build<br>cmake -DCMAKE_INSTALL_PREFIX=(Geant4_directory) -DGEANT4_USE_OPENGL_X11=ON -DGEANT4_USE_QT=ON -DGEANT4_INSTALL_DATA=ON -DGEANT4_BUILD_MULTITHREADED=ON ..<br>make -j8<br>make install -j8<br></code></pre></td></tr></table></figure>\n<p>之后在 <code>~/.bashrc</code> 中添加一行：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-built_in\">source</span> (Geant4_directory)/bin/geant4.sh<br></code></pre></td></tr></table></figure>\n<h4 id=\"检验是否安装成功\"><a href=\"#检验是否安装成功\" class=\"headerlink\" title=\"检验是否安装成功\"></a><strong>检验是否安装成功</strong></h4><p>打开 <code>(Geant4_directory)/share/Geant4-(version_number)/examples/basic/B1</code>，执行：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">mkdir build<br><span class=\"hljs-built_in\">cd</span> ./build<br>cmake ..<br>make -j8<br>./exampleB1<br></code></pre></td></tr></table></figure>\n<p>如果出现图形交互界面，说明安装成功</p>\n<h3 id=\"Surface：能用上触控笔的软件（可选）\"><a href=\"#Surface：能用上触控笔的软件（可选）\" class=\"headerlink\" title=\"Surface：能用上触控笔的软件（可选）\"></a><strong>Surface：能用上触控笔的软件（可选）</strong></h3><h4 id=\"绘画\"><a href=\"#绘画\" class=\"headerlink\" title=\"绘画\"></a><strong>绘画</strong></h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">pamac install krita<br></code></pre></td></tr></table></figure>\n<h4 id=\"手写笔记\"><a href=\"#手写笔记\" class=\"headerlink\" title=\"手写笔记\"></a><strong>手写笔记</strong></h4><p>可以选择 Xournal++ 或者 Write</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">pamac install xournalpp<br>pamac install write_stylus<br></code></pre></td></tr></table></figure>\n<h3 id=\"Surface：屏幕键盘（可选）\"><a href=\"#Surface：屏幕键盘（可选）\" class=\"headerlink\" title=\"Surface：屏幕键盘（可选）\"></a><strong>Surface：屏幕键盘（可选）</strong></h3><p>目前最受欢迎的屏幕键盘应该是 OnBoard</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">pamac install onboard<br></code></pre></td></tr></table></figure>\n<p>但 OnBoard 在 Wayland 上无法使用。如果需要在 Wayland 会话中使用屏幕键盘，推荐安装 CellWriter</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">pamac install cellwriter<br></code></pre></td></tr></table></figure>\n<h2 id=\"参考资料\"><a href=\"#参考资料\" class=\"headerlink\" title=\"参考资料\"></a><strong>参考资料</strong></h2><p>BitLocker 恢复密钥</p>\n<p><a href=\"https://account.microsoft.com/devices/recoverykey?refd=account.microsoft.com\">https://account.microsoft.com/devices/recoverykey?refd=account.microsoft.com</a></p>\n<p>Windows 10 如何关闭快速启动</p>\n<p><a href=\"https://jingyan.baidu.com/article/ca00d56c7a40e6e99febcf4f.html\">https://jingyan.baidu.com/article/ca00d56c7a40e6e99febcf4f.html</a></p>\n<p>创建和使用 Surface 的 USB 恢复驱动器</p>\n<p><a href=\"https://support.microsoft.com/zh-cn/help/4023512/surface-creating-and-using-a-usb-recovery-drive\">https://support.microsoft.com/zh-cn/help/4023512/surface-creating-and-using-a-usb-recovery-drive</a></p>\n<p>下载 Surface 的恢复映像</p>\n<p><a href=\"https://support.microsoft.com/zh-cn/surfacerecoveryimage\">https://support.microsoft.com/zh-cn/surfacerecoveryimage</a></p>\n<p>下载 Windows 10 光盘映像</p>\n<p><a href=\"https://www.microsoft.com/zh-cn/software-download/windows10ISO\">https://www.microsoft.com/zh-cn/software-download/windows10ISO</a></p>\n<p>如何使用 Surface UEFI</p>\n<p><a href=\"https://support.microsoft.com/zh-cn/help/4023531/surface-how-to-use-surface-uefi\">https://support.microsoft.com/zh-cn/help/4023531/surface-how-to-use-surface-uefi</a></p>\n<p>Win 10 环境下安装 Manjaro KDE（双系统）</p>\n<p><a href=\"https://www.cnblogs.com/Jaywhen-xiang/p/11561661.html\">https://www.cnblogs.com/Jaywhen-xiang/p/11561661.html</a></p>\n<p>Manjaro 20 KDE 配置心得</p>\n<p><a href=\"https://blog.csdn.net/weixin_40293491/article/details/107526553\">https://blog.csdn.net/weixin_40293491/article/details/107526553</a></p>\n<p>Manjaro 安装体验小结</p>\n<p><a href=\"https://zhuanlan.zhihu.com/p/76608451\">https://zhuanlan.zhihu.com/p/76608451</a></p>\n<p>Manjaro 安装后你需要这样做</p>\n<p><a href=\"https://www.cnblogs.com/haohao77/p/9034499.html#11-%E9%85%8D%E7%BD%AE%E5%AE%98%E6%96%B9%E6%BA%90\">https://www.cnblogs.com/haohao77/p/9034499.html#11-%E9%85%8D%E7%BD%AE%E5%AE%98%E6%96%B9%E6%BA%90</a></p>\n<p>Manjaro Wiki — Pacman Overview</p>\n<p><a href=\"https://wiki.manjaro.org/index.php/Pacman_Overview\">https://wiki.manjaro.org/index.php/Pacman_Overview</a></p>\n<p>ArchWiki — Pacman</p>\n<p><a href=\"https://wiki.archlinux.org/index.php/Pacman\">https://wiki.archlinux.org/index.php/Pacman</a></p>\n<p>Manjaro Wiki — Pamac</p>\n<p><a href=\"https://wiki.manjaro.org/index.php/Pamac\">https://wiki.manjaro.org/index.php/Pamac</a></p>\n<p>GitHub — sudo pacman</p>\n<p><a href=\"https://github.com/Jguer/sudo\">https://github.com/Jguer/sudo</a> pacman</p>\n<p>Manjaro Wiki — Manjaro Hardware Detection Overview</p>\n<p><a href=\"https://wiki.manjaro.org/index.php/Manjaro_Hardware_Detection_Overview\">https://wiki.manjaro.org/index.php/Manjaro_Hardware_Detection_Overview</a></p>\n<p>Manjaro Wiki — Configure Graphics Cards</p>\n<p><a href=\"https://wiki.manjaro.org/index.php/Configure_Graphics_Cards\">https://wiki.manjaro.org/index.php/Configure_Graphics_Cards</a></p>\n<p>Manjaro Wiki — Manjaro Kernels</p>\n<p><a href=\"https://wiki.manjaro.org/index.php/Manjaro_Kernels\">https://wiki.manjaro.org/index.php/Manjaro_Kernels</a></p>\n<p>ArchWiki — Sudo (简体中文)</p>\n<p><a href=\"https://wiki.archlinux.org/index.php/Sudo_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87\">https://wiki.archlinux.org/index.php/Sudo_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87</a>)</p>\n<p>Manjaro Wiki — Switching Branches</p>\n<p><a href=\"https://wiki.manjaro.org/index.php?title=Switching_Branches\">https://wiki.manjaro.org/index.php?title=Switching_Branches</a></p>\n<p>在 Mac 上用 Openconnect 连接 Pulse Secure VPN</p>\n<p><a href=\"https://blog.yangl1996.com/post/use-openconnect-to-connect-to-pulse-secure-on-mac/\">https://blog.yangl1996.com/post/use-openconnect-to-connect-to-pulse-secure-on-mac/</a></p>\n<p>双系统下 Ubuntu 读写/挂载 Windows 中的硬盘文件 + 解决文件系统突然变成只读</p>\n<p><a href=\"https://jakting.com/archives/ubuntu-rw-windows-files.html\">https://jakting.com/archives/ubuntu-rw-windows-files.html</a></p>\n<p>修改 hosts 解决 GitHub 访问失败</p>\n<p><a href=\"https://zhuanlan.zhihu.com/p/107334179\">https://zhuanlan.zhihu.com/p/107334179</a></p>\n<p>Manjaro Linux Forum — Connect to internet from command-line as a beginner</p>\n<p><a href=\"https://forum.manjaro.org/t/howto-connect-to-internet-from-command-line-as-a-beginner/\">https://forum.manjaro.org/t/howto-connect-to-internet-from-command-line-as-a-beginner/</a></p>\n<p>Arch Wiki — XDG user directories</p>\n<p><a href=\"https://wiki.archlinux.org/index.php/XDG_user_directories\">https://wiki.archlinux.org/index.php/XDG_user_directories</a></p>\n<p>Arch Wiki — Cinnamon</p>\n<p><a href=\"https://wiki.archlinux.org/index.php/Cinnamon#Installation\">https://wiki.archlinux.org/index.php/Cinnamon#Installation</a></p>\n<p>Arch Wiki — Intel Graphics</p>\n<p><a href=\"https://wiki.archlinux.org/index.php/Intel_graphics#Installation\">https://wiki.archlinux.org/index.php/Intel_graphics#Installation</a></p>\n<p>KDE Community — Plasma 5.9 Errata</p>\n<p><a href=\"https://community.kde.org/Plasma/5.9_Errata#Intel_GPUs\">https://community.kde.org/Plasma/5.9_Errata#Intel_GPUs</a></p>\n<p>ArchWiki — Baloo</p>\n<p><a href=\"https://wiki.archlinux.org/index.php/Baloo\">https://wiki.archlinux.org/index.php/Baloo</a></p>\n<p>Arch Wiki — 关于 Logitech BLE 鼠标的问题</p>\n<p><a href=\"https://wiki.archlinux.org/index.php/Bluetooth_mouse#Problems_with_the_Logitech_BLE_mouse_(M557,_M590,_anywhere_mouse_2,_etc\">https://wiki.archlinux.org/index.php/Bluetooth_mouse#Problems_with_the_Logitech_BLE_mouse_(M557,_M590,_anywhere_mouse_2,_etc</a>)</p>\n<p>Linux-Surface — Installation and Setup</p>\n<p><a href=\"https://github.com/linux-surface/linux-surface/wiki/Installation-and-Setup\">https://github.com/linux-surface/linux-surface/wiki/Installation-and-Setup</a></p>\n<p>Arch Wiki — System time（简体中文）</p>\n<p><a href=\"https://wiki.archlinux.org/index.php/System_time_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87\">https://wiki.archlinux.org/index.php/System_time_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87</a>)</p>\n<p>KDE 桌面的 Mac 化</p>\n<p><a href=\"https://www.cnblogs.com/luoshuitianyi/p/10587788.html\">https://www.cnblogs.com/luoshuitianyi/p/10587788.html</a></p>\n<p>KDE 桌面美化指南</p>\n<p><a href=\"https://acherstyx.github.io/2020/06/30/KDE%E6%A1%8C%E9%9D%A2%E7%BE%8E%E5%8C%96%E6%8C%87%E5%8D%97/\">https://acherstyx.github.io/2020/06/30/KDE%E6%A1%8C%E9%9D%A2%E7%BE%8E%E5%8C%96%E6%8C%87%E5%8D%97/</a></p>\n<p>Oh-My-Zsh 及主题、插件的安装与配置</p>\n<p><a href=\"https://www.cnblogs.com/misfit/p/10694397.html\">https://www.cnblogs.com/misfit/p/10694397.html</a></p>\n<p>Linux GRUB 删除多余启动条目</p>\n<p><a href=\"https://blog.csdn.net/JackLiu16/article/details/80383969\">https://blog.csdn.net/JackLiu16/article/details/80383969</a></p>\n<p>AUR 镜像使用帮助</p>\n<p><a href=\"https://mirrors.tuna.tsinghua.edu.cn/help/AUR/\">https://mirrors.tuna.tsinghua.edu.cn/help/AUR/</a></p>\n<p>TUNA NTP (网络授时) 服务使用说明</p>\n<p><a href=\"https://tuna.moe/help/ntp/\">https://tuna.moe/help/ntp/</a></p>\n<p>SJTUG 软件源镜像服务</p>\n<p><a href=\"https://mirrors.sjtug.sjtu.edu.cn/#/\">https://mirrors.sjtug.sjtu.edu.cn/#/</a></p>\n<p>Manjaro 为包管理器 pacman 和 yaourt/sudo pacman 添加多线程下载</p>\n<p><a href=\"https://blog.csdn.net/dc90000/article/details/101752743?utm_medium=distribute.wap_relevant.none-task-blog-OPENSEARCH-6.nonecase&amp;depth_1-utm_source=distribute.wap_relevant.none-task-blog-OPENSEARCH-6.nonecase\">https://blog.csdn.net/dc90000/article/details/101752743?utm_medium=distribute.wap_relevant.none-task-blog-OPENSEARCH-6.nonecase&amp;depth_1-utm_source=distribute.wap_relevant.none-task-blog-OPENSEARCH-6.nonecase</a></p>\n<p>ArchWiki — Microsoft fonts（简体中文）</p>\n<p><a href=\"https://wiki.archlinux.org/index.php/Microsoft_fonts_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87\">https://wiki.archlinux.org/index.php/Microsoft_fonts_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87</a>)</p>\n<p>Archlinux 使用 Windows 字体及相关配置</p>\n<p><a href=\"https://blog.csdn.net/sinat_33528967/article/details/93380729\">https://blog.csdn.net/sinat_33528967/article/details/93380729</a></p>\n<p>ArchWiki — Fcitx5 (简体中文)</p>\n<p><a href=\"https://wiki.archlinux.org/index.php/Fcitx5_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87\">https://wiki.archlinux.org/index.php/Fcitx5_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87</a>)</p>\n<p>Archived Manjaro Forum — 比较几种中文输入法后，我最终选择了 sunpinyin + cloudpinyin 组合</p>\n<p><a href=\"https://archived.forum.manjaro.org/t/sunpinyin-cloudpinyin/114282\">https://archived.forum.manjaro.org/t/sunpinyin-cloudpinyin/114282</a></p>\n<p>Acquiring TeX Live as an ISO image</p>\n<p><a href=\"https://www.tug.org/texlive/acquire-iso.html\">https://www.tug.org/texlive/acquire-iso.html</a></p>\n<p>TeX Live - Quick install</p>\n<p><a href=\"https://www.tug.org/texlive/quickinstall.html\">https://www.tug.org/texlive/quickinstall.html</a></p>\n<p>TeX Live Documentation — TeXLive Installation</p>\n<p><a href=\"https://www.tug.org/texlive/doc/texlive-en/texlive-en.html#installation\">https://www.tug.org/texlive/doc/texlive-en/texlive-en.html#installation</a></p>\n<p>Font size of mailbox is too small</p>\n<p><a href=\"https://support.mozilla.org/zh-CN/questions/1297871\">https://support.mozilla.org/zh-CN/questions/1297871</a></p>\n<p>Anaconda Documentation — Installing on Linux</p>\n<p><a href=\"https://docs.anaconda.com/anaconda/install/linux/\">https://docs.anaconda.com/anaconda/install/linux/</a></p>\n<p>恢复 Anaconda 环境, 卸载 Anaconda, 重装 Anaconda</p>\n<p><a href=\"https://blog.csdn.net/wangweiwells/article/details/88374361\">https://blog.csdn.net/wangweiwells/article/details/88374361</a></p>\n<p>Geant4 — Building and Installing from Source</p>\n<p><a href=\"https://geant4-userdoc.web.cern.ch/UsersGuides/InstallationGuide/html/installguide.html\">https://geant4-userdoc.web.cern.ch/UsersGuides/InstallationGuide/html/installguide.html</a></p>\n<p>Geant4 — Postinstall Setup</p>\n<p><a href=\"https://geant4-userdoc.web.cern.ch/UsersGuides/InstallationGuide/html/postinstall.html\">https://geant4-userdoc.web.cern.ch/UsersGuides/InstallationGuide/html/postinstall.html</a></p>\n<p>Geant4 基础 — 准备与安装</p>\n<p><a href=\"https://zhuanlan.zhihu.com/p/135917392\">https://zhuanlan.zhihu.com/p/135917392</a></p>\n<p>Linux ate my RAM!</p>\n<p><a href=\"https://www.linuxatemyram.com/\">https://www.linuxatemyram.com/</a></p>\n"}],"PostAsset":[],"PostCategory":[{"post_id":"ckvl6t11d0001jbn3an8dbb1n","category_id":"ckvl6t11h0004jbn31ske5s3y","_id":"ckvl6t11n000ajbn382pi7xss"},{"post_id":"ckvl6t11g0003jbn3fdej519w","category_id":"ckvl6t11m0008jbn37k1hc8ke","_id":"ckvl6t11p000fjbn33psva8sj"},{"post_id":"ckvl6t11k0007jbn3e0v161i8","category_id":"ckvl6t11h0004jbn31ske5s3y","_id":"ckvl6t11q000ijbn37zs458eb"}],"PostTag":[{"post_id":"ckvl6t11d0001jbn3an8dbb1n","tag_id":"ckvl6t11j0005jbn30zd85vfm","_id":"ckvl6t11p000djbn34ad0dzzq"},{"post_id":"ckvl6t11d0001jbn3an8dbb1n","tag_id":"ckvl6t11m0009jbn33vpq1l0t","_id":"ckvl6t11p000ejbn30vxz46iz"},{"post_id":"ckvl6t11g0003jbn3fdej519w","tag_id":"ckvl6t11n000cjbn3eijaa6dn","_id":"ckvl6t11p000hjbn3bl576z9r"},{"post_id":"ckvl6t11k0007jbn3e0v161i8","tag_id":"ckvl6t11p000gjbn35l4r60r0","_id":"ckvl6t11q000kjbn33jfu3wm7"},{"post_id":"ckvl6t11k0007jbn3e0v161i8","tag_id":"ckvl6t11q000jjbn3ahaqaxn7","_id":"ckvl6t11q000ljbn3f48pe6vw"}],"Tag":[{"name":"Hello World","_id":"ckvl6t11j0005jbn30zd85vfm"},{"name":"Blog","_id":"ckvl6t11m0009jbn33vpq1l0t"},{"name":"Calculator","_id":"ckvl6t11n000cjbn3eijaa6dn"},{"name":"Manjaro","_id":"ckvl6t11p000gjbn35l4r60r0"},{"name":"Linux","_id":"ckvl6t11q000jjbn3ahaqaxn7"}]}}